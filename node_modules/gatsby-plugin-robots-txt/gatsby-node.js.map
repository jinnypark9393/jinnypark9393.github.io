{"version":3,"sources":["src/gatsby-node.js"],"names":["publicPath","defaultEnv","defaultOptions","output","query","runQuery","handler","then","res","errors","Error","join","data","getOptions","pluginOptions","options","plugins","env","resolveEnv","process","GATSBY_ACTIVE_ENV","NODE_ENV","envOptions","onPostBuild","graphql","pathPrefix","userOptions","mergedOptions","host","Object","prototype","hasOwnProperty","call","site","siteMetadata","siteUrl","sitemap","URL","path","posix","toString","startsWith","policy","configFile","content","filename","fsp","writeFile","resolve"],"mappings":"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","sourcesContent":["import fsp from 'fs/promises';\nimport robotsTxt from 'generate-robotstxt';\nimport path from 'path';\n\nconst publicPath = './public';\nconst defaultEnv = 'development';\nconst defaultOptions = {\n  output: '/robots.txt',\n  query: `{\n    site {\n      siteMetadata {\n        siteUrl\n      }\n    }\n  }`\n};\n\nfunction runQuery(handler, query) {\n  return handler(query).then(res => {\n    if (res.errors) {\n      throw new Error(res.errors.join(', '));\n    }\n\n    return res.data;\n  });\n}\n\nconst getOptions = pluginOptions => {\n  const options = { ...pluginOptions };\n\n  delete options.plugins;\n\n  const { env = {}, resolveEnv = () => process.env.GATSBY_ACTIVE_ENV || process.env.NODE_ENV } = options;\n\n  const envOptions = env[resolveEnv()] || env[defaultEnv] || {};\n\n  delete options.env;\n  delete options.resolveEnv;\n\n  return { ...options, ...envOptions };\n};\n\nexport async function onPostBuild({ graphql, pathPrefix = \"\" }, pluginOptions) {\n  const userOptions = getOptions(pluginOptions);\n  const mergedOptions = { ...defaultOptions, ...userOptions };\n\n  if(mergedOptions.host !== null) {\n    if (\n      !Object.prototype.hasOwnProperty.call(mergedOptions, 'host')\n    ) {\n      const {\n        site: {\n          siteMetadata: { siteUrl }\n        }\n      } = await runQuery(graphql, mergedOptions.query);\n\n      mergedOptions.host = siteUrl;\n    }\n  }\n\n  if(mergedOptions.sitemap !== null) {\n    if (\n      !Object.prototype.hasOwnProperty.call(mergedOptions, 'sitemap')\n    ) {\n\n      mergedOptions.sitemap = new URL(path.posix.join(pathPrefix, 'sitemap', 'sitemap-index.xml'), mergedOptions.host).toString();\n    } else {\n      try {\n        new URL(mergedOptions.sitemap)\n      } catch {\n        mergedOptions.sitemap = new URL(mergedOptions.sitemap.startsWith(pathPrefix) ? mergedOptions.sitemap : path.posix.join(pathPrefix, mergedOptions.sitemap), mergedOptions.host).toString()\n      }\n    }\n  }\n\n  const { policy, sitemap, host, output, configFile } = mergedOptions;\n\n  const content = await robotsTxt({\n    policy,\n    sitemap,\n    host,\n    configFile\n  });\n  const filename = path.join(publicPath, output);\n\n  return fsp.writeFile(path.resolve(filename), content);\n}\n"],"file":"gatsby-node.js"}