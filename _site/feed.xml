<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-10T05:46:24+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">release: canary</title><subtitle>어쩌다 데브옵스 엔지니어가 된 문과생의 기록용 블로그</subtitle><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 23일차</title><link href="http://localhost:4000/programming/Python-Day23/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 23일차" /><published>2022-05-10T00:00:00+09:00</published><updated>2022-05-10T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day23</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day23/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 8-3. 상속을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-10-Python-Photo/2022-05-10-Python-Photo1.jpg" alt="2022-05-10-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-10-Python-Photo/2022-05-10-Python-Photo2.jpg" alt="2022-05-10-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="03-상속">03. 상속</h1>

<h2 id="1-상속의-개념">1. 상속의 개념</h2>

<ul>
  <li>자식클래스는 부모클래스의 속성과 메서드를 그대로 가져올 수 있다.</li>
</ul>

<p><img src="/assets/images/2022-05-10-Python-Photo/2022-05-10-Python-Photo3.png" alt="2022-05-10-Python-Photo3" /></p>

<p><br /></p>

<ul>
  <li>상속이 필요한 이유: 클래스를 하나하나 설정하게 될 경우 관리포인트가 너무 많아진다.</li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>예시</p>

    <p><img src="/assets/images/2022-05-10-Python-Photo/2022-05-10-Python-Photo4.png" alt="2022-05-10-Python-Photo3" /></p>
  </li>
  <li>
    <p>‘몬스터’ 관련코드가 중복으로 발생 ⇒ 중복을 없애 효율적으로 만드는 방법은?</p>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>세 클래스의 공통된 부분을 합쳐 ‘몬스터’라는 클래스를 생성한 뒤 상속하여 중복을 없애 코드를 간결하게 작성할 수 있다.</li>
</ul>

<p><img src="/assets/images/2022-05-10-Python-Photo/2022-05-10-Python-Photo5.png" alt="2022-05-10-Python-Photo3" /></p>

<p><br /><br /></p>

<h2 id="2-상속-사용-방법">2. 상속 사용 방법</h2>

<ul>
  <li>위 예시를 코드로 작성해보자.</li>
  <li>먼저, 부모클래스를 정의해보자</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"지상에서 이동하기"</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>속성
    <ul>
      <li>이름</li>
      <li>체력</li>
      <li>공격력</li>
    </ul>
  </li>
  <li>메서드
    <ul>
      <li>이동하기</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>자식클래스 정의(<code class="language-plaintext highlighter-rouge">__init__</code> 는 생략 가능)</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Wolf</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">pass</span> <span class="c1"># 상속 받은 메서드만 사용
</span>
<span class="k">class</span> <span class="nc">Shark</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"헤엄치기"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Dragon</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"날기"</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>속성 (Monster 로부터 상속받은)
    <ul>
      <li>이름</li>
      <li>체력</li>
      <li>공격력</li>
    </ul>
  </li>
  <li>메서드 오버라이딩: 메서드 재 정의
    <ul>
      <li>헤엄치기</li>
      <li>날기</li>
    </ul>
  </li>
</ul>

<p><br /><br /></p>

<h2 id="3-실습">3. 실습</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 상속
# : 클래스들에 중복된 코드를 제거하고 유지보수를
#    편하게 하기 위해 사용
</span>
<span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s">] 지상에서 이동하기"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Wolf</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">pass</span>

<span class="k">class</span> <span class="nc">Shark</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="c1"># 메서드 오버라이딩
</span>        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s">] 헤엄치기"</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Dragon</span><span class="p">(</span><span class="n">Monster</span><span class="p">):</span>
    <span class="k">def</span> <span class="nf">move</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="c1"># 메서드 오버라이딩
</span>        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"[</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s">] 날기"</span><span class="p">)</span>

<span class="n">wolf</span> <span class="o">=</span> <span class="n">Wolf</span><span class="p">(</span><span class="s">"울프"</span><span class="p">,</span> <span class="mi">1500</span><span class="p">,</span> <span class="mi">200</span><span class="p">)</span>
<span class="n">wolf</span><span class="p">.</span><span class="n">move</span><span class="p">()</span>

<span class="n">shark</span> <span class="o">=</span> <span class="n">Shark</span><span class="p">(</span><span class="s">"샤크"</span><span class="p">,</span> <span class="mi">300</span><span class="p">,</span> <span class="mi">400</span><span class="p">)</span>
<span class="n">shark</span><span class="p">.</span><span class="n">move</span><span class="p">()</span>

<span class="n">dragon</span> <span class="o">=</span> <span class="n">Dragon</span><span class="p">(</span><span class="s">"드래곤"</span><span class="p">,</span> <span class="mi">8000</span><span class="p">,</span><span class="mi">800</span><span class="p">)</span>
<span class="n">dragon</span><span class="p">.</span><span class="n">move</span><span class="p">()</span>
</code></pre></div></div>

<p><br /><br /></p>

<p>이번 포스팅에서는 상속의 개념에 대해 알아보았다. 다음 포스팅에서는 오버라이딩, 클래스 변수에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 23일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 22일차</title><link href="http://localhost:4000/programming/Python-Day22/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 22일차" /><published>2022-05-09T00:00:00+09:00</published><updated>2022-05-09T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day22</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day22/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 8-2. 생성자를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo1.jpg" alt="2022-05-09-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo2.jpg" alt="2022-05-09-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="1-생성자">1. 생성자</h1>

<h2 id="1-클래스와-객체의-개념">1. 클래스와 객체의 개념</h2>

<ul>
  <li>
    <p>클래스 = 속성 + 메서드(method)</p>

    <p><img src="/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo3.png" alt="2022-05-09-Python-Photo3" /></p>

    <ul>
      <li>속성: 특징들을 나타낸 것</li>
      <li>메서드: 동작들을 나타낸 것</li>
    </ul>

    <p><br /></p>
  </li>
</ul>

<h2 id="2-속성-추가하기">2. 속성 추가하기</h2>

<ul>
  <li>
    <p>Monster 클래스에 속성을 추가해보자.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
      <span class="k">def</span> <span class="nf">say</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
          <span class="k">print</span><span class="p">(</span><span class="s">"나는 몬스터다"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>1. 체력
2. 공격력
3. 이동속도
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">,</span> <span class="n">speed</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">speed</span>

<span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span> <span class="c1">#인스턴스 생성 시점
</span><span class="n">wolf</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">350</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">__init__</code> : 인스턴스를 만들 때 반드시, 가장먼저 호출되는 메서드</li>
  <li>goblin 인스턴스를 생성할때, 800, 120, 300는 <code class="language-plaintext highlighter-rouge">__init__</code> 메서드의 인자(argument)로 들어가게 된다.</li>
  <li><code class="language-plaintext highlighter-rouge">self</code> : 인스턴스 자기자신을 뜻함. 매개변수 아님.</li>
</ul>

<p><br /><br /></p>

<h2 id="3-메서드-추가하기">3. 메서드 추가하기</h2>

<ul>
  <li>
    <p>Monster 클래스에 메서드를 추가해보자.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
      <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">,</span> <span class="n">speed</span><span class="p">):</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">speed</span>
    
  <span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
  <span class="n">wolf</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">350</span><span class="p">)</span>
</code></pre></div>    </div>

    <ol>
      <li>체력 감소하기</li>
      <li>체력 가져오기</li>
    </ol>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>추가 메서드를 적용하면 아래와 같다.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
      <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">,</span> <span class="n">speed</span><span class="p">):</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">speed</span>
      <span class="k">def</span> <span class="nf">decrease_health</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">num</span><span class="p">):</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">-=</span> <span class="n">num</span>
      <span class="k">def</span> <span class="nf">get_health</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
          <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">health</span>
    
  <span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
    
  <span class="n">goblin</span><span class="p">.</span><span class="n">decrease_health</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="n">gobling</span><span class="p">.</span><span class="n">get_health</span><span class="p">())</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><br /></p>

<h2 id="4-실습">4. 실습</h2>

<ul>
  <li>
    <p>위에서 배운 내용을 실제 vscode에 입력해보자.</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># 생성자
</span>  <span class="c1"># : 인스턴스를 만들 때 호출되는 메서드
</span>    
  <span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
      <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">,</span> <span class="n">speed</span><span class="p">):</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">speed</span>
      <span class="k">def</span> <span class="nf">decrease_health</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">num</span><span class="p">):</span>
          <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">-=</span> <span class="n">num</span>
      <span class="k">def</span> <span class="nf">get_health</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
          <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">health</span>
    
  <span class="c1"># 고블린 인스턴스 생성
</span>  <span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
  <span class="n">goblin</span><span class="p">.</span><span class="n">decrease_health</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
  <span class="k">print</span><span class="p">(</span><span class="n">goblin</span><span class="p">.</span><span class="n">get_health</span><span class="p">())</span>
</code></pre></div>    </div>
    <p><br /></p>
  </li>
  <li>
    <p>출력 결과</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">03.</span><span class="n">생성자</span><span class="p">.</span><span class="n">py</span>
<span class="mi">700</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>늑대 인스턴스를 추가로 생성해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 생성자
# : 인스턴스를 만들 때 호출되는 메서드
</span>
<span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">,</span> <span class="n">speed</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">speed</span> <span class="o">=</span> <span class="n">speed</span>
    <span class="k">def</span> <span class="nf">decrease_health</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">num</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">-=</span> <span class="n">num</span>
    <span class="k">def</span> <span class="nf">get_health</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="p">.</span><span class="n">health</span>

<span class="c1"># 고블린 인스턴스 생성
</span><span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">800</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="mi">300</span><span class="p">)</span>
<span class="n">goblin</span><span class="p">.</span><span class="n">decrease_health</span><span class="p">(</span><span class="mi">100</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">goblin</span><span class="p">.</span><span class="n">get_health</span><span class="p">())</span>

<span class="c1"># 늑대 인스턴스 생성
</span><span class="n">wolf</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">(</span><span class="mi">1500</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="mi">350</span><span class="p">)</span>
<span class="n">wolf</span><span class="p">.</span><span class="n">decrease_health</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">wolf</span><span class="p">.</span><span class="n">get_health</span><span class="p">())</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">03.</span><span class="n">생성자</span><span class="p">.</span><span class="n">py</span>
<span class="mi">700</span>
<span class="mi">500</span>
</code></pre></div></div>

<ul>
  <li>늑대 인스턴스에 health = 1500, attack = 200, speed = 350이 할당</li>
  <li>decrease_health 함수로 health가 1000이 감소</li>
  <li>get_health 함수로 현재 health값 저장 및 print로 출력</li>
</ul>

<p><br /><br /></p>

<p>이번 포스팅에서는 생성자의 개념에 대해 알아보았다. 다음 포스팅에서는 상속에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 22일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 21일차</title><link href="http://localhost:4000/programming/Python-Day21/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 21일차" /><published>2022-05-08T00:00:00+09:00</published><updated>2022-05-08T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day21</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day21/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 7-2. 딕셔너리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo1.jpg" alt="2022-05-08-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo2.jpg" alt="2022-05-08-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="1-클래스와-객체">1. 클래스와 객체</h1>

<h2 id="1-클래스와-객체의-개념">1. 클래스와 객체의 개념</h2>

<ul>
  <li>클래스: 객체를 만들기 위한 <strong>설계도</strong></li>
  <li>객체: 설계도로부터 만들어낸 <strong>제품</strong></li>
</ul>

<p><br /></p>

<ul>
  <li>실습</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 클래스를 사용하는 이유
</span><span class="n">champion1_name</span> <span class="o">=</span> <span class="s">"이즈리얼"</span>
<span class="n">champion1_health</span> <span class="o">=</span> <span class="mi">700</span>
<span class="n">champion1_attack</span> <span class="o">=</span> <span class="mi">90</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">champion1_name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>

<span class="n">champion2_name</span> <span class="o">=</span> <span class="s">"리신"</span>
<span class="n">champion2_health</span> <span class="o">=</span> <span class="mi">800</span>
<span class="n">champion2_attack</span> <span class="o">=</span> <span class="mi">95</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">champion2_name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">basic_attack</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s"> 기본공격 </span><span class="si">{</span><span class="n">attack</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">basic_attack</span><span class="p">(</span><span class="n">champion1_name</span><span class="p">,</span> <span class="n">champion1_attack</span><span class="p">)</span>
<span class="n">basic_attack</span><span class="p">(</span><span class="n">champion2_name</span><span class="p">,</span> <span class="n">champion2_attack</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">01.</span><span class="n">클래스개념</span><span class="p">.</span><span class="n">py</span>
<span class="n">이즈리얼님</span> <span class="n">소환사의</span> <span class="n">협곡에</span> <span class="n">오신것을</span> <span class="n">환영합니다</span><span class="p">.</span>
<span class="n">리신님</span> <span class="n">소환사의</span> <span class="n">협곡에</span> <span class="n">오신것을</span> <span class="n">환영합니다</span><span class="p">.</span>
<span class="n">이즈리얼</span> <span class="n">기본공격</span> <span class="mi">90</span>
<span class="n">리신</span> <span class="n">기본공격</span> <span class="mi">95</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>위의 프로그램을 클래스로 만들어보자</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"=============클래스를 사용한 경우============="</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Champion</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">basic_attack</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s"> 기본공격 </span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">attack</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">ezreal</span> <span class="o">=</span> <span class="n">Champion</span><span class="p">(</span><span class="s">"이즈리얼"</span><span class="p">,</span> <span class="mi">700</span><span class="p">,</span> <span class="mi">90</span><span class="p">)</span>
<span class="n">leesin</span> <span class="o">=</span> <span class="n">Champion</span><span class="p">(</span><span class="s">"리신"</span><span class="p">,</span> <span class="mi">800</span><span class="p">,</span> <span class="mi">95</span><span class="p">)</span>
<span class="n">ezreal</span><span class="p">.</span><span class="n">basic_attack</span><span class="p">()</span>
<span class="n">leesin</span><span class="p">.</span><span class="n">basic_attack</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>챔피언을 하나 더 추가해야하는 경우: <strong>클래스 미사용</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 클래스를 사용하는 이유
</span><span class="n">champion1_name</span> <span class="o">=</span> <span class="s">"이즈리얼"</span>
<span class="n">champion1_health</span> <span class="o">=</span> <span class="mi">700</span>
<span class="n">champion1_attack</span> <span class="o">=</span> <span class="mi">90</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">champion1_name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>

<span class="n">champion2_name</span> <span class="o">=</span> <span class="s">"리신"</span>
<span class="n">champion2_health</span> <span class="o">=</span> <span class="mi">800</span>
<span class="n">champion2_attack</span> <span class="o">=</span> <span class="mi">95</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">champion2_name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>

<span class="c1">#### 추가 및 수정이 필요한 부분 ####
</span><span class="n">champion3_name</span> <span class="o">=</span> <span class="s">"야스오"</span>
<span class="n">champion3_health</span> <span class="o">=</span> <span class="mi">750</span>
<span class="n">champion3_attack</span> <span class="o">=</span> <span class="mi">92</span>

<span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">champion3_name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>
<span class="c1">#### /추가 및 수정이 필요한 부분 ####
</span>
<span class="k">def</span> <span class="nf">basic_attack</span><span class="p">(</span><span class="n">name</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s"> 기본공격 </span><span class="si">{</span><span class="n">attack</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">basic_attack</span><span class="p">(</span><span class="n">champion1_name</span><span class="p">,</span> <span class="n">champion1_attack</span><span class="p">)</span>
<span class="n">basic_attack</span><span class="p">(</span><span class="n">champion2_name</span><span class="p">,</span> <span class="n">champion2_attack</span><span class="p">)</span>
<span class="n">basic_attack</span><span class="p">(</span><span class="n">champion3_name</span><span class="p">,</span> <span class="n">champion3_attack</span><span class="p">)</span> <span class="c1">#### 추가 및 수정이 필요한 부분
</span></code></pre></div></div>

<p><br /></p>

<ul>
  <li>챔피언을 하나 더 추가해야하는 경우: <strong>클래스 사용</strong></li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="s">"=============클래스를 사용한 경우============="</span><span class="p">)</span>

<span class="k">class</span> <span class="nc">Champion</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">name</span><span class="p">,</span> <span class="n">health</span><span class="p">,</span> <span class="n">attack</span><span class="p">):</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">name</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">health</span> <span class="o">=</span> <span class="n">health</span>
        <span class="bp">self</span><span class="p">.</span><span class="n">attack</span> <span class="o">=</span> <span class="n">attack</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s">님 소환사의 협곡에 오신것을 환영합니다."</span><span class="p">)</span>
    <span class="k">def</span> <span class="nf">basic_attack</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">name</span><span class="si">}</span><span class="s"> 기본공격 </span><span class="si">{</span><span class="bp">self</span><span class="p">.</span><span class="n">attack</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">ezreal</span> <span class="o">=</span> <span class="n">Champion</span><span class="p">(</span><span class="s">"이즈리얼"</span><span class="p">,</span> <span class="mi">700</span><span class="p">,</span> <span class="mi">90</span><span class="p">)</span>
<span class="n">leesin</span> <span class="o">=</span> <span class="n">Champion</span><span class="p">(</span><span class="s">"리신"</span><span class="p">,</span> <span class="mi">800</span><span class="p">,</span> <span class="mi">95</span><span class="p">)</span>
<span class="n">yasuo</span> <span class="o">=</span> <span class="n">Champion</span><span class="p">(</span><span class="s">"야스오"</span><span class="p">,</span> <span class="mi">750</span><span class="p">,</span> <span class="mi">92</span><span class="p">)</span> <span class="c1"># 추가 및 수정이 필요한 부분
</span>
<span class="n">ezreal</span><span class="p">.</span><span class="n">basic_attack</span><span class="p">()</span>
<span class="n">leesin</span><span class="p">.</span><span class="n">basic_attack</span><span class="p">()</span>
<span class="n">yasuo</span><span class="p">.</span><span class="n">basic_attack</span><span class="p">()</span> <span class="c1"># 추가 및 수정이 필요한 부분
</span></code></pre></div></div>

<p><br /></p>

<ul>
  <li>
    <p>클래스를 사용하면 단 두줄만 수정하면 된다 ⇒ 객체를 많이 생산해내야 할 수 록 클래스 사용이 효율적</p>
  </li>
  <li>
    <p>클래스 = 속성 + 메서드(method)</p>

    <p><img src="/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo3.png" alt="2022-05-08-Python-Photo3" /></p>

    <ul>
      <li>속성: 특징들을 나타낸 것</li>
      <li>메서드: 동작들을 나타낸 것</li>
    </ul>
  </li>
</ul>

<p><br /><br /></p>

<h2 id="2-클래스-만들기">2. 클래스 만들기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">클래스이름</span>
    <span class="k">def</span> <span class="nf">메서드이름</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
       <span class="n">명령블록</span>

<span class="c1"># 예시
</span><span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">say</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"나는 몬스터다"</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>만든 클래스를 호출하기</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 호출하기
</span><span class="n">인스턴스</span> <span class="o">=</span> <span class="n">클래스이름</span><span class="p">()</span>
<span class="n">인스턴스</span><span class="p">.</span><span class="n">메서드</span><span class="p">()</span>

<span class="c1"># 예시
</span><span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">()</span>
<span class="n">goblin</span><span class="p">.</span><span class="n">say</span><span class="p">()</span>
</code></pre></div></div>

<ul>
  <li>인스턴스: 클래스와 연관지어 표현할 때 자주 사용하는 표현(객체와 유사)</li>
</ul>

<p><br /><br /></p>

<h2 id="3-실습">3. 실습</h2>

<ul>
  <li>파이썬에서는 자료형도 클래스다</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">Monster</span><span class="p">:</span>
    <span class="k">def</span> <span class="nf">say</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">print</span><span class="p">(</span><span class="s">"나는 몬스터다!"</span><span class="p">)</span>

<span class="n">goblin</span> <span class="o">=</span> <span class="n">Monster</span><span class="p">()</span>
<span class="n">goblin</span><span class="p">.</span><span class="n">say</span><span class="p">()</span>

<span class="c1"># 파이썬에서는 자료형도 클래스다
</span><span class="n">a</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">b</span> <span class="o">=</span> <span class="s">"문자열객체"</span>
<span class="n">c</span> <span class="o">=</span> <span class="bp">True</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>결과 출력</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">02.</span><span class="n">클래스만들기</span><span class="p">.</span><span class="n">py</span>
<span class="n">나는</span> <span class="n">몬스터다</span><span class="err">!</span>
<span class="o">&lt;</span><span class="k">class</span> <span class="err">'</span><span class="nc">int</span><span class="s">'&gt;
&lt;class '</span><span class="nb">str</span><span class="s">'&gt;
&lt;class '</span><span class="nb">bool</span><span class="s">'&gt;
</span></code></pre></div></div>

<p><br /></p>

<ul>
  <li>각 자료형이 class로 출력되는 것을 알 수 있다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">.</span><span class="n">__dir__</span><span class="p">())</span>
</code></pre></div></div>

<ul>
  <li>문자열 객체에 대해 생성할 수 있는 메서드 확인</li>
</ul>

<p><br /></p>

<ul>
  <li>출력 확인</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="p">[</span><span class="s">'__new__'</span><span class="p">,</span> <span class="s">'__repr__'</span><span class="p">,</span> <span class="s">'__hash__'</span><span class="p">,</span> <span class="s">'__str__'</span><span class="p">,</span> <span class="s">'__getattribute__'</span><span class="p">,</span> <span class="s">'__lt__'</span><span class="p">,</span> <span class="s">'__le__'</span><span class="p">,</span> <span class="s">'__eq__'</span><span class="p">,</span> <span class="s">'__ne__'</span><span class="p">,</span> <span class="s">'__gt__'</span><span class="p">,</span> <span class="s">'__ge__'</span><span class="p">,</span> <span class="s">'__iter__'</span><span class="p">,</span> <span class="s">'__mod__'</span><span class="p">,</span> <span class="s">'__rmod__'</span><span class="p">,</span> <span class="s">'__len__'</span><span class="p">,</span> <span class="s">'__getitem__'</span><span class="p">,</span> <span class="s">'__add__'</span><span class="p">,</span> <span class="s">'__mul__'</span><span class="p">,</span> <span class="s">'__rmul__'</span><span class="p">,</span> <span class="s">'__contains__'</span><span class="p">,</span> <span class="s">'encode'</span><span class="p">,</span> <span class="s">'replace'</span><span class="p">,</span> <span class="s">'split'</span><span class="p">,</span> <span class="s">'rsplit'</span><span class="p">,</span> <span class="s">'join'</span><span class="p">,</span> <span class="s">'capitalize'</span><span class="p">,</span> <span class="s">'casefold'</span><span class="p">,</span> <span class="s">'title'</span><span class="p">,</span> <span class="s">'center'</span><span class="p">,</span> <span class="s">'count'</span><span class="p">,</span> <span class="s">'expandtabs'</span><span class="p">,</span> <span class="s">'find'</span><span class="p">,</span> <span class="s">'partition'</span><span class="p">,</span> <span class="s">'index'</span><span class="p">,</span> <span class="s">'ljust'</span><span class="p">,</span> <span class="s">'lower'</span><span class="p">,</span> <span class="s">'lstrip'</span><span class="p">,</span> <span class="s">'rfind'</span><span class="p">,</span> <span class="s">'rindex'</span><span class="p">,</span> <span class="s">'rjust'</span><span class="p">,</span> <span class="s">'rstrip'</span><span class="p">,</span> <span class="s">'rpartition'</span><span class="p">,</span> <span class="s">'splitlines'</span><span class="p">,</span> <span class="s">'strip'</span><span class="p">,</span> <span class="s">'swapcase'</span><span class="p">,</span> <span class="s">'translate'</span><span class="p">,</span> <span class="s">'upper'</span><span class="p">,</span> <span class="s">'startswith'</span><span class="p">,</span> <span class="s">'endswith'</span><span class="p">,</span> <span class="s">'removeprefix'</span><span class="p">,</span> <span class="s">'removesuffix'</span><span class="p">,</span> <span class="s">'isascii'</span><span class="p">,</span> <span class="s">'islower'</span><span class="p">,</span> <span class="s">'isupper'</span><span class="p">,</span> <span class="s">'istitle'</span><span class="p">,</span> <span class="s">'isspace'</span><span class="p">,</span> <span class="s">'isdecimal'</span><span class="p">,</span> <span class="s">'isdigit'</span><span class="p">,</span> <span class="s">'isnumeric'</span><span class="p">,</span> <span class="s">'isalpha'</span><span class="p">,</span> <span class="s">'isalnum'</span><span class="p">,</span> <span class="s">'isidentifier'</span><span class="p">,</span> <span class="s">'isprintable'</span><span class="p">,</span> <span class="s">'zfill'</span><span class="p">,</span> <span class="s">'format'</span><span class="p">,</span> <span class="s">'format_map'</span><span class="p">,</span> <span class="s">'__format__'</span><span class="p">,</span> <span class="s">'maketrans'</span><span class="p">,</span> <span class="s">'__sizeof__'</span><span class="p">,</span> <span class="s">'__getnewargs__'</span><span class="p">,</span> <span class="s">'__doc__'</span><span class="p">,</span> <span class="s">'__setattr__'</span><span class="p">,</span> <span class="s">'__delattr__'</span><span class="p">,</span> <span class="s">'__init__'</span><span class="p">,</span> <span class="s">'__reduce_ex__'</span><span class="p">,</span> <span class="s">'__reduce__'</span><span class="p">,</span> <span class="s">'__subclasshook__'</span><span class="p">,</span> <span class="s">'__init_subclass__'</span><span class="p">,</span> <span class="s">'__dir__'</span><span class="p">,</span> <span class="s">'__class__'</span><span class="p">]</span>
</code></pre></div></div>

<p><br /><br /></p>

<p>이번 포스팅에서는 클래스와 객체의 개념에 대해 알아보았다. 다음 포스팅에서는 생성자에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 21일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 20일차</title><link href="http://localhost:4000/programming/Python-Day20/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 20일차" /><published>2022-05-07T00:00:00+09:00</published><updated>2022-05-07T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day20</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day20/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 7-2. 딕셔너리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-07-Python-Photo/2022-05-07-Python-Photo1.jpg" alt="2022-05-07-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-07-Python-Photo/2022-05-07-Python-Photo2.jpg" alt="2022-05-07-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="02-딕셔너리">02. 딕셔너리</h1>

<h2 id="1-딕셔너리의-특징">1. 딕셔너리의 특징</h2>

<ul>
  <li>시퀀스 자료형</li>
  <li>키와 데이터를 가지고 있는 사전형 자료형</li>
  <li>사전형태의 자료를 만들 때 편리</li>
</ul>

<p><br /><br /></p>

<h2 id="2-딕셔너리-만들기">2. 딕셔너리 만들기</h2>

<ul>
  <li>딕셔너리를 만들어보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">딕셔너리</span> <span class="o">=</span> <span class="p">{</span><span class="n">키1</span> <span class="p">:</span> <span class="n">데이터1</span><span class="p">,</span> <span class="n">키2</span> <span class="p">:</span> <span class="n">데이터2</span><span class="p">}</span>

<span class="c1"># 예시
</span><span class="n">stock</span> <span class="o">=</span> <span class="p">{</span><span class="s">"삼성전자"</span> <span class="p">:</span> <span class="mi">82000</span><span class="p">,</span> <span class="s">"LG전자"</span> <span class="p">:</span> <span class="mi">150000</span><span class="p">}</span>

<span class="c1"># 예시2: 리스트와 튜플도 들어갈 수 있다.
</span><span class="n">stock</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"삼성전자"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">81000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">],</span>
    <span class="s">"LG전자"</span> <span class="p">:</span> <span class="p">(</span><span class="mi">150000</span><span class="p">,</span> <span class="mi">149000</span><span class="p">,</span> <span class="mi">148000</span><span class="p">,</span> <span class="mi">151000</span><span class="p">,</span> <span class="mi">152000</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-딕셔너리-접근하기">3. 딕셔너리 접근하기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">딕셔너리</span><span class="p">[</span><span class="s">"키"</span><span class="p">]</span>

<span class="c1"># 예시
</span><span class="n">stock</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">]</span> 
</code></pre></div></div>
<ul>
  <li>결과로는 85000이 출력된다.</li>
</ul>

<p><br /><br /></p>

<h2 id="4-딕셔너리-할당하기-삭제하기">4. 딕셔너리 할당하기, 삭제하기</h2>

<ul>
  <li>딕셔너리를 할당, 삭제해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 할당하기
</span><span class="n">딕셔너리</span><span class="p">[</span><span class="s">"키"</span><span class="p">]</span> <span class="o">=</span> <span class="n">데이터</span>

<span class="c1"># 예시
</span><span class="n">stock</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">85000</span>

<span class="c1"># 삭제하기
</span><span class="k">del</span> <span class="n">딕셔너리</span><span class="p">[</span><span class="s">"키"</span><span class="p">]</span>

<span class="c1"># 예시
</span><span class="k">del</span> <span class="n">stock</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">]</span>
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="5-딕셔너리-함수">5. 딕셔너리 함수</h2>

<ul>
  <li>딕셔너리 함수를 사용해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">stock</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"삼성전자"</span> <span class="p">:</span> <span class="mi">82000</span><span class="p">,</span>
    <span class="s">"SK하이닉스"</span> <span class="p">:</span> <span class="mi">123000</span><span class="p">,</span>
    <span class="s">"NAVER"</span> <span class="p">:</span> <span class="mi">370000</span><span class="p">,</span>
    <span class="s">"카카오"</span> <span class="p">:</span> <span class="mi">133000</span>
<span class="p">}</span>

<span class="c1"># 키와 데이터 쌍을 가져오기
</span><span class="n">stock</span><span class="p">.</span><span class="n">items</span><span class="p">()</span>

<span class="c1"># 키 값을 가져오기
</span><span class="n">stock</span><span class="p">.</span><span class="n">keys</span><span class="p">()</span>

<span class="c1"># 데이터를 가져오기
</span><span class="n">stock</span><span class="p">.</span><span class="n">values</span><span class="p">()</span>
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="6-실습">6. 실습</h2>

<ul>
  <li>위에서 배운 내용들을 vscode로 실습해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 딕셔너리
# : 사전형태의 자료형
</span>
<span class="n">stock_a</span> <span class="o">=</span> <span class="p">{</span><span class="s">"삼성전자"</span> <span class="p">:</span> <span class="mi">82000</span><span class="p">,</span> <span class="s">"LG전자"</span> <span class="p">:</span> <span class="mi">150000</span><span class="p">}</span>

<span class="n">stock_b</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"삼성전자"</span> <span class="p">:</span> <span class="p">[</span><span class="mi">81000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">],</span>
    <span class="s">"LG전자"</span> <span class="p">:</span> <span class="p">(</span><span class="mi">150000</span><span class="p">,</span> <span class="mi">149000</span><span class="p">,</span> <span class="mi">148000</span><span class="p">,</span> <span class="mi">151000</span><span class="p">,</span> <span class="mi">152000</span><span class="p">)</span>
<span class="p">}</span>

<span class="c1"># 중첩 딕셔너리
</span><span class="n">stock_c</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"삼성전자"</span> <span class="p">:</span> <span class="p">{</span>
        <span class="s">"현재가"</span> <span class="p">:</span> <span class="mi">82000</span><span class="p">,</span>
        <span class="s">"보유수량"</span> <span class="p">:</span> <span class="mi">5</span><span class="p">,</span>
        <span class="s">"매수단가"</span> <span class="p">:</span> <span class="mi">81000</span>
    <span class="p">}</span>
<span class="p">}</span>

<span class="k">print</span><span class="p">(</span><span class="n">stock_a</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">stock_b</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">stock_c</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>Tip: alt + shift + 방향키를 이용해 한 줄을 쉽게 복사할 수 있다.</li>
</ul>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter7</span><span class="o">/</span><span class="mf">02.</span><span class="n">딕셔너리</span><span class="p">.</span><span class="n">py</span>
<span class="p">{</span><span class="s">'삼성전자'</span><span class="p">:</span> <span class="mi">82000</span><span class="p">,</span> <span class="s">'LG전자'</span><span class="p">:</span> <span class="mi">150000</span><span class="p">}</span>
<span class="p">{</span><span class="s">'삼성전자'</span><span class="p">:</span> <span class="p">[</span><span class="mi">81000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">,</span> <span class="mi">81500</span><span class="p">,</span> <span class="mi">82000</span><span class="p">],</span> <span class="s">'LG전자'</span><span class="p">:</span> <span class="p">(</span><span class="mi">150000</span><span class="p">,</span> <span class="mi">149000</span><span class="p">,</span> <span class="mi">148000</span><span class="p">,</span> <span class="mi">151000</span><span class="p">,</span> <span class="mi">152000</span><span class="p">)}</span>
<span class="p">{</span><span class="s">'삼성전자'</span><span class="p">:</span> <span class="p">{</span><span class="s">'현재가'</span><span class="p">:</span> <span class="mi">82000</span><span class="p">,</span> <span class="s">'보유수량'</span><span class="p">:</span> <span class="mi">5</span><span class="p">,</span> <span class="s">'매수단가'</span><span class="p">:</span> <span class="mi">81000</span><span class="p">}}</span>

</code></pre></div></div>

<p><br /></p>

<ul>
  <li>딕셔너리 접근/할당/삭제하기</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 딕셔너리 접근하기
</span><span class="k">print</span><span class="p">(</span><span class="n">stock_a</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">])</span>
<span class="k">print</span><span class="p">(</span><span class="n">stock_c</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">][</span><span class="s">"보유수량"</span><span class="p">])</span>

<span class="c1"># 딕셔너리 할당하기
</span><span class="n">stock_a</span><span class="p">[</span><span class="s">"삼성전자"</span><span class="p">]</span> <span class="o">=</span> <span class="mi">85000</span>
<span class="k">print</span><span class="p">(</span><span class="n">stock_a</span><span class="p">)</span>

<span class="c1"># 딕셔너리 삭제하기
</span><span class="k">del</span> <span class="n">stock_a</span><span class="p">[</span><span class="s">"LG전자"</span><span class="p">]</span>
<span class="k">print</span><span class="p">(</span><span class="n">stock_a</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter7</span><span class="o">/</span><span class="mf">02.</span><span class="n">딕셔너리</span><span class="p">.</span><span class="n">py</span>
<span class="mi">82000</span>
<span class="mi">5</span>
<span class="p">{</span><span class="s">'삼성전자'</span><span class="p">:</span> <span class="mi">85000</span><span class="p">,</span> <span class="s">'LG전자'</span><span class="p">:</span> <span class="mi">150000</span><span class="p">}</span>
<span class="p">{</span><span class="s">'삼성전자'</span><span class="p">:</span> <span class="mi">85000</span><span class="p">}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>딕셔너리 함수</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 딕셔너리 함수
</span><span class="n">stock_d</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">"삼성전자"</span> <span class="p">:</span> <span class="mi">82000</span><span class="p">,</span>
    <span class="s">"SK하이닉스"</span> <span class="p">:</span> <span class="mi">123000</span><span class="p">,</span>
    <span class="s">"NAVER"</span> <span class="p">:</span> <span class="mi">370000</span><span class="p">,</span>
    <span class="s">"카카오"</span> <span class="p">:</span> <span class="mi">133000</span>
<span class="p">}</span>

<span class="c1"># items() : 키와 데이터 쌍
</span><span class="k">print</span><span class="p">(</span><span class="n">stock_d</span><span class="p">.</span><span class="n">items</span><span class="p">)</span>

<span class="c1"># 일반적 사용예
</span><span class="k">for</span> <span class="n">item</span> <span class="ow">in</span> <span class="n">stock_d</span><span class="p">.</span><span class="n">items</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">item</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="c1"># 0: 키, 1: 데이터
</span>
<span class="c1"># keys() : 키
</span><span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">stock_d</span><span class="p">.</span><span class="n">keys</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">key</span><span class="p">)</span>

<span class="c1"># values() : 데이터
</span><span class="k">for</span> <span class="n">value</span> <span class="ow">in</span> <span class="n">stock_d</span><span class="p">.</span><span class="n">values</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">value</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter7</span><span class="o">/</span><span class="mf">02.</span><span class="n">딕셔너리</span><span class="p">.</span><span class="n">py</span>
<span class="o">&lt;</span><span class="n">built</span><span class="o">-</span><span class="ow">in</span> <span class="n">method</span> <span class="n">items</span> <span class="n">of</span> <span class="nb">dict</span> <span class="nb">object</span> <span class="n">at</span> <span class="mh">0x10a44ef00</span><span class="o">&gt;</span>
<span class="n">삼성전자</span>
<span class="n">SK하이닉스</span>
<span class="n">NAVER</span>
<span class="n">카카오</span>
<span class="n">삼성전자</span>
<span class="n">SK하이닉스</span>
<span class="n">NAVER</span>
<span class="n">카카오</span>
<span class="mi">82000</span>
<span class="mi">123000</span>
<span class="mi">370000</span>
<span class="mi">133000</span>
</code></pre></div></div>

<p><br /><br /></p>

<p>이번 포스팅에서는 딕셔너리에 대해 알아보았다. 다음 포스팅에서는 클래스와 객체에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 20일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]Syntax Error : stdin 에러 해결</title><link href="http://localhost:4000/programming/Python-Syntax-Error-Stdin/" rel="alternate" type="text/html" title="[Python]Syntax Error : stdin 에러 해결" /><published>2022-05-07T00:00:00+09:00</published><updated>2022-05-07T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Syntax-Error-Stdin</id><content type="html" xml:base="http://localhost:4000/programming/Python-Syntax-Error-Stdin/"><![CDATA[<p><br /><br /></p>

<p>*💡  파이썬에서 Syntax Error : stdin 에러가 났을 경우, exit() 혹은 Ctrl + Z을 입력하여 해결할 수 있다. *</p>

<p><br /></p>

<h1 id="1-에러-상황">1. 에러 상황</h1>

<p><br /></p>

<p>패스트캠퍼스 챌린지 강의 실습 중, 파이썬 코드를 실행하니 아래와 같은 Syntax 에러가 발생했다.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">04.</span><span class="n">상속</span><span class="p">.</span><span class="n">py</span>
    <span class="o">^</span>
<span class="nb">SyntaxError</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">syntax</span>
<span class="o">&gt;&gt;&gt;</span>
</code></pre></div></div>

<p><br /><br /></p>

<h1 id="2-해결-방법">2. 해결 방법</h1>

<p><br /></p>

<p>찾아보니 vscode를 껐다가 다시 켜면 해결된다는 얘기도 있는데, 구글링을 조금 더 해보니 해당 에러는 파이썬 코드를 파이썬 인터프리터 내에서 실행하고자 할 때 발생하는 에러였다.</p>

<p><br /></p>

<p>따라서 파이썬 인터프리터 밖에서 코드를 실행할 수 있도록 에러 마지막 부분의 <code class="language-plaintext highlighter-rouge">&gt;&gt;&gt;</code> 다음 부분에</p>

<p><br /></p>

<ul>
  <li><code class="language-plaintext highlighter-rouge">exit()</code> 를 입력하고 엔터</li>
  <li><code class="language-plaintext highlighter-rouge">ctrl + Z</code> 를 누른 뒤 엔터</li>
</ul>

<p><br /></p>

<p>둘 중 하나를 해주면 파이썬 코드가 정상적으로 실행된다고 한다.</p>

<p><br /></p>

<p>이 안내를 따라서 exit()을 입력하고 엔터를 누른 뒤, 파이썬 코드를 다시 실행해주니 아래와 같이 파이썬 코드가 정상적으로 실행되었다.</p>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">04.</span><span class="n">상속</span><span class="p">.</span><span class="n">py</span>
    <span class="o">^</span>
<span class="nb">SyntaxError</span><span class="p">:</span> <span class="n">invalid</span> <span class="n">syntax</span>
<span class="o">&gt;&gt;&gt;</span> <span class="nb">exit</span><span class="p">()</span>

<span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter8</span><span class="o">/</span><span class="mf">04.</span><span class="n">상속</span><span class="p">.</span><span class="n">py</span>
<span class="p">[</span><span class="n">울프</span><span class="p">]</span> <span class="n">지상에서</span> <span class="n">이동하기</span>
<span class="p">[</span><span class="n">샤크</span><span class="p">]</span> <span class="n">헤엄치기</span>
<span class="p">[</span><span class="n">드래곤</span><span class="p">]</span> <span class="n">날기</span>
</code></pre></div></div>

<p><br /><br /></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="파이썬에러" /><category term="파이썬초보" /><category term="비전공출신개발자" /><category term="Pythonsyntaxerror" /><category term="Pythonerror" /><category term="stdinerror" /><category term="syntaxerrorstdin" /><category term="파이썬공부" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[파이썬에서 Syntax Error : stdin 에러가 났을 경우, exit() 혹은 Ctrl + Z을 입력하여 해결할 수 있다.]]></summary></entry><entry><title type="html">[Network]루프백 주소(Loopback IP address)란?</title><link href="http://localhost:4000/devops/Network-Loopback-IP-address/" rel="alternate" type="text/html" title="[Network]루프백 주소(Loopback IP address)란?" /><published>2022-05-06T00:00:00+09:00</published><updated>2022-05-06T00:00:00+09:00</updated><id>http://localhost:4000/devops/Network-Loopback-IP-address</id><content type="html" xml:base="http://localhost:4000/devops/Network-Loopback-IP-address/"><![CDATA[<p><br /><br /></p>

<p>업무 중 테스트를 위해 시스템 도메인주소에 <code class="language-plaintext highlighter-rouge">nslookup</code> 을 한 뒤, DNS 쿼리 결과를 공유해달라는 요청을 받았었는데, nslookup으로 나온 DNS 쿼리 결과값이 흔히 보는 127.0.0.1 이 아닌 127.0.0.11 로 리턴되어 문득 loopback 으로 사용할 수 있는 IP 주소 대역이 궁금해져 관련 내용을 찾아서 정리해보았다.</p>

<p><br /><br /></p>

<h1 id="1-loopback-주소란">1. Loopback 주소란?</h1>

<p><br /></p>

<p>IPv4 혹은 IPv6 에서 자기자신을 가리키기 위한 목적으로 쓰기 위해 예약된 IP주소이다.</p>

<p><br /><br /></p>

<h1 id="2-loopback-주소로-사용하는-ip대역">2. Loopback 주소로 사용하는 IP대역</h1>

<p><br /></p>

<p>루프백 주소로는 아래의 대역을 이용하게 된다.</p>

<ul>
  <li>IPv4: 127.0.0.0/24 (127.0.0.0 ~ 127.255.255.255 사이의 주소 사용)</li>
  <li>IPv6: ::1/128 (단 1개 주소만 사용)</li>
</ul>

<p><br /><br /></p>

<h1 id="3-localhost-주소-확인-및-수정">3. Localhost 주소 확인 및 수정</h1>

<p><br /></p>

<p>이 중 IPv4의 기본 localhost값은 127.0.0.1, IPv6의 기본 localhost값은 ::1/128 이다.</p>

<p><br /></p>

<p>만일 Localhost의 설정값을 수정하려면 /etc/hosts/ (윈도우의 경우 C:\WIndows\System32\drivers\etc\hosts 경로) 파일을 수정하면 된다.</p>

<p><br /></p>

<p>이렇게 hosts 파일에서 지정한 localhost주소를 브라우저에 입력하면, DNS를 타지 않고 바로 로컬로 연결된다.</p>

<p><br /></p>

<p>만약 현재 PC에 등록된 localhost 주소를 알고 싶은 경우, /etc/hosts 파일을 살펴보거나, terminal 에서 <code class="language-plaintext highlighter-rouge">nslookup localhost</code> 명령어를 입력하면 된다.</p>

<p><br /><br /></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="DevOps" /><category term="SRE" /><category term="loopbackaddress" /><category term="데브옵스엔지니어" /><category term="루프백주소" /><category term="로컬호스트" /><category term="루프백주소대역" /><category term="localhost" /><summary type="html"><![CDATA[IPv4 혹은 IPv6 에서 자기자신을 가리키기 위한 목적으로 쓰기 위해 예약된 IP주소이다.]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 19일차</title><link href="http://localhost:4000/programming/Python-Day19/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 19일차" /><published>2022-05-06T00:00:00+09:00</published><updated>2022-05-06T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day19</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day19/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 7-1. 튜플을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-06-Python-Photo/2022-05-06-Python-Photo1.jpg" alt="2022-05-06-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-06-Python-Photo/2022-05-06-Python-Photo2.jpg" alt="2022-05-06-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="01-튜플">01. 튜플</h1>

<h2 id="1-튜플의-특징">1. 튜플의 특징</h2>

<ul>
  <li>시퀀스 자료형(순서가 있는 자료형)</li>
  <li>수정, 추가, 삭제가 불가능한 리스트(읽기 전용 리스트)</li>
  <li>메모리 사용이 효율적</li>
  <li>읽기만 가능하기 때문에 데이터 손실 염려가 없다</li>
</ul>

<p><br /><br /></p>

<h2 id="2-튜플-만들기">2. 튜플 만들기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">튜플</span> <span class="o">=</span> <span class="p">(</span><span class="n">데이터</span><span class="p">,</span> <span class="n">데이터</span><span class="p">,</span> <span class="n">데이터</span><span class="p">)</span>

<span class="c1"># 튜플은 괄호를 생략할 수 있다.
</span><span class="n">튜플</span> <span class="o">=</span> <span class="n">데이터</span><span class="p">,</span> <span class="n">데이터</span><span class="p">,</span> <span class="n">데이터</span>

<span class="c1"># 예시: 튜플은 데이터의 자료형이 일치하지 않아도 된다.
</span><span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
<span class="n">a</span> <span class="o">=</span> <span class="s">"패스트캠퍼스"</span><span class="p">,</span> <span class="mi">3</span><span class="p">,</span> <span class="bp">True</span>

<span class="c1"># 예시 2: 데이터가 1개 들어간 튜플을 만들 때에는 콤마를 붙여야 한다.
</span><span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">30</span><span class="p">,)</span>
<span class="n">a</span> <span class="o">=</span> <span class="mi">30</span><span class="p">,</span>
</code></pre></div></div>

<ul>
  <li>참고: 괄호의 용도(Python 문법)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">()</code> : 함수, 튜플</li>
      <li><code class="language-plaintext highlighter-rouge">[]</code> : 리스트</li>
      <li><code class="language-plaintext highlighter-rouge">{}</code> : fstring</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<h2 id="3-튜플을-리스트로-만들기">3. 튜플을 리스트로 만들기</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 예시 1: 리스트 자료형을 튜플로 만들어준다. tuple([리스트])
</span><span class="n">a</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">([</span><span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">])</span>

<span class="c1"># 예시 2: range 객체를 list로 감싸면 list 자료형 &gt; tuple로 감싸면 튜플
</span><span class="n">x</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>

<span class="c1"># 예시 3: 튜플을 리스트로 만들 수 있다.
</span><span class="n">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span>
<span class="n">a</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="4-패킹과-언패킹python-특징">4. 패킹과 언패킹(Python 특징)</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">numbers</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span> <span class="c1"># 패킹: 3, 4, 5 라는 데이터를 numbers라는 변수에 패킹하는 것
</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span> <span class="o">=</span> <span class="n">numbers</span> <span class="c1"># 언패킹: a, b, c라는 변수에 하나하나 저장되게 됨
</span>
<span class="c1"># 리스트도 마찬가지로 패킹과 언패킹이 가능
</span><span class="n">numbers</span> <span class="o">=</span> <span class="p">[</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">]</span>
<span class="n">a</span><span class="p">,</span> <span class="n">b</span><span class="p">,</span> <span class="n">c</span> <span class="o">=</span> <span class="n">numbers</span>

<span class="c1"># 활용예
</span><span class="n">a</span><span class="p">,</span> <span class="n">b</span> <span class="o">=</span> <span class="n">b</span><span class="p">,</span> <span class="n">a</span> <span class="c1"># a, b 들어가있던 값을 바꿔줄 수 있다.
</span></code></pre></div></div>

<ul>
  <li>패킹: 여러 개의 데이터를 하나의 변수에 할당하는 것</li>
  <li>언패킹: 컬렉션(튜플, 딕셔너리, 리스트 등)의 각 데이터를 각각의 변수에 할당하는 것</li>
</ul>

<p><br /><br /></p>

<h2 id="5-튜플-함수">5. 튜플 함수</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">a</span> <span class="o">=</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">,</span> <span class="mi">40</span><span class="p">,</span> <span class="mi">30</span>
</code></pre></div></div>

<ol>
  <li>특정 값의 인덱스 구하기: <code class="language-plaintext highlighter-rouge">a.index(20)</code> = 1</li>
  <li>특정 값의 개수: <code class="language-plaintext highlighter-rouge">a.count(30)</code> = 2</li>
  <li>최대값, 최소값: <code class="language-plaintext highlighter-rouge">max(a)</code> = 40, <code class="language-plaintext highlighter-rouge">min(a)</code> = 10</li>
  <li>합계: <code class="language-plaintext highlighter-rouge">sum(a)</code> = 130</li>
</ol>

<p><br /><br /></p>

<h2 id="6-실습">6. 실습</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 튜플
# : 읽기 전용 리스트
</span><span class="n">a</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">)</span>
<span class="n">b</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span>

<span class="n">c</span> <span class="o">=</span> <span class="p">(</span><span class="mi">3</span><span class="p">,)</span>
<span class="n">d</span> <span class="o">=</span> <span class="mi">3</span>

<span class="n">e</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">([</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">])</span>
<span class="n">f</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">10</span><span class="p">))</span>
<span class="n">g</span> <span class="o">=</span> <span class="nb">tuple</span><span class="p">(</span><span class="n">f</span><span class="p">)</span>

<span class="n">h</span> <span class="o">=</span> <span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span>
<span class="n">i</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">h</span><span class="p">)</span>

<span class="c1"># 튜플 관련 함수
</span><span class="n">x</span> <span class="o">=</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="mi">7</span><span class="p">,</span> <span class="mi">8</span>
<span class="k">print</span><span class="p">(</span><span class="nb">max</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="nb">min</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="nb">sum</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">count</span><span class="p">(</span><span class="mi">6</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">index</span><span class="p">(</span><span class="mi">7</span><span class="p">))</span>
</code></pre></div></div>

<p><br /><br /></p>

<p>이번 포스팅에서는 튜플에 대해 알아보았다. 다음 포스팅에서는 딕셔너리에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 19일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 18일차</title><link href="http://localhost:4000/programming/Python-Day18/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 18일차" /><published>2022-05-05T00:00:00+09:00</published><updated>2022-05-05T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day18</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day18/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 6-2. 함수 실습문제(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-05-Python-Photo/2022-05-05-Python-Photo1.jpg" alt="2022-05-05-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-05-Python-Photo/2022-05-05-Python-Photo2.jpg" alt="2022-05-05-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="03-함수실습문제2">03. 함수실습문제(2)</h1>

<h2 id="1-실습문제-613">1. 실습문제 6.1.3</h2>

<ul>
  <li>로또에 당첨 되어 퇴사를 하고 싶었던 김로또는 로또 예상번호 추출 프로그램을 파이썬으로 작성하려고 한다. 다음 조건에 따라 김로또의 프로그램을 완성해보자.
    <ol>
      <li>로또 번호 6개를 생성한다.</li>
      <li>로또 번호는 1 ~ 45까지의 랜덤한 번호다.</li>
      <li>6개의 숫자 모두 달라야 한다.</li>
      <li>getRandomNumber() 함수를 사용해서 구현한다. (random 모듈의 sample함수는 사용하지 않는다)</li>
    </ol>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">def</span> <span class="nf">getRandomNumber</span><span class="p">():</span>
      <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
      <span class="k">return</span> <span class="n">number</span>
    
  <span class="c1"># 표준 출력
</span>  <span class="mi">1</span> <span class="mi">8</span> <span class="mi">11</span> <span class="mi">13</span> <span class="mi">26</span> <span class="mi">42</span>
</code></pre></div>    </div>
  </li>
  <li>Hint: 반복문, 조건문, 리스트, 함수(getRandomNumber)를 이용</li>
</ul>

<p><br /><br /></p>

<h3 id="내-풀이">[내 풀이]</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">getRandomNumber</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">result</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">getNumber</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
    <span class="n">getNumber</span> <span class="o">=</span> <span class="n">getRandomNumber</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">getNumber</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">result</span><span class="p">:</span>
        <span class="n">result</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">getNumber</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">result</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>로또 결과값을 담을 result 리스트 생성</li>
  <li>getNumber 라는 변수로 getRandomNumber 함수를 호출해 랜덤한 숫자값을 담다.</li>
  <li>중복값 제거: 받아온 getNumber 값이 결과값인 result 리스트에 들어있지 않은 경우에만 리스트에 값을 넣는다.</li>
  <li>for in 문으로 위의 함수를 6번 실행해 리스트에 값을 총 6개 담는다.</li>
</ul>

<p><br /><br /></p>

<h3 id="강의-해설">[강의 해설]</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.3
# 로또 번호 추출기
</span><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">get_random_number</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">lotto_num</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 로또 번호를 저장할 리스트
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
    <span class="n">random_number</span> <span class="o">=</span> <span class="n">get_random_number</span><span class="p">()</span>
    <span class="n">lotto_num</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">random_number</span><span class="p">)</span>

<span class="n">lotto_num</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>
</code></pre></div></div>

<ul>
  <li>함수명을 정의할 때 보통 언더바로 단어를 나눔</li>
  <li>중복을 허용하는 번호 추출 함수를 먼저 생성</li>
  <li>sort 함수를 이용해 오름차 순으로 정렬</li>
</ul>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">05</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.3</span><span class="o">-</span><span class="n">해설</span><span class="p">.</span><span class="n">p</span>
<span class="n">y</span>
<span class="p">[</span><span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">16</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">24</span><span class="p">]</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>문제의 표준출력과 맞게 줄바꿈 문자를 빼준다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.3
# 로또 번호 추출기
</span><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">get_random_number</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">lotto_num</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 로또 번호를 저장할 리스트
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
    <span class="n">random_number</span> <span class="o">=</span> <span class="n">get_random_number</span><span class="p">()</span>
    <span class="n">lotto_num</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">random_number</span><span class="p">)</span>

<span class="n">lotto_num</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>

<span class="c1"># 줄바꿈 문자 빼기
</span><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">" "</span><span class="p">)</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">05</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.3</span><span class="o">-</span><span class="n">해설</span><span class="p">.</span><span class="n">p</span>
<span class="n">y</span>
<span class="mi">26</span> <span class="mi">27</span> <span class="mi">30</span> <span class="mi">31</span> <span class="mi">39</span> <span class="mi">40</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>중복을 허용하지 않는 조건문 생성하기</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.3
# 로또 번호 추출기
</span><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">get_random_number</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">lotto_num</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 로또 번호를 저장할 리스트
</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">6</span><span class="p">):</span>
    <span class="n">random_number</span> <span class="o">=</span> <span class="n">get_random_number</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">random_number</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
        <span class="n">lotto_num</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">random_number</span><span class="p">)</span>

<span class="n">lotto_num</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>

<span class="o">&lt;</span><span class="n">br</span><span class="o">/&gt;</span>

<span class="c1"># 줄바꿈 문자 빼기
</span><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">" "</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>조건문을 몇 번 실행하게 될 지 알 수 없음 ⇒ 무한반복문(while True)으로 변경</li>
</ul>

<p><br /></p>

<ul>
  <li>while True 문으로 변경 리스트에 문자가 몇 번 들어갈 지 알 수 있는 count 변수 생성</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.3
# 로또 번호 추출기
</span><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">get_random_number</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">lotto_num</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 로또 번호를 저장할 리스트
</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># 현재 뽑은 숫자 개수
</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="n">random_number</span> <span class="o">=</span> <span class="n">get_random_number</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">random_number</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
        <span class="n">lotto_num</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">random_number</span><span class="p">)</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="n">lotto_num</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>

<span class="c1"># 줄바꿈 문자 빼기
</span><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">" "</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>
    <p>숫자가 리스트에 추가될 때에만 count 숫자 1씩 증가</p>
  </li>
  <li>
    <p>count 값이 6이 될 때(리스트에 들어간 값이 6개일 때) 프로그램이 종료하도록 break 문 정의</p>
  </li>
</ul>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.3
# 로또 번호 추출기
</span><span class="kn">import</span> <span class="nn">random</span>

<span class="k">def</span> <span class="nf">get_random_number</span><span class="p">():</span>
    <span class="n">number</span> <span class="o">=</span> <span class="n">random</span><span class="p">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">45</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">number</span>

<span class="n">lotto_num</span> <span class="o">=</span> <span class="p">[]</span> <span class="c1"># 로또 번호를 저장할 리스트
</span>
<span class="n">count</span> <span class="o">=</span> <span class="mi">0</span> <span class="c1"># 현재 뽑은 숫자 개수
</span>
<span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
    <span class="k">if</span> <span class="n">count</span> <span class="o">&gt;</span> <span class="mi">5</span><span class="p">:</span>
        <span class="k">break</span>
    <span class="n">random_number</span> <span class="o">=</span> <span class="n">get_random_number</span><span class="p">()</span>
    <span class="k">if</span> <span class="n">random_number</span> <span class="ow">not</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
        <span class="n">lotto_num</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">random_number</span><span class="p">)</span>
        <span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>

<span class="n">lotto_num</span><span class="p">.</span><span class="n">sort</span><span class="p">()</span>

<span class="c1"># 줄바꿈 문자 빼기
</span><span class="k">for</span> <span class="n">num</span> <span class="ow">in</span> <span class="n">lotto_num</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">num</span><span class="p">,</span> <span class="n">end</span><span class="o">=</span><span class="s">" "</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>break문은 가장 가까운 반복문을 탈출하게 되니 while 문 밑에 위치시킬 것</li>
  <li>break하는 조건은 <code class="language-plaintext highlighter-rouge">count &gt; 5</code> 이외에 <code class="language-plaintext highlighter-rouge">count == 6</code> 도 가능</li>
</ul>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">jinipark</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">05</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.3</span><span class="o">-</span><span class="n">해설</span><span class="p">.</span><span class="n">p</span>
<span class="n">y</span>
<span class="mi">26</span> <span class="mi">27</span> <span class="mi">30</span> <span class="mi">31</span> <span class="mi">39</span> <span class="mi">40</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>Tip: 전체 풀이 지우고 다시 한 번 풀어볼 것!</li>
</ul>

<p><br /><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 18일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 17일차</title><link href="http://localhost:4000/programming/Python-Day17/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 17일차" /><published>2022-05-04T00:00:00+09:00</published><updated>2022-05-04T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day17</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day17/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 6-2. 함수 실습문제(1)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-04-Python-Photo/2022-05-04-Python-Photo1.jpg" alt="2022-05-04-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-04-Python-Photo/2022-05-04-Python-Photo2.jpg" alt="2022-05-04-Python-Photo2" /></p>

<p><br /><br /></p>

<h1 id="02-함수실습문제1">02. 함수실습문제(1)</h1>

<h2 id="1-실습문제-611">1. 실습문제 6.1.1</h2>

<ul>
  <li>다음은 두 수의 곱셈을 반환하는 multiply 함수이다. multiply 함수를 호출하는 방법으로 옳은 것을 고르세요.</li>
</ul>

<p><br /></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>```python
def multiply(x, y):
    result = x * y
    return result   
```

1. multiply()
2. multiply(3)
3. multiply(3, 4)
4. multiply(”a”, “b”)
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="내-풀이">[내 풀이]</h3>

<ul>
  <li>정답은 3. multiply(3, 4)</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">multiply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
    <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span>
    <span class="k">return</span> <span class="n">result</span>

<span class="k">print</span><span class="p">(</span><span class="n">multiply</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span> <span class="mi">4</span><span class="p">))</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">03</span><span class="o">-</span><span class="mf">1.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.1</span><span class="p">.</span><span class="n">py</span>
<span class="mi">12</span>
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="강의-해설">[강의 해설]</h3>

<ul>
  <li>
    <p>1.multiply() 실행결과</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">multiply</span><span class="p">()</span>
  <span class="nb">TypeError</span><span class="p">:</span> <span class="n">multiply</span><span class="p">()</span> <span class="n">missing</span> <span class="mi">2</span> <span class="n">required</span> <span class="n">positional</span> <span class="n">arguments</span><span class="p">:</span> <span class="s">'x'</span> <span class="ow">and</span> <span class="s">'y'</span>
</code></pre></div>    </div>

    <ul>
      <li>x, y 매개변수에 해당하는 인자가 필요하다는 에러 메시지 발생</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>2.multiply(1) 실행결과</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">multiply</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
  <span class="nb">TypeError</span><span class="p">:</span> <span class="n">multiply</span><span class="p">()</span> <span class="n">missing</span> <span class="mi">1</span> <span class="n">required</span> <span class="n">positional</span> <span class="n">argument</span><span class="p">:</span> <span class="s">'y'</span>
</code></pre></div>    </div>

    <ul>
      <li>1번과 동일한 에러 발생</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>3.multiply(3, 4) 실행결과</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
  <span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">03</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span><span class="p">.</span><span class="n">py</span>
</code></pre></div>    </div>

    <ul>
      <li>에러 발생하지 않음(Print를 입력하지 않아 연산 결과는 화면에 표시되지 않음)</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>4.multiply(”3”, ”4”) 실행결과</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span>
  <span class="nb">TypeError</span><span class="p">:</span> <span class="n">can</span><span class="s">'t multiply sequence by non-int of type '</span><span class="nb">str</span><span class="s">'
</span></code></pre></div>    </div>
  </li>
  <li>
    <p>문자열은 곱셈 연산이 불가능하다</p>
  </li>
  <li>
    <p>Tip: docstring: 설명문</p>
    <ul>
      <li><code class="language-plaintext highlighter-rouge">“””</code> 쌍따옴표 세개로 감싸진 문장. IDE에서 함수에 커서를 가져다 대면 docstring에서 기입한 설명문이 표시된다.</li>
    </ul>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1"># docstring : 설명문
</span>    
  <span class="k">def</span> <span class="nf">multiply</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">):</span>
      <span class="s">"""
      두 수의 곱셈 결과를 반환하는 함수
      매개변수 x : 숫자
      매개변수 y : 숫자
      """</span>
      <span class="n">result</span> <span class="o">=</span> <span class="n">x</span> <span class="o">*</span> <span class="n">y</span>
      <span class="k">return</span> <span class="n">result</span>
    
  <span class="n">multiply</span><span class="p">(</span><span class="s">"3"</span><span class="p">,</span> <span class="s">"4"</span><span class="p">)</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><br /><br /></p>

<h2 id="2-실습문제-612">2. 실습문제 6.1.2</h2>

<ul>
  <li>다음은 세개의 정수를 인자로 받아, 합계와 평균을 출력해주는 함수이다. 함수를 호출한 결과로 표준 출력이 나오도록 함수를 정의해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">printSumAvg</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
<span class="c1"># 이하 수강생 작성
</span>
<span class="c1"># 함수호출
</span><span class="n">printSumAvg</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>

<span class="c1"># 표준 출력
# 합계: 60 평균: 20
</span></code></pre></div></div>

<p><br /><br /></p>

<h3 id="내-풀이-1">[내 풀이]</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">printSumAvg</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="nb">sum</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>
    <span class="n">avg</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="nb">sum</span> <span class="o">/</span> <span class="mi">3</span><span class="p">)</span>
    <span class="k">return</span> <span class="k">print</span><span class="p">(</span><span class="s">"합계:"</span><span class="p">,</span> <span class="nb">sum</span><span class="p">,</span> <span class="s">"평균:"</span><span class="p">,</span> <span class="n">avg</span><span class="p">)</span>

<span class="n">printSumAvg</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>return은 불필요함</li>
</ul>

<p><br /></p>

<ul>
  <li>출력 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter6</span><span class="o">/</span><span class="mi">04</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제6</span><span class="p">.</span><span class="mf">1.2</span><span class="p">.</span><span class="n">p</span>
<span class="n">y</span>
<span class="n">합계</span><span class="p">:</span> <span class="mi">60</span> <span class="n">평균</span><span class="p">:</span> <span class="mi">20</span>
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="강의-해설-1">[강의 해설]</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 실습문제 6.1.2
</span>
<span class="c1"># 문자열 포매팅
</span><span class="k">def</span> <span class="nf">printSumAvg</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">y</span><span class="p">,</span> <span class="n">z</span><span class="p">):</span>
    <span class="s">"""
    세개의 숫자를 받아 합계와 평균을 출력하는 함수
    """</span>
    <span class="nb">sum</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">y</span> <span class="o">+</span> <span class="n">z</span>
    <span class="n">avg</span> <span class="o">=</span> <span class="nb">sum</span> <span class="o">/</span> <span class="mi">3</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"합계 : </span><span class="si">{</span><span class="nb">sum</span><span class="si">}</span><span class="s">, 평균: </span><span class="si">{</span><span class="n">avg</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="n">printSumAvg</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">20</span><span class="p">,</span> <span class="mi">30</span><span class="p">)</span>
</code></pre></div></div>

<ul>
  <li>Tip: 문자열과 변수를 번갈아 입력하지 않고 f 스트링을 사용하면 편하게 변수와 문자열을 입력할 수 있다.
    <ul>
      <li><code class="language-plaintext highlighter-rouge">f”문자열 {변수}”</code> 형태로 입력해주면 된다.</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<p>이번 포스팅에서는 함수 실습문제(1) 을 풀어보았다. 다음 포스팅에서는 함수 실습문제(2)를 풀어보도록 하자.</p>

<p><br /><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 17일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Kubernetes]쿠버네티스 네트워킹(3)Linux Namespaces</title><link href="http://localhost:4000/devops/Kubernetes-Networking-3-Linux-Namespaces/" rel="alternate" type="text/html" title="[Kubernetes]쿠버네티스 네트워킹(3)Linux Namespaces" /><published>2022-05-03T00:00:00+09:00</published><updated>2022-05-03T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-Networking-3-Linux-Namespaces</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-Networking-3-Linux-Namespaces/"><![CDATA[<p><br /><br /></p>

<p><em>💡  쿠버네티스 네트워킹을 알아보기에 앞서 리눅스의 네임스페이스에 대해 알아보자.</em></p>

<p><br /></p>

<h1 id="1-linux-namespaces">1. Linux Namespaces</h1>

<h2 id="1-네임스페이스">1. 네임스페이스</h2>

<ul>
  <li>호스트 안의 격리된 공간(집 안에 방이 있는 것과 같음): 컨테이너를 생성할 때 컨테이너를 격리해 다른 컨테이너가 표시되지 않도록 하고 싶은 경우</li>
  <li>네임스페이스 안의 컨테이너 ⇒ 자기자신만 볼 수 있음</li>
  <li>Underlying (기본) 호스트: 모든 프로세스를 볼 수 있음
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ps aux</code> 로 확인할 수 있음 ⇒ 네임스페이스 내부/외부에서 같은 프로세스지만 PID가 상이하게 됨</li>
      <li>호스트
        <ul>
          <li>LAN에 연결하는 인터페이스 존재</li>
          <li>라우팅 테이블</li>
          <li>ARP 테이블: IP - MAC 주소 일대일 대응한 테이블</li>
        </ul>

        <p>⇒ 컨테이너에서 위 세부사항을 보이지 않게 하고 싶다면?</p>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>네임스페이스 내에 컨테이너 생성 시 호스트에 대한 네트워크 정보에 대한 가시성 없어짐
    <ul>
      <li>네임스페이스는 자체 가상 인터페이스(veth) 및 라우팅 테이블/ARP 테이블을 가질 수 있음</li>
    </ul>
  </li>
</ul>

<p><br /><br /></p>

<h2 id="2-네트워크-네임스페이스-생성">2. 네트워크 네임스페이스 생성</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">ip netns add red</code></li>
  <li><code class="language-plaintext highlighter-rouge">ip netns add blue</code></li>
  <li><code class="language-plaintext highlighter-rouge">ip netns</code></li>
  <li><code class="language-plaintext highlighter-rouge">ip link</code> : host 의 인터페이스 확인</li>
  <li><code class="language-plaintext highlighter-rouge">ip netns exec red ip link</code> : 네임스페이스의 인터페이스 확인 (= <code class="language-plaintext highlighter-rouge">ip -n red link</code> )</li>
</ul>

<p><br /><br /></p>

<h2 id="3-네트워크-네임스페이스-안에서-실행">3. 네트워크 네임스페이스 안에서 실행</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">arp</code> : 호스트에서의 항목들 출력</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ip netns exec red arp</code> : 컨테이너에서의 항목들 출력</p>
  </li>
  <li><code class="language-plaintext highlighter-rouge">route</code> : 호스트에서의 라우팅 테이블 출력</li>
  <li>
    <p><code class="language-plaintext highlighter-rouge">ip netns exec red route</code> : 컨테이너에서의 라우팅 테이블 출력</p>
  </li>
  <li>2개의 다른 네임스페이스간의 통신: 가상 이더넷 페어 혹은 가상 케이블(=파이프)
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ip link add veth-red type veth peer name veth-blue</code></li>
      <li><code class="language-plaintext highlighter-rouge">ip link set veth-red netns red</code> &amp; <code class="language-plaintext highlighter-rouge">ip link set veth-blue netns blue</code></li>
      <li>IP 할당
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip -n red addr add 192.168.15.1 dev veth-red</code></li>
          <li><code class="language-plaintext highlighter-rouge">ip -n blue addr add 192.168.15.2 dev veth-blue</code></li>
        </ul>
      </li>
      <li>IP 링크 업
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip -n red link set veth-red up</code></li>
          <li><code class="language-plaintext highlighter-rouge">ip -n blue link set veth-blue up</code></li>
        </ul>
      </li>
      <li>테스트
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip netns exec red ping 192.168.15.2</code></li>
          <li><code class="language-plaintext highlighter-rouge">ip netns exec red arp</code></li>
          <li><code class="language-plaintext highlighter-rouge">ip netns exec blue arp</code>
            <ul>
              <li>상대방의 mac/ip주소 표시</li>
            </ul>
          </li>
          <li><code class="language-plaintext highlighter-rouge">arp</code> : host 의 arp 테이블
            <ul>
              <li>네임스페이스 내의 정보 없음</li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>가상 스위치 생성
    <ul>
      <li>가상 스위치 생성하고 네임스페이스 연결
        <ul>
          <li>Linux Bridge / Open vSwitch를 통해 생성 가능</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>Linux Bridge
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ip link add v-net-0 type bridge</code> : 호스트에 ip 인터페이스를 추가 ( <code class="language-plaintext highlighter-rouge">ip link</code> 로 확인할 수 있음)</li>
      <li><code class="language-plaintext highlighter-rouge">ip link set dev v-net-0 up</code> : 네트워크 링크 활성화</li>
      <li>기존 직접연결 링크 삭제
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip -n red link del veth-red</code>: 한쪽 링크 삭제하면 다른쪽 링크 자동 삭제됨</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">ip link add veth-red type veth peer name vth-red-br</code></li>
      <li><code class="language-plaintext highlighter-rouge">ip link add veth-blue type veth peer name vth-blue-br</code></li>
      <li><code class="language-plaintext highlighter-rouge">ip link set veth-red netns red</code>
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip link set veth-red-br master v-net-0</code> : v-net-0(스위치)에 veth-red-br 인터페이스 연결</li>
          <li><code class="language-plaintext highlighter-rouge">ip -n red addr add 192.168.15.1 dev veth-red</code> : IP 주소 연결</li>
          <li><code class="language-plaintext highlighter-rouge">ip -n red link set veth-red up</code>: 인터페이스 링크 활성화</li>
        </ul>
      </li>
      <li><code class="language-plaintext highlighter-rouge">ip link set veth-blue netns blue</code>
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip link set veth-blue-br master v-net-0</code>: v-net-0(스위치)에 veth-blue-br 인터페이스 연결</li>
          <li><code class="language-plaintext highlighter-rouge">ip -n blue addr add 192.168.15.2 dev veth-blue</code> : IP주소 연결</li>
          <li><code class="language-plaintext highlighter-rouge">ip -n blue link set veth-blue up</code>: 인터페이스 링크 활성화</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>호스트와 네임스페이스간 연결
    <ul>
      <li>브리지스위치: 호스틑의 네트워크 인터페이스 중 하나</li>
      <li><code class="language-plaintext highlighter-rouge">ip addr add 192.168.15.5/24 dev v-net-0</code> : 호스트 IP 추가</li>
      <li>로컬 호스트에서 네임스페이스 연결</li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>호스트 바깥과 통신
    <ul>
      <li>Blue namespace ⇒ 호스트 바깥 망(192.168.1.3)
        <ul>
          <li><code class="language-plaintext highlighter-rouge">ip netns exec blue ping 192.168.1.3</code> ⇒ 도달하지 않음 ( <code class="language-plaintext highlighter-rouge">ip netns exec blue route</code> 확인해보면 등록되지 않았음)</li>
          <li>라우팅 테이블에 항목을 추가해 외부에 대한 게이트웨이 제공해야함
            <ul>
              <li><code class="language-plaintext highlighter-rouge">ip netns exec blue ip route add 192.168.1.0/24 via 192.168.15.5</code> 등록
                <ul>
                  <li>192.168.15.5 : v-net-0</li>
                  <li>Ping이 가지만 돌아오지 않음</li>
                </ul>
              </li>
            </ul>

            <p>⇒ NAT 을 구성해야함</p>

            <ul>
              <li><code class="language-plaintext highlighter-rouge">iptables -t nat -A POSTROUTING -s 192.168.15.0/2 -j MASQUERADE</code></li>
            </ul>
          </li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>인터넷에 연결
    <ul>
      <li><code class="language-plaintext highlighter-rouge">ip netns exec blue ip route add default via 192.168.15.5</code>
        <ul>
          <li>0.0.0.0 주소가 v-net-0를 통해 가도록 게이트웨이 구성</li>
        </ul>
      </li>
    </ul>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>외부에서 네임스페이스로 통신
    <ul>
      <li>외부 호스트에 Namespace의 IP 라우팅 등록: 192.168.15.5(v-net-0) via 192.168.1.2(eth0)</li>
      <li><code class="language-plaintext highlighter-rouge">iptables -t nat -A PREROUTING —dport 80 —to-destination 192.168.15.2:80 -j DNAT</code></li>
    </ul>
  </li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스네트워킹" /><category term="리눅스네임스페이스" /><category term="네트워크네임스페이스" /><category term="네임스페이스" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[쿠버네티스 네트워킹을 알아보기에 앞서 리눅스의 네임스페이스에 대해 알아보자.]]></summary></entry></feed>