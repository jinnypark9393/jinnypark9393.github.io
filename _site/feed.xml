<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2022-05-18T05:29:08+09:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">release: canary</title><subtitle>어쩌다 데브옵스 엔지니어가 된 문과생의 기록용 블로그</subtitle><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><entry><title type="html">[Python]패스트캠퍼스 캐시백 챌린지 31일차</title><link href="http://localhost:4000/programming/Python-Day31/" rel="alternate" type="text/html" title="[Python]패스트캠퍼스 캐시백 챌린지 31일차" /><published>2022-05-18T00:00:00+09:00</published><updated>2022-05-18T00:00:00+09:00</updated><id>http://localhost:4000/programming/Python-Day31</id><content type="html" xml:base="http://localhost:4000/programming/Python-Day31/"><![CDATA[<p><br /><br /></p>

<p>오늘도 어제에 이어서 “<a href="https://fastcampus.co.kr/dev_online_pyweb">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 10-3. 파일입출력 실습문제 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>

<p><br /><br /></p>

<p>아래는 공부 인증 사진.</p>

<p><br /></p>

<p><img src="/assets/images/2022-05-18-Python-Photo/2022-05-18-Python-Photo1.jpg" alt="2022-05-18-Python-Photo1" /></p>

<p><img src="/assets/images/2022-05-18-Python-Photo/2022-05-18-Python-Photo2.jpg" alt="2022-05-18-Python-Photo2" /></p>

<p><br /><br /></p>

<h2 id="1-실습문제-1011">1. 실습문제 10.1.1</h2>

<ul>
  <li>보유한 주식이 목표가에 도달했을 때의 종목별 수익금과 수익률을 출력해주는 프로그램을 작성해보자. mystock.csv 파일로부터 종목, 매입가, 수량, 목표가 정보를 가져온다.
    <ul>
      <li>수익금 = (목표가 - 매입가) * 수량</li>
      <li>수익률 = (목표가 / 매입가 - 1) *100</li>
    </ul>
  </li>
  <li>
    <p>mystock.csv</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">종목</span><span class="p">,</span> <span class="n">매입가</span><span class="p">,</span> <span class="n">수량</span><span class="p">,</span> <span class="n">목표가</span>
  <span class="n">삼성전자</span><span class="p">,</span> <span class="mi">85000</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="mi">90000</span>
  <span class="n">NAVER</span><span class="p">,</span> <span class="mi">380000</span><span class="p">,</span> <span class="mi">5</span><span class="p">,</span> <span class="mi">400000</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><br /></p>

<ul>
  <li>
    <p>표준 출력</p>

    <div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="n">삼성전자</span> <span class="mi">50000</span> <span class="mf">5.88</span><span class="o">%</span>
  <span class="n">NAVER</span> <span class="mi">100000</span> <span class="mf">5.26</span><span class="o">%</span>
</code></pre></div>    </div>
  </li>
</ul>

<p><br /><br /></p>

<h3 id="내-풀이---못풀었음">[내 풀이] - 못풀었음</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">csv</span>

<span class="c1"># mystock.csv 생성하기
# data = [
#     ["종목", "매입가", "수량", "목표가"],
#     ["삼성전자", 85000, 10, 90000],
#     ["NAVER", 380000, 5, 400000]
# ]
</span>
<span class="c1"># mystock = open("./myvenv/Chapter10/mystock.csv", "w")
</span>
<span class="c1"># writer = csv.writer(mystock)
# for d in data:
#     writer.writerow(d)
</span>
<span class="c1"># mystock.close()
</span>
<span class="c1"># 목표가 도달 시 종목, 수익금, 수익률 출력
</span>
<span class="n">mystock</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>
<span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="n">mystock</span><span class="p">)</span>
<span class="k">for</span> <span class="n">line</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">:</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">line</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">earning</span> <span class="o">=</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">-</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">]))</span> <span class="o">*</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span>
    <span class="n">earning_rate</span> <span class="o">=</span> <span class="p">(</span><span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">/</span> <span class="nb">int</span><span class="p">(</span><span class="n">line</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span>
</code></pre></div></div>

<ul>
  <li>csv 파일 생성까지는 성공</li>
  <li>행별로 값을 추출해서 계산식에 넣으려고 했으나 문자열로 되어있는 첫번째 줄을 제거하지 못함</li>
</ul>

<p><br /><br /></p>

<h3 id="강의-해설">[강의 해설]</h3>

<ul>
  <li>
    <p>오류 해결 과정 중심으로 실습문제 풀이</p>
  </li>
  <li>
    <p>파일을 열어보자.</p>
  </li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>
<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<ul>
  <li>실행결과: no such file or directory 에러</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"/Users/jinipark/Documents/python_basic/myvenv/Chapter10/06-2.실습문제10.1.1-해설.py"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">4</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>
<span class="nb">FileNotFoundError</span><span class="p">:</span> <span class="p">[</span><span class="n">Errno</span> <span class="mi">2</span><span class="p">]</span> <span class="n">No</span> <span class="n">such</span> <span class="nb">file</span> <span class="ow">or</span> <span class="n">directory</span><span class="p">:</span> <span class="s">'mystock.csv'</span>
</code></pre></div></div>

<ul>
  <li>파이썬 파일을 실행하면, 파이썬은 파일을 root 폴더(PYTHON_BASIC)에서 찾게 됨</li>
  <li>따라서 앞의 경로를 다 적어주어야한다.</li>
</ul>

<p><br /></p>

<ul>
  <li>경로를 수정하고 실행하면 에러가 발생되지 않는다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>
<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파일의 데이터를 읽어오자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파일을 실행하면 아래와 같은 오류가 발생한다(MacOS는 발생하지 않음).</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">UnicodeDecodeError</span><span class="p">:</span> <span class="s">'cp949'</span> <span class="n">codec</span> <span class="n">can</span><span class="s">'t decode byte 0xe2 in position 6987: illegal multibyte sequence
</span></code></pre></div></div>

<p><br /></p>

<ul>
  <li>인코딩 방식을 지정해주면 문제가 해결된다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>실행 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="p">[</span><span class="s">'종목'</span><span class="p">,</span> <span class="s">'매입가'</span><span class="p">,</span> <span class="s">'수량'</span><span class="p">,</span> <span class="s">'목표가'</span><span class="p">]</span>
<span class="p">[</span><span class="s">'삼성전자'</span><span class="p">,</span> <span class="s">'85000'</span><span class="p">,</span> <span class="s">'10'</span><span class="p">,</span> <span class="s">'90000'</span><span class="p">]</span>
<span class="p">[</span><span class="s">'NAVER'</span><span class="p">,</span> <span class="s">'380000'</span><span class="p">,</span> <span class="s">'5'</span><span class="p">,</span> <span class="s">'400000'</span><span class="p">]</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>출력 값의 첫번째 행은 필요 없는 값: 슬라이싱</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">)</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>에러 발생: TypeError: ‘_csv.reader’ object is not subscriptable</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="n">Traceback</span> <span class="p">(</span><span class="n">most</span> <span class="n">recent</span> <span class="n">call</span> <span class="n">last</span><span class="p">):</span>
  <span class="n">File</span> <span class="s">"/Users/usr/Documents/python_basic/myvenv/Chapter10/06-2.실습문제10.1.1-해설.py"</span><span class="p">,</span> <span class="n">line</span> <span class="mi">9</span><span class="p">,</span> <span class="ow">in</span> <span class="o">&lt;</span><span class="n">module</span><span class="o">&gt;</span>
    <span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
<span class="nb">TypeError</span><span class="p">:</span> <span class="s">'_csv.reader'</span> <span class="nb">object</span> <span class="ow">is</span> <span class="ow">not</span> <span class="n">subscriptable</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>reader를 list 로 자료형변환을 하면 에러가 발생하지 않는다.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">))</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="k">print</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>실행 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="p">[</span><span class="s">'삼성전자'</span><span class="p">,</span> <span class="s">'85000'</span><span class="p">,</span> <span class="s">'10'</span><span class="p">,</span> <span class="s">'90000'</span><span class="p">]</span>
<span class="p">[</span><span class="s">'NAVER'</span><span class="p">,</span> <span class="s">'380000'</span><span class="p">,</span> <span class="s">'5'</span><span class="p">,</span> <span class="s">'400000'</span><span class="p">]</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>수익률, 수익금 계산: for 문 안에서 작성하면 가독성이 좋지 않으니 함수를 새로 선언해보자.</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="k">def</span> <span class="nf">show_profit</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="c1"># 종목
</span>    <span class="n">purchase_price</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># 매입가
</span>    <span class="n">amount</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># 수량
</span>    <span class="n">target_price</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="c1"># 목표가
</span>
    <span class="n">profit</span> <span class="o">=</span> <span class="p">(</span><span class="n">target_price</span> <span class="o">-</span> <span class="n">purchase_price</span><span class="p">)</span> <span class="o">*</span> <span class="n">amount</span> <span class="c1"># 수익금
</span>    <span class="n">profit_ratio</span> <span class="o">=</span> <span class="p">(</span><span class="n">target_price</span><span class="o">/</span><span class="n">purchase_price</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span> <span class="c1"># 수익률
</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">profit</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">profit_ratio</span><span class="si">}</span><span class="s">"</span><span class="p">)</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">))</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="n">show_profit</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>실행결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="n">삼성전자</span> <span class="mi">50000</span> <span class="mf">5.882352941176472</span>
<span class="n">NAVER</span> <span class="mi">100000</span> <span class="mf">5.263157894736836</span>
</code></pre></div></div>

<ul>
  <li>
    <p>수익률을 출력할 때, 문제에서는 소수점 두번째 자리까지 출력해주고 % 기호를 붙여주었다.</p>
  </li>
  <li>
    <p>소수점 자릿수 제한: 구글링 ⇒ 파이썬 소수점 자리수 제한</p>
    <ul>
      <li>round 함수(반올림)</li>
      <li>format 서식 지정</li>
      <li><strong>f-string 서식 지정(아래 반영)</strong></li>
    </ul>
  </li>
</ul>

<p><br /></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 오류 해결 중심!!!
</span><span class="kn">import</span> <span class="nn">csv</span>

<span class="k">def</span> <span class="nf">show_profit</span><span class="p">(</span><span class="n">data</span><span class="p">):</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">data</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="c1"># 종목
</span>    <span class="n">purchase_price</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="c1"># 매입가
</span>    <span class="n">amount</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="c1"># 수량
</span>    <span class="n">target_price</span> <span class="o">=</span> <span class="nb">int</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="c1"># 목표가
</span>
    <span class="n">profit</span> <span class="o">=</span> <span class="p">(</span><span class="n">target_price</span> <span class="o">-</span> <span class="n">purchase_price</span><span class="p">)</span> <span class="o">*</span> <span class="n">amount</span> <span class="c1"># 수익금
</span>    <span class="n">profit_ratio</span> <span class="o">=</span> <span class="p">(</span><span class="n">target_price</span><span class="o">/</span><span class="n">purchase_price</span> <span class="o">-</span> <span class="mi">1</span><span class="p">)</span> <span class="o">*</span> <span class="mi">100</span> <span class="c1"># 수익률
</span>
    <span class="k">print</span><span class="p">(</span><span class="sa">f</span><span class="s">"</span><span class="si">{</span><span class="n">name</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">profit</span><span class="si">}</span><span class="s"> </span><span class="si">{</span><span class="n">profit_ratio</span><span class="p">:.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="s">%"</span><span class="p">)</span>

<span class="c1"># 파일 열기
</span><span class="nb">file</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s">"./myvenv/Chapter10/mystock.csv"</span><span class="p">,</span> <span class="s">"r"</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s">"utf-8"</span><span class="p">)</span>

<span class="c1"># 파일 데이터 읽기
</span><span class="n">reader</span> <span class="o">=</span> <span class="nb">list</span><span class="p">(</span><span class="n">csv</span><span class="p">.</span><span class="n">reader</span><span class="p">(</span><span class="nb">file</span><span class="p">))</span>
<span class="k">for</span> <span class="n">data</span> <span class="ow">in</span> <span class="n">reader</span><span class="p">[</span><span class="mi">1</span><span class="p">:]:</span>
    <span class="n">show_profit</span><span class="p">(</span><span class="n">data</span><span class="p">)</span>

<span class="nb">file</span><span class="p">.</span><span class="n">close</span><span class="p">()</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>실행 결과</li>
</ul>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="n">myvenv</span><span class="p">)</span> <span class="err">➜</span>  <span class="n">python_basic</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span><span class="n">pyt</span>
<span class="n">hon_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="nb">bin</span><span class="o">/</span><span class="n">python</span> <span class="o">/</span><span class="n">Users</span><span class="o">/</span><span class="n">usr</span><span class="o">/</span><span class="n">Documents</span><span class="o">/</span>
<span class="n">python_basic</span><span class="o">/</span><span class="n">myvenv</span><span class="o">/</span><span class="n">Chapter10</span><span class="o">/</span><span class="mi">06</span><span class="o">-</span><span class="mf">2.</span><span class="n">실습문제10</span><span class="p">.</span><span class="mf">1.1</span><span class="o">-</span><span class="n">해설</span>
<span class="p">.</span><span class="n">py</span>
<span class="n">삼성전자</span> <span class="mi">50000</span> <span class="mf">5.88</span><span class="o">%</span>
<span class="n">NAVER</span> <span class="mi">100000</span> <span class="mf">5.26</span><span class="o">%</span>
</code></pre></div></div>

<p><br /><br /></p>

<p>이번 포스팅에서는 파일입출력 실습문제를 풀어보았다. 다음 포스팅에서는 에러와 예외처리에 대해 알아보도록 하자.</p>

<p><br /></p>

<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>

<p><br /></p>

<ul>
  <li>패스트캠퍼스 강의 등록하기: <a href="https://bit.ly/3L3avNW">https://bit.ly/3L3avNW</a></li>
</ul>

<p><br /></p>

<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="Programming" /><category term="패스트캠퍼스" /><category term="패캠챌린지" /><category term="직장인인강" /><category term="직장인자기계발" /><category term="패스트캠퍼스후기" /><category term="캐시백챌린지" /><category term="캐시백" /><category term="환급챌린지" /><category term="한번에끝내는파이썬웹개발초격차패키지Online" /><summary type="html"><![CDATA[패스트캠퍼스 캐시백 챌린지 31일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.1 - 기본적인 파드(POD) 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-01/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.1 - 기본적인 파드(POD) 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-01</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-01/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-11---기본적인-파드pod-생성하기">모의고사 1.1 - 기본적인 파드(POD) 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Deploy a pod named <code class="language-plaintext highlighter-rouge">nginx-pod</code> using the <code class="language-plaintext highlighter-rouge">nginx:alpine</code> image.</p>

<p>Once done, click on the <code class="language-plaintext highlighter-rouge">Next Question</code> button in the top right corner of this panel. You may navigate back and forth freely between all questions. Once done with all questions, click on <code class="language-plaintext highlighter-rouge">End Exam</code>. Your work will be validated at the end and score shown. Good Luck!</p>

<ul>
  <li>Name: nginx-pod</li>
  <li>Image: nginx:alpine</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-명령문으로-파드pod생성">2. 명령문으로 파드(POD)생성</h3>

<ul>
  <li>명령문을 사용해 Pod 매니페스트 파일을 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k run nginx-pod <span class="nt">--image</span><span class="o">=</span>nginx:alpine <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="o">&gt;</span> nginx-pod.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>생성된 매니페스트 파일 내용이 맞는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  vi nginx-pod.yaml

<span class="o">====</span>

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: nginx-pod
  name: nginx-pod
spec:
  containers:
  - image: nginx:alpine
    name: nginx-pod
    resources: <span class="o">{}</span>
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 이용해 파드를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> nginx-pod.yaml 
pod/nginx-pod created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파드가 제대로 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pods
NAME        READY   STATUS    RESTARTS   AGE
nginx-pod   1/1     Running   0          12s
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[명령형 커맨드로 파드(POD) YAML를 생성한 뒤 생성한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.2 - 레이블(Label)을 지정한 파드(POD) 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-02/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.2 - 레이블(Label)을 지정한 파드(POD) 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-02</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-02/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-12---레이블label을-지정한-파드pod-생성하기">모의고사 1.2 - 레이블(Label)을 지정한 파드(POD) 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Deploy a <code class="language-plaintext highlighter-rouge">messaging</code> pod using the <code class="language-plaintext highlighter-rouge">redis:alpine</code> image with the labels set to <code class="language-plaintext highlighter-rouge">tier=msg</code>.</p>

<ul>
  <li>Pod Name: messaging</li>
  <li>Image: redis:alpine</li>
  <li>Labels: tier=msg</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 설정했으면 중복 설정 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-명령문으로-파드pod-생성">2. 명령문으로 파드(POD) 생성</h3>

<ul>
  <li>명령문을 사용해 Pod 매니페스트 파일을 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k run messaging <span class="nt">--image</span><span class="o">=</span>redis:alpine <span class="nt">-l</span> <span class="nv">tier</span><span class="o">=</span>msg <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="o">&gt;</span> messaging.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>생성된 매니페스트 파일 내용이 맞는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  vi messaging.yaml

<span class="o">====</span>

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    tier: msg
  name: messaging
spec:
  containers:
  - image: redis:alpine
    name: messaging
    resources: <span class="o">{}</span>
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 이용해 파드를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> messaging.yaml 
pod/messaging created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파드가 제대로 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pods
NAME        READY   STATUS    RESTARTS   AGE
messaging   1/1     Running   0          14s
nginx-pod   1/1     Running   0          3m22s
</code></pre></div></div>

<p><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[명령형 커맨드로 파드(POD)의 레이블을 지정하여 매니페스트 파일을 생성한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.3 - 네임스페이스(Namespace) 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-03/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.3 - 네임스페이스(Namespace) 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-03</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-03/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-13---네임스페이스namespace-생성하기">모의고사 1.3 - 네임스페이스(Namespace) 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Create a namespace named <code class="language-plaintext highlighter-rouge">apx-x9984574</code>.</p>

<ul>
  <li>Namespace: apx-x9984574</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 설정해놓은 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-명령문을-사용해-네임스페이스namespace-생성">2. 명령문을 사용해 네임스페이스(Namespace) 생성</h3>

<ul>
  <li>명령문을 사용해 네임스페이스(namespace)를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create ns apx-x9984574
namespace/apx-x9984574 created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>네임스페이스가 제대로 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get ns
NAME              STATUS   AGE
apx-x9984574      Active   3s
default           Active   17m
kube-node-lease   Active   17m
kube-public       Active   17m
kube-system       Active   17m
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[명령형 커맨드로 네임스페이스(Namespace)를 손쉽게 생성할 수 있다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.4 - 리소스 JSON 형태로 출력하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-04/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.4 - 리소스 JSON 형태로 출력하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-04</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-04/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-14---리소스-json-형태로-출력하기">모의고사 1.4 - 리소스 JSON 형태로 출력하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Get the list of nodes in JSON format and store it in a file at <code class="language-plaintext highlighter-rouge">/opt/outputs/nodes-z3444kd9.json</code>.</p>

<ul>
  <li>Task completed</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-리소스-json-형태로-출력하기">2. 리소스 JSON 형태로 출력하기</h3>

<ul>
  <li>리소스 조회 명령어에 <code class="language-plaintext highlighter-rouge">-o json</code> 옵션을 더해 노드를 JSON 형태로 출력한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get nodes <span class="nt">-o</span> json
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>명령문을 실행해 결과값이 올바르게 뜨는지 확인 후, 파일에 저장한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>kubectl get nodes <span class="nt">-o</span> json <span class="o">&gt;</span> /opt/outputs/nodes-z3444kd9.json
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>저장이 잘 되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">cat</span> /opt/outputs/nodes-z3444kd9.json
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
  <li>노드: <a href="https://kubernetes.io/ko/docs/concepts/architecture/nodes/">https://kubernetes.io/ko/docs/concepts/architecture/nodes/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[리소스 조회 시 -o json 옵션을 추가한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.5 - 서비스(Service) 노출하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-05/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.5 - 서비스(Service) 노출하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-05</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-05/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-15---서비스service-노출하기">모의고사 1.5 - 서비스(Service) 노출하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Create a service <code class="language-plaintext highlighter-rouge">messaging-service</code> to expose the <code class="language-plaintext highlighter-rouge">messaging</code> application within the cluster on port <code class="language-plaintext highlighter-rouge">6379</code>.</p>

<p>Use imperative commands.</p>

<ul>
  <li>Service: messaging-service</li>
  <li>Port: 6379</li>
  <li>Type: ClusterIp</li>
  <li>Use the right labels</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-명령형-커맨드를-이용해-서비스service-생성">2. 명령형 커맨드를 이용해 서비스(Service) 생성</h3>

<ul>
  <li>명령문으로 서비스의 매니페스트 파일을 생성한 뒤 저장한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k expose pod messaging <span class="nt">--name</span><span class="o">=</span>messaging-service <span class="nt">--port</span><span class="o">=</span>6379 <span class="nt">--type</span><span class="o">=</span>ClusterIP <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="o">&gt;</span> messaging-service.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일이 제대로 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  vi messaging-service.yaml

<span class="o">====</span>

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    tier: msg
  name: messaging-service
spec:
  ports:
  - port: 6379
    protocol: TCP
    targetPort: 6379
  selector:
    tier: msg
  <span class="nb">type</span>: ClusterIP
status:
  loadBalancer: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 이용해 서비스를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> messaging-service.yaml 
service/messaging-service created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>서비스가 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get service <span class="nt">-o</span> wide
NAME                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class="o">(</span>S<span class="o">)</span>    AGE   SELECTOR
kubernetes          ClusterIP   10.96.0.1        &lt;none&gt;        443/TCP    28m   &lt;none&gt;
messaging-service   ClusterIP   10.102.189.233   &lt;none&gt;        6379/TCP   40s   <span class="nv">tier</span><span class="o">=</span>msg
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[kubectl expose 명령어로 서비스를 생성한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.6 - 디플로이먼트(Deployment) 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-06/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.6 - 디플로이먼트(Deployment) 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-06</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-06/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-16---디플로이먼트deployment-생성하기">모의고사 1.6 - 디플로이먼트(Deployment) 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Create a deployment named <code class="language-plaintext highlighter-rouge">hr-web-app</code> using the image <code class="language-plaintext highlighter-rouge">kodekloud/webapp-color</code> with <code class="language-plaintext highlighter-rouge">2</code> replicas.</p>

<ul>
  <li>Name: hr-web-app</li>
  <li>Image: kodekloud/webapp-color</li>
  <li>Replicas: 2</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-명령문으로-디플로이먼트deployment-생성">2. 명령문으로 디플로이먼트(Deployment) 생성</h3>

<ul>
  <li>명령문으로 디플로이먼트의 매니페스트 파일을 생성한 뒤 저장한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create deployment hr-web-app <span class="nt">--image</span><span class="o">=</span>kodekloud/webapp-color <span class="nt">--replicas</span><span class="o">=</span>2 <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="o">&gt;</span> hr-web-app.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일이 제대로 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  vi hr-web-app.yaml

<span class="o">====</span>

apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: hr-web-app
  name: hr-web-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hr-web-app
  strategy: <span class="o">{}</span>
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: hr-web-app
    spec:
      containers:
      - image: kodekloud/webapp-color
        name: webapp-color
        resources: <span class="o">{}</span>
status: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 이용해 디플로이먼트를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> hr-web-app.yaml 
deployment.apps/hr-web-app created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>디플로이먼트가 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get deployments.apps 
NAME         READY   UP-TO-DATE   AVAILABLE   AGE
hr-web-app   2/2     2            2           20s
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[명령형 커맨드로 디플로이먼트(Deployment) YAML를 생성한 뒤 생성한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.7 - 스태틱 파드(Static Pod) 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-07/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.7 - 스태틱 파드(Static Pod) 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-07</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-07/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-17---스태틱-파드static-pod-생성하기">모의고사 1.7 - 스태틱 파드(Static Pod) 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Create a static pod named <code class="language-plaintext highlighter-rouge">static-busybox</code> on the controlplane node that uses the <code class="language-plaintext highlighter-rouge">busybox</code> image and the command <code class="language-plaintext highlighter-rouge">sleep 1000</code>.</p>

<ul>
  <li>Name: static-busybox</li>
  <li>Image: busybox</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<h3 id="2-yaml-파일을-선언형으로-생성해-스태틱-파드static-pod-생성">2. YAML 파일을 선언형으로 생성해 스태틱 파드(Static Pod) 생성</h3>

<ul>
  <li>스태틱 파드가 생성되는 경로를 찾는다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane /etc/kubernetes ➜  <span class="nb">cd </span>manifests/

root@controlplane /etc/kubernetes/manifests ➜  <span class="nb">ls</span> <span class="nt">-al</span>
total 28
drwxr-xr-x 1 root root 4096 May 16 12:53 <span class="nb">.</span>
drwxr-xr-x 1 root root 4096 May 16 12:53 ..
<span class="nt">-rw-------</span> 1 root root 2183 May 16 12:53 etcd.yaml
<span class="nt">-rw-------</span> 1 root root 3807 May 16 12:53 kube-apiserver.yaml
<span class="nt">-rw-------</span> 1 root root 3314 May 16 12:53 kube-controller-manager.yaml
<span class="nt">-rw-------</span> 1 root root 1384 May 16 12:53 kube-scheduler.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 저장한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane /etc/kubernetes/manifests ➜  k run static-busybox <span class="nt">--image</span><span class="o">=</span>busybox <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="nt">--command</span> <span class="nt">--</span> <span class="nb">sleep </span>1000 <span class="o">&gt;</span> static-busybox.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일이 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane /etc/kubernetes/manifests ➜  <span class="nb">cat </span>static-busybox.yaml 
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: static-busybox
  name: static-busybox
spec:
  containers:
  - <span class="nb">command</span>:
    - <span class="nb">sleep</span>
    - <span class="s2">"1000"</span>
    image: busybox
    name: static-busybox
    resources: <span class="o">{}</span>
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>스태틱 파드(Static Pod)가 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane /etc/kubernetes/manifests ➜  k get pods <span class="nt">-A</span>
NAMESPACE     NAME                                   READY   STATUS    RESTARTS   AGE
default       hr-web-app-99dfd4c9d-nwvlr             1/1     Running   0          8m6s
default       hr-web-app-99dfd4c9d-xfpx5             1/1     Running   0          8m6s
default       messaging                              1/1     Running   0          23m
default       nginx-pod                              1/1     Running   0          26m
default       static-busybox-controlplane            1/1     Running   0          83s
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>스태틱 파드 생성하기: <a href="https://kubernetes.io/ko/docs/tasks/configure-pod-container/static-pod/">https://kubernetes.io/ko/docs/tasks/configure-pod-container/static-pod/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[스태틱 파드(Static Pod)를 생성하려면 kubelet이 지정한 경로에 YAML을 직접 생성해야한다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.8 - 파드(POD) 특정 네임스페이스에 생성하기</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-08/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.8 - 파드(POD) 특정 네임스페이스에 생성하기" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-08</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-08/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-18---파드pod-특정-네임스페이스에-생성하기">모의고사 1.8 - 파드(POD) 특정 네임스페이스에 생성하기</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>Create a POD in the <code class="language-plaintext highlighter-rouge">finance</code> namespace named <code class="language-plaintext highlighter-rouge">temp-bus</code> with the image <code class="language-plaintext highlighter-rouge">redis:alpine</code>.</p>

<ul>
  <li>Name: temp-bus</li>
  <li>Image Name: redis:alpine</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-특정-네임스페이스namespace에-파드pod생성">2. 특정 네임스페이스(Namespace)에 파드(POD)생성</h3>

<ul>
  <li>명령문으로 파드의 매니페스트 파일을 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k run <span class="nt">-n</span> finance temp-bus <span class="nt">--image</span><span class="o">=</span>redis:alpine <span class="nt">--dry-run</span><span class="o">=</span>client <span class="nt">-o</span> yaml <span class="o">&gt;</span> temp-bus.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일이 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  vi temp-bus.yaml

<span class="o">====</span>

apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: null
  labels:
    run: temp-bus
  name: temp-bus
  namespace: finance
spec:
  containers:
  - image: redis:alpine
    name: temp-bus
    resources: <span class="o">{}</span>
  dnsPolicy: ClusterFirst
  restartPolicy: Always
status: <span class="o">{}</span>
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>매니페스트 파일을 이용해 파드를 생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> temp-bus.yaml 
pod/temp-bus created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파드가 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pods <span class="nt">-n</span> finance
NAME       READY   STATUS    RESTARTS   AGE
temp-bus   1/1     Running   0          71s
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[명령형 커맨드로 파드(POD) YAML 을 생성할 때 -n 옵션으로 네임스페이스를 지정할 수 있다]]></summary></entry><entry><title type="html">[Kubernetes/CKA]모의고사 1.9 - 파드(POD) 트러블 슈팅</title><link href="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-09/" rel="alternate" type="text/html" title="[Kubernetes/CKA]모의고사 1.9 - 파드(POD) 트러블 슈팅" /><published>2022-05-17T00:00:00+09:00</published><updated>2022-05-17T00:00:00+09:00</updated><id>http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-09</id><content type="html" xml:base="http://localhost:4000/devops/Kubernetes-CKA-Mock-Exam-1-09/"><![CDATA[<p><br /><br /></p>

<h1 id="모의고사-19---파드pod-트러블-슈팅">모의고사 1.9 - 파드(POD) 트러블 슈팅</h1>

<h2 id="1-문제-요건">1. 문제 요건</h2>

<p>A new application <code class="language-plaintext highlighter-rouge">orange</code> is deployed. There is something wrong with it. Identify and fix the issue.</p>

<ul>
  <li>Issue fixed</li>
</ul>

<p><br /><br /></p>

<h2 id="2-내-풀이">2. 내 풀이</h2>

<h3 id="1-사전-작업">1. 사전 작업</h3>

<ul>
  <li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  <span class="nb">source</span> &lt;<span class="o">(</span>kubectl completion bash<span class="o">)</span>

root@controlplane ~ ➜  <span class="nb">echo</span> <span class="s2">"source &lt;(kubectl completion bash)"</span> <span class="o">&gt;&gt;</span> ~/.bashrc 

root@controlplane ~ ➜  <span class="nb">alias </span><span class="nv">k</span><span class="o">=</span>kubectl

root@controlplane ~ ➜  <span class="nb">complete</span> <span class="nt">-F</span> __start_kubectl k
</code></pre></div></div>

<p><br /><br /></p>

<h3 id="2-파드pod-트러블-슈팅">2. 파드(POD) 트러블 슈팅</h3>

<ul>
  <li>문제가 되는 리소스를 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pods
NAME                          READY   STATUS                  RESTARTS   AGE
hr-web-app-99dfd4c9d-nwvlr    1/1     Running                 0          14m
hr-web-app-99dfd4c9d-xfpx5    1/1     Running                 0          14m
messaging                     1/1     Running                 0          29m
nginx-pod                     1/1     Running                 0          32m
orange                        0/1     Init:CrashLoopBackOff   1          37s
static-busybox-controlplane   1/1     Running                 0          7m36s
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>문제 리소스의 상세 정보를 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k describe pod orange 
Name:         orange
Namespace:    default
Priority:     0
Node:         controlplane/10.33.139.9
Start Time:   Mon, 16 May 2022 13:38:48 +0000
Labels:       &lt;none&gt;
Annotations:  &lt;none&gt;
Status:       Pending
IP:           10.244.0.10
IPs:
  IP:  10.244.0.10
Init Containers:
  init-myservice:
    Container ID:  docker://ceff8513b3e73cbb4ac8b351ba8b58b228c9d48e41c3e16be3ca53a790699e4a
    Image:         busybox
    Image ID:      docker-pullable://busybox@sha256:d2b53584f580310186df7a2055ce3ff83cc0df6caacf1e3489bff8cf5d0af5d8
    Port:          &lt;none&gt;
    Host Port:     &lt;none&gt;
    Command:
      sh
      <span class="nt">-c</span>
      sleeeep 2<span class="p">;</span>
    State:          Waiting
      Reason:       CrashLoopBackOff
    Last State:     Terminated
      Reason:       Error
      Exit Code:    127
      Started:      Mon, 16 May 2022 13:39:54 +0000
      Finished:     Mon, 16 May 2022 13:39:54 +0000
    Ready:          False
    Restart Count:  3
    Environment:    &lt;none&gt;
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-g456l <span class="o">(</span>ro<span class="o">)</span>
Containers:
  orange-container:
    Container ID:  
    Image:         busybox:1.28
    Image ID:      
    Port:          &lt;none&gt;
    Host Port:     &lt;none&gt;
    Command:
      sh
      <span class="nt">-c</span>
      <span class="nb">echo </span>The app is running! <span class="o">&amp;&amp;</span> <span class="nb">sleep </span>3600
    State:          Waiting
      Reason:       PodInitializing
    Ready:          False
    Restart Count:  0
    Environment:    &lt;none&gt;
    Mounts:
      /var/run/secrets/kubernetes.io/serviceaccount from default-token-g456l <span class="o">(</span>ro<span class="o">)</span>
Conditions:
  Type              Status
  Initialized       False 
  Ready             False 
  ContainersReady   False 
  PodScheduled      True 
Volumes:
  default-token-g456l:
    Type:        Secret <span class="o">(</span>a volume populated by a Secret<span class="o">)</span>
    SecretName:  default-token-g456l
    Optional:    <span class="nb">false
</span>QoS Class:       BestEffort
Node-Selectors:  &lt;none&gt;
Tolerations:     node.kubernetes.io/not-ready:NoExecute <span class="nv">op</span><span class="o">=</span>Exists <span class="k">for </span>300s
                 node.kubernetes.io/unreachable:NoExecute <span class="nv">op</span><span class="o">=</span>Exists <span class="k">for </span>300s
Events:
  Type     Reason     Age                From               Message
  <span class="nt">----</span>     <span class="nt">------</span>     <span class="nt">----</span>               <span class="nt">----</span>               <span class="nt">-------</span>
  Normal   Scheduled  90s                default-scheduler  Successfully assigned default/orange to controlplane
  Normal   Pulled     78s                kubelet            Successfully pulled image <span class="s2">"busybox"</span> <span class="k">in </span>820.289773ms
  Normal   Pulled     76s                kubelet            Successfully pulled image <span class="s2">"busybox"</span> <span class="k">in </span>835.60682ms
  Normal   Pulled     60s                kubelet            Successfully pulled image <span class="s2">"busybox"</span> <span class="k">in </span>816.153841ms
  Normal   Pulling    27s <span class="o">(</span>x4 over 79s<span class="o">)</span>  kubelet            Pulling image <span class="s2">"busybox"</span>
  Normal   Pulled     26s                kubelet            Successfully pulled image <span class="s2">"busybox"</span> <span class="k">in </span>795.989984ms
  Normal   Created    25s <span class="o">(</span>x4 over 78s<span class="o">)</span>  kubelet            Created container init-myservice
  Normal   Started    24s <span class="o">(</span>x4 over 78s<span class="o">)</span>  kubelet            Started container init-myservice
  Warning  BackOff    12s <span class="o">(</span>x6 over 75s<span class="o">)</span>  kubelet            Back-off restarting failed container
</code></pre></div></div>

<ul>
  <li>Event 를 살펴보았을 때 init 컨테이너에서 문제가 발생한 것을 알 수 있다.</li>
</ul>

<p><br /></p>

<ul>
  <li>orange 파드의 매니페스트 파일을 저장한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pod orange <span class="nt">-o</span> yaml <span class="o">&gt;</span> orange.yaml
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>문제가 있는 부분을 찾아서 고친다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>vi orange.yaml

<span class="o">====</span>

<span class="o">(</span>생략<span class="o">)</span>
initContainers:
  - <span class="nb">command</span>:
    - sh
    - <span class="nt">-c</span>
    - sleeeeep 2<span class="p">;</span>
<span class="o">(</span>생략<span class="o">)</span>
</code></pre></div></div>

<ul>
  <li>sleeeeep 2 ⇒ sleep 2로 수정한다.</li>
</ul>

<p><br /></p>

<ul>
  <li>기존에 생성되었던 파드를 지운다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k delete pod orange 
pod <span class="s2">"orange"</span> deleted
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>수정한 매니페스트 파일을 이용해 파드를 재생성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k create <span class="nt">-f</span> orange.yaml 
pod/orange created
</code></pre></div></div>

<p><br /></p>

<ul>
  <li>파드가 잘 동작하는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane ~ ➜  k get pods
NAME                          READY   STATUS    RESTARTS   AGE
hr-web-app-99dfd4c9d-nwvlr    1/1     Running   0          42m
hr-web-app-99dfd4c9d-xfpx5    1/1     Running   0          42m
messaging                     1/1     Running   0          57m
nginx-pod                     1/1     Running   0          61m
orange                        1/1     Running   0          16s
static-busybox-controlplane   1/1     Running   2          35m
</code></pre></div></div>

<p><br /><br /></p>

<h2 id="3-참고-url">3. 참고 URL</h2>

<ul>
  <li>kubectl cheat sheet: <a href="https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>
</ul>]]></content><author><name>Canary</name><email>jinnypark9393@gmail.com</email></author><category term="DevOps" /><category term="쿠버네티스" /><category term="쿠버네티스자격증" /><category term="유데미강의추천" /><category term="유데미쿠버네티스" /><category term="cka연습문제풀이" /><category term="cka덤프" /><category term="cka기출문제" /><category term="cka" /><category term="kubernetes" /><category term="kubernetesnetworking" /><category term="k8s" /><category term="DevOpsengineer" /><category term="데브옵스" /><category term="데브옵스엔지니어" /><summary type="html"><![CDATA[파드(POD)에 문제가 생겼을 경우, kubectl describe 명령어로 파드의 이벤트를 살펴본다]]></summary></entry></feed>