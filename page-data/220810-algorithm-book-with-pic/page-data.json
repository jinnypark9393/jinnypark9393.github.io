{"componentChunkName":"component---src-templates-blog-template-js","path":"/220810-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"e93fb860-d97c-5231-8f0e-f8710dd2d1a3","html":"<h1 id=\"제-4장-기본적인-알고리즘6\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-4%EC%9E%A5-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%986\" aria-label=\"제 4장 기본적인 알고리즘6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 4장: 기본적인 알고리즘(6)</h1>\n<h2 id=\"46-두-변수의-값을-교환할-때는-임시-변수를-사용한다\" style=\"position:relative;\"><a href=\"#46-%EB%91%90-%EB%B3%80%EC%88%98%EC%9D%98-%EA%B0%92%EC%9D%84-%EA%B5%90%ED%99%98%ED%95%A0-%EB%95%8C%EB%8A%94-%EC%9E%84%EC%8B%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"46 두 변수의 값을 교환할 때는 임시 변수를 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>46. 두 변수의 값을 교환할 때는 임시 변수를 사용한다.</h2>\n<ul>\n<li>변수 X와 Y의 값을 교환 하려면, 아래 순서대로 하면 교환할 수 없다.\n<ul>\n<li>변수 Y에 변수 X 값 대입</li>\n<li>변수 X에 변수 Y 값 대입(이미 변수 X의 값은 Y값으로 덮어씌워짐)</li>\n</ul>\n</li>\n<li><strong>임시변수</strong>를 이용해 값을 임시로 저장해야한다.\n<ul>\n<li>1단계: 변수 W에 변수 Y 값 대입</li>\n<li>2단계: 변수 Y에 변수 X 값 대입</li>\n<li>3단계: 변수 X에 변수 W 값 대입</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"47-두-수의-최대공약수는-유클리드-호제법으로-구한다\" style=\"position:relative;\"><a href=\"#47-%EB%91%90-%EC%88%98%EC%9D%98-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EB%8A%94-%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9C%BC%EB%A1%9C-%EA%B5%AC%ED%95%9C%EB%8B%A4\" aria-label=\"47 두 수의 최대공약수는 유클리드 호제법으로 구한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>47. 두 수의 최대공약수는 유클리드 호제법으로 구한다</h2>\n<ul>\n<li>\n<p>최대공약수: 0이 아닌 정수들의 공통된 약수 중 가장 큰 수</p>\n</li>\n<li>\n<p><strong>유클리드 호제법</strong>으로 구하면 된다.</p>\n<ul>\n<li>호제법: 2개의 수가 서로 나누는 것</li>\n<li>정수 X와 Y(X ≥ Y)가 주어졌을 때 X를 Y로 나눈 나머지를 R이라고 하면, X와 Y의 최대공양수는 Y와 R의 최대공약수와 같다. 그러나 X와 0이 남았을 경우 최대공약수는 X로 한다.</li>\n</ul>\n</li>\n<li>\n<p>정수 X와 Y(X ≥ Y)의 최대공약수를 변수 GCD에 구하는 알고리즘</p>\n<p>1단계: 변수 R에 X/Y의 나머지 값을 대입</p>\n<p>2단계: 변수 R이 0이 아니라면 다음 3~5단계를 반복</p>\n<p>3단계: 변수 X에 변수 Y의 값을 대입한다.</p>\n<p>4단계: 변수 Y에 변수 R의 값을 대입한다.</p>\n<p>5단계: 변수 R에 X/Y의 나머지 값을 대입한다.</p>\n<p>6단계: 변수 GCD에 변수 Y값을 대입한다.</p>\n</li>\n</ul>\n<h2 id=\"칼럼-코드와-데이터는-어디에-있을까\" style=\"position:relative;\"><a href=\"#%EC%B9%BC%EB%9F%BC-%EC%BD%94%EB%93%9C%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"칼럼 코드와 데이터는 어디에 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>칼럼: 코드와 데이터는 어디에 있을까?</h2>\n<ul>\n<li>알고리즘을 컴퓨터에서 실제로 작동시키는 것 ⇒ <strong>프로그램</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로그램</th>\n<th>알고리즘</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>코드</td>\n<td>처리</td>\n</tr>\n<tr>\n<td>데이터</td>\n<td>변수</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>이 코드와 데이터들은 모두 컴퓨터의 기억장치인 메모리 공간에 배치</li>\n<li>메모리는 셀이라는 단위로 관리</li>\n<li>각 셀에는 주소(어드레스)가 붙어있다.\n<ul>\n<li>주소를 요소번호라고 하면, 메모리 공간을 큰 배열이라 생각할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>","excerpt":"제 4장: 기본적인 알고리즘(6) 46. 두 변수의 값을 교환할 때는 임시 변수를 사용한다. 변수 X와 Y의 값을 교환 하려면, 아래 순서대로 하면 교환할 수 없다. 변수 Y에 변수 X 값 대입 변수 X에 변수 Y 값 대입(이미 변수 X의 값은 Y값으로 덮어씌워짐) 임시변수를 이용해 값을 임시로 저장해야한다. 1단계: 변수 W에 변수 Y 값 대입 2단계: 변수 Y에 변수 X 값 대입 3단계: 변수 X에 변수 W 값 대입 47. 두 수의 최대공약수는 유클리드 호제법으로 구한다 최대공약수: 0이 아닌 정수들의 공통된 약수 중 가장 큰 수 유클리드 호제법으로 구하면 된다. 호제법: 2개의 수가 서로 나누는 것 정수 X와 Y(X ≥ Y)가 주어졌을 때 X를 Y로 나눈 나머지를 R이라고 하면, X와 Y의 최대공양수는 Y와 R의 최대공약수와 같다. 그러나 X와 0이 남았을 경우 최대공약수는 X로 한다. 정수 X와 Y(X ≥ Y)의 최대공약수를 변수 GCD에 구하는 알고리즘 1단계: 변수 R에…","frontmatter":{"date":"August 10, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(6)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220810-algorithm-book-with-pic/"}},"next":{"id":"519587bd-45c9-53e5-9d62-7e6021233841","html":"<h1 id=\"제-4장-기본적인-알고리즘5\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-4%EC%9E%A5-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%985\" aria-label=\"제 4장 기본적인 알고리즘5 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 4장: 기본적인 알고리즘(5)</h1>\n<h2 id=\"44-시간의-크고-작음을-비교하려면-단위를-초-단위로-통일한다\" style=\"position:relative;\"><a href=\"#44-%EC%8B%9C%EA%B0%84%EC%9D%98-%ED%81%AC%EA%B3%A0-%EC%9E%91%EC%9D%8C%EC%9D%84-%EB%B9%84%EA%B5%90%ED%95%98%EB%A0%A4%EB%A9%B4-%EB%8B%A8%EC%9C%84%EB%A5%BC-%EC%B4%88-%EB%8B%A8%EC%9C%84%EB%A1%9C-%ED%86%B5%EC%9D%BC%ED%95%9C%EB%8B%A4\" aria-label=\"44 시간의 크고 작음을 비교하려면 단위를 초 단위로 통일한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>44. 시간의 크고 작음을 비교하려면 단위를 초 단위로 통일한다</h2>\n<ul>\n<li>시간의 크고작음을 계산할 때에는 시간, 분, 초 순서대로 비교하는 알고리즘으로 구할 수도 있지만 초 단위로 시간을 통일시켜 비교하는 것이 더 좋다(컴퓨터는 연산에 특화 되었기 때문)</li>\n<li>시 분 초를 초단위로 변환하는 계산식\n<ul>\n<li>H시 M분 S초 = H<em>3600 + M</em>60 + S</li>\n<li>예: 6시 32분 12초(A) 7 7시 10분 52초(B)\n<ul>\n<li>6<em>3600 + 32</em>60 + 12 = 32532 (A)</li>\n<li>7<em>3600 + 10</em>60 + 52 =25832 (B)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"45-시간차를-구할-때에는-초-단위로-바꾸어-뺄셈하고-다시-시간으로-바꾼다\" style=\"position:relative;\"><a href=\"#45-%EC%8B%9C%EA%B0%84%EC%B0%A8%EB%A5%BC-%EA%B5%AC%ED%95%A0-%EB%95%8C%EC%97%90%EB%8A%94-%EC%B4%88-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EB%B0%94%EA%BE%B8%EC%96%B4-%EB%BA%84%EC%85%88%ED%95%98%EA%B3%A0-%EB%8B%A4%EC%8B%9C-%EC%8B%9C%EA%B0%84%EC%9C%BC%EB%A1%9C-%EB%B0%94%EA%BE%BC%EB%8B%A4\" aria-label=\"45 시간차를 구할 때에는 초 단위로 바꾸어 뺄셈하고 다시 시간으로 바꾼다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>45. 시간차를 구할 때에는 초 단위로 바꾸어 뺄셈하고, 다시 시간으로 바꾼다</h2>\n<ul>\n<li>\n<p>시간을 초단위로 바꾸는 식</p>\n<ul>\n<li>H시 M분 s초 = H<em>3600 + M</em>60 + S</li>\n</ul>\n</li>\n<li>\n<p>초 단위 값인 TIME을 H시 M분 S초로 변환</p>\n<p>1단계: TIME을 3600으로 나눈 몫의 정수 부분 =H</p>\n<p>2단계: TIME을 3600으로 나눈 나머지 값이 R</p>\n<p>3단계: R을 60으로 나눈 몫이 M</p>\n<p>4단계: R을 60으로 나눈 나머지 값이 S</p>\n</li>\n<li>\n<p>예시</p>\n<p>1단계: TIME1에 H1 *3600 + M1 *60 + S1 대입</p>\n<p>2단계: TIME2에 H2 *3600 + M2 *60 + S2대입</p>\n<p>3단계: DIFF에 TIME2 - TIME1을 대입</p>\n<p>4단계: H에 DIFF를 3600으로 나눈 몫의 정수 부분을 대입</p>\n<p>2단계: TIME을 3600으로 나눈 나머지 값이 R</p>\n<p>3단계: R을 60으로 나눈 몫이 M</p>\n<p>4단계: R을 60으로 나눈 나머지 값이 S</p>\n</li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"August 09, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(5)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220809-algorithm-book-with-pic/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220810-algorithm-book-with-pic/","nextSlug":"/220809-algorithm-book-with-pic/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}