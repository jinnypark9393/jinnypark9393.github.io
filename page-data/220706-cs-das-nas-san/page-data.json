{"componentChunkName":"component---src-templates-blog-template-js","path":"/220706-cs-das-nas-san/","result":{"data":{"cur":{"id":"1fc2cf5c-509b-532e-9d14-6d3998a5f61a","html":"<p>DAS, NAS, SAN은 모두 대표적인 스토리지의 종류이며, 각 스토리지는 연결 방식에 차이가 있다. 이번 포스팅에서는 DAS, NAS, SAN의 개념과 차이점에 대해 알아보자.</p>\n<h1 id=\"0-스토리지storage란\" style=\"position:relative;\"><a href=\"#0-%EC%8A%A4%ED%86%A0%EB%A6%AC%EC%A7%80storage%EB%9E%80\" aria-label=\"0 스토리지storage란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 스토리지(Storage)란?</h1>\n<p>컴퓨터의 데이터를 저장하는 역할을 수행한다. 컴퓨터 내부의 하드디스크와 유사한 역할을 수행한다고 생각하면 된다.</p>\n<p><br/><br/></p>\n<h1 id=\"1-dasdata-attached-storage\" style=\"position:relative;\"><a href=\"#1-dasdata-attached-storage\" aria-label=\"1 dasdata attached storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DAS(Data Attached Storage)</h1>\n<ul>\n<li>\n<p>서버와 스토리지가 <strong>물리적으로 직접 연결</strong>되는 방식.</p>\n</li>\n<li>\n<p>네트워크상의 다른 서버는 저장된 데이터에 액세스가 불가하다.</p>\n</li>\n<li>\n<p>컴퓨터에 연결하는 외장 하드와 비슷한 개념이라고 생각하면 된다.</p>\n<p><img src=\"/assets/images/2022-07-06-Storage-DAS-NAS-SAN/2022-07-06-Storage-DAS-NAS-SAN2.png\" alt=\"2022-07-06-Storage-DAS-NAS-SAN1\"></p>\n</li>\n<li>\n<p>서버와 스토리지가 FC(Fiber Channel) cable로 직접 연결된다.</p>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>속도가 빠르다(서버에 물리적으로 직접 연결하기 때문).</li>\n<li>확장이 쉽다(구축이 쉽다).</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>연결 수에 한계가 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"2-nasnetwork-attached-storage\" style=\"position:relative;\"><a href=\"#2-nasnetwork-attached-storage\" aria-label=\"2 nasnetwork attached storage permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. NAS(Network Attached Storage)</h1>\n<ul>\n<li>\n<p>DAS가 직접 연결된 것이라면 NAS는 LAN방식의 네트워크를 통해 연결된다.</p>\n</li>\n<li>\n<p>여러 컴퓨터가 동일한 저장소 공간을 공유한다.</p>\n</li>\n<li>\n<p>LAN은 TCP/IP 프로토콜, 저장장치는 SCSI를 사용하기 때문에 중계 역할을 하는 파일서버가 필요하다.</p>\n</li>\n<li>\n<p>NFS 프로토콜 등을 통해 접속한다.</p>\n<p><img src=\"/assets/images/2022-07-06-Storage-DAS-NAS-SAN/2022-07-06-Storage-DAS-NAS-SAN3.png\" alt=\"2022-07-06-Storage-DAS-NAS-SAN3\"></p>\n</li>\n<li>\n<p>Server - LAN - Storage 구조</p>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>하드디스크를 중앙에서 관리할 수 있어서 오버헤드가 적게 걸린다.</li>\n<li>상대적으로 구축/유지보수가 용이하다.</li>\n<li>상대적으로 저렴하다.</li>\n<li>DAS와 달리 Port수 제한이 없어 확장성, 유연성이 뛰어나다.</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>접속 증가 시 성능이 저하된다.</li>\n<li>전송 속도가 DAS보다 느리다.</li>\n<li>파일시스템을 공유하기 때문에 보안에 비교적 취약하다.</li>\n<li>백업이 어렵다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"3-sanstorage-network-area\" style=\"position:relative;\"><a href=\"#3-sanstorage-network-area\" aria-label=\"3 sanstorage network area permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. SAN(Storage Network Area)</h1>\n<ul>\n<li>\n<p>디스크 어레이(외장 스토리지) 컨트롤러 및 테이프 라이브러리와 같은 컴퓨터 스토리지 디바이스를 서버와 연결하기 위해 설계되었다.</p>\n</li>\n<li>\n<p>컴퓨터 시스템과 스위치 사이에서 데이터를 전송한다.</p>\n</li>\n<li>\n<p>NAS와는 달리 파일이 아닌 블록 단위의 I/O(입출력: input &#x26; output)을 기본으로 한다.</p>\n</li>\n<li>\n<p>이 때 스위치는 일반 네트워크 스위치 아닌 SAN 방식을 지원하는 FC(Fiber Channel) 스위치.</p>\n</li>\n<li>\n<p>FC 케이블이라는 전용 케이블을 사용해 서버와 스토리지, 그리고 FC 스위치를 연결해 통신한다.</p>\n</li>\n<li>\n<p>SAN 스위치의 종류</p>\n<ul>\n<li>FC-SAN: 광 케이블로 통신하는 FC방식. 광 케이블을 사용하므로 10km이내에서만 사용한다.</li>\n<li>IP-SAN: Internet Protocol 방식을 채용해 IP통신이 가능한 범위라면 거리 제한이 없다.</li>\n</ul>\n<p><img src=\"/assets/images/2022-07-06-Storage-DAS-NAS-SAN/2022-07-06-Storage-DAS-NAS-SAN1.png\" alt=\"2022-07-06-Storage-DAS-NAS-SAN1\"></p>\n</li>\n<li>\n<p>Server - SAN - Storage 구조</p>\n</li>\n<li>\n<p>장점</p>\n<ul>\n<li>서버 당 접속 스토리지 수 제한을 해결했다.</li>\n<li>전용 FC스위치(광 채널)을 두어 빠른 속도의 연결을 유지한다.</li>\n</ul>\n</li>\n<li>\n<p>단점</p>\n<ul>\n<li>상대적으로 고가이다.</li>\n<li>상대적으로 구축이 까다롭다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>","excerpt":"DAS, NAS, SAN은 모두 대표적인 스토리지의 종류이며, 각 스토리지는 연결 방식에 차이가 있다. 이번 포스팅에서는 DAS, NAS, SAN의 개념과 차이점에 대해 알아보자. 0. 스토리지(Storage)란? 컴퓨터의 데이터를 저장하는 역할을 수행한다. 컴퓨터 내부의 하드디스크와 유사한 역할을 수행한다고 생각하면 된다.  1. DAS(Data Attached Storage) 서버와 스토리지가 물리적으로 직접 연결되는 방식. 네트워크상의 다른 서버는 저장된 데이터에 액세스가 불가하다. 컴퓨터에 연결하는 외장 하드와 비슷한 개념이라고 생각하면 된다. 2022-07-06-Storage-DAS-NAS-SAN1 서버와 스토리지가 FC(Fiber Channel) cable로 직접 연결된다. 장점 속도가 빠르다(서버에 물리적으로 직접 연결하기 때문). 확장이 쉽다(구축이 쉽다). 단점 연결 수에 한계가 있다.  2. NAS(Network Attached Storage) DAS가 직접 연결…","frontmatter":{"date":"July 06, 2022","title":"DAS, NAS, SAN이란? (정의, 차이점)","categories":"CS","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220706-cs-das-nas-san/"}},"next":{"id":"df5491e1-bee7-54e2-b84e-5f0d4b5d0d7c","html":"<h1 id=\"1-zsh-command-not-found-virtualenv-에러-배경-상황\" style=\"position:relative;\"><a href=\"#1-zsh-command-not-found-virtualenv-%EC%97%90%EB%9F%AC-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 zsh command not found virtualenv 에러 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. “zsh: command not found: virtualenv” 에러 배경 상황</h1>\n<p>“<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 강의의 Django 환경 세팅 부분을 따라하다가 가상환경 설정 부분에서 에러가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">zsh: <span class=\"token builtin class-name\">command</span> not found: virtualenv</code></pre></div>\n<p>찾아보니 가장 간단한 방법으로는 virtualenv를 삭제했다가 다시 깔아보라는 내용이 있어 시도해보았다.</p>\n<h1 id=\"2-zsh-command-not-found-pip\" style=\"position:relative;\"><a href=\"#2-zsh-command-not-found-pip\" aria-label=\"2 zsh command not found pip permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. “zsh: command not found: pip”</h1>\n<p>그런데 pip 명령어도 찾을 수 없다는 에러가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  shrinkers git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ pip uninstall virtualenv\nzsh: <span class=\"token builtin class-name\">command</span> not found: pip</code></pre></div>\n<h1 id=\"2-zsh-command-not-found-pip-해결-방법\" style=\"position:relative;\"><a href=\"#2-zsh-command-not-found-pip-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 zsh command not found pip 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. “zsh: command not found: pip” 해결 방법</h1>\n<p>1분 전에 pip로 Django를 깔았는데 이럴 수가 있나? 싶어서 Django 설치 때와 동일하게 pip 뒤에 버전명을 붙여 실행하니 해결되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  shrinkers git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ pip3.10 uninstall virtualenv\nWARNING: Skipping virtualenv as it is not installed.</code></pre></div>\n<p>실행결과를 보니 virtualenv 자체가 설치가 안 된 모양. virtualenv가 실행이 되지 않은 게 당연했다.</p>\n<h1 id=\"2-zsh-command-not-found-virtualenv-해결-방법\" style=\"position:relative;\"><a href=\"#2-zsh-command-not-found-virtualenv-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 zsh command not found virtualenv 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. “zsh: command not found: virtualenv” 해결 방법</h1>\n<p><code class=\"language-text\">pip</code> 를 이용해 <code class=\"language-text\">virtualenv</code>를 깔아주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  shrinkers git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ pip3.10 <span class=\"token function\">install</span> virtualenv \nCollecting virtualenv\n  Downloading virtualenv-20.15.1-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">10.1</span> MB<span class=\"token punctuation\">)</span>\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class=\"token number\">10.1</span>/10.1 MB <span class=\"token number\">3.1</span> MB/s eta <span class=\"token number\">0</span>:00:00\nCollecting six<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span>,<span class=\"token operator\">>=</span><span class=\"token number\">1.9</span>.0\n  Downloading six-1.16.0-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">11</span> kB<span class=\"token punctuation\">)</span>\nCollecting distlib<span class=\"token operator\">&lt;</span><span class=\"token number\">1</span>,<span class=\"token operator\">>=</span><span class=\"token number\">0.3</span>.1\n  Downloading distlib-0.3.4-py2.py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">461</span> kB<span class=\"token punctuation\">)</span>\n     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ <span class=\"token number\">461.2</span>/461.2 KB <span class=\"token number\">2.5</span> MB/s eta <span class=\"token number\">0</span>:00:00\nCollecting platformdirs<span class=\"token operator\">&lt;</span><span class=\"token number\">3</span>,<span class=\"token operator\">>=</span><span class=\"token number\">2</span>\n  Downloading platformdirs-2.5.2-py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">14</span> kB<span class=\"token punctuation\">)</span>\nCollecting filelock<span class=\"token operator\">&lt;</span><span class=\"token number\">4</span>,<span class=\"token operator\">>=</span><span class=\"token number\">3.2</span>\n  Downloading filelock-3.7.1-py3-none-any.whl <span class=\"token punctuation\">(</span><span class=\"token number\">10</span> kB<span class=\"token punctuation\">)</span>\nInstalling collected packages: distlib, six, platformdirs, filelock, virtualenv\nSuccessfully installed distlib-0.3.4 filelock-3.7.1 platformdirs-2.5.2 six-1.16.0 virtualenv-20.15.1\nWARNING: You are using pip version <span class=\"token number\">22.0</span>.4<span class=\"token punctuation\">;</span> however, version <span class=\"token number\">22.1</span>.2 is available.\nYou should consider upgrading via the <span class=\"token string\">'/Library/Frameworks/Python.framework/Versions/3.10/bin/python3.10 -m pip install --upgrade pip'</span> command.</code></pre></div>\n<p>그리고 나서 <code class=\"language-text\">virtualenv</code> 명령어로 가상환경을 생성해주었더니 문제 없이 생성되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  shrinkers git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ virtualenv venv         \ncreated virtual environment CPython3.10.4.final.0-64 <span class=\"token keyword\">in</span> 1874ms\n  creator CPython3Posix<span class=\"token punctuation\">(</span>dest<span class=\"token operator\">=</span>/Users/jinipark/shrinkers/shrinkers/venv, <span class=\"token assign-left variable\">clear</span><span class=\"token operator\">=</span>False, <span class=\"token assign-left variable\">no_vcs_ignore</span><span class=\"token operator\">=</span>False, <span class=\"token assign-left variable\">global</span><span class=\"token operator\">=</span>False<span class=\"token punctuation\">)</span>\n  seeder FromAppData<span class=\"token punctuation\">(</span>download<span class=\"token operator\">=</span>False, <span class=\"token assign-left variable\">pip</span><span class=\"token operator\">=</span>bundle, <span class=\"token assign-left variable\">setuptools</span><span class=\"token operator\">=</span>bundle, <span class=\"token assign-left variable\">wheel</span><span class=\"token operator\">=</span>bundle, <span class=\"token assign-left variable\">via</span><span class=\"token operator\">=</span>copy, <span class=\"token assign-left variable\">app_data_dir</span><span class=\"token operator\">=</span>/Users/jinipark/Library/Application Support/virtualenv<span class=\"token punctuation\">)</span>\n    added seed packages: <span class=\"token assign-left variable\">pip</span><span class=\"token operator\">==</span><span class=\"token number\">22.1</span>.2, <span class=\"token assign-left variable\">setuptools</span><span class=\"token operator\">==</span><span class=\"token number\">62.6</span>.0, <span class=\"token assign-left variable\">wheel</span><span class=\"token operator\">==</span><span class=\"token number\">0.37</span>.1\n  activators BashActivator,CShellActivator,FishActivator,NushellActivator,PowerShellActivator,PythonActivator\n➜  shrinkers git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗</code></pre></div>","frontmatter":{"date":"July 05, 2022","title":"Python zsh: command not found: pip / zsh: command not found: virtualenv 에러 해결","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220705-python-pip-virtualenv/"}},"prev":{"id":"b8dc8809-1b89-5160-b3a8-239a6349d024","html":"<h1 id=\"1-데이터베이스-인덱스database-index란\" style=\"position:relative;\"><a href=\"#1-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4database-index%EB%9E%80\" aria-label=\"1 데이터베이스 인덱스database index란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 데이터베이스 인덱스(Database Index)란?</h1>\n<ul>\n<li>데이터베이스 테이블에 대한 검색 성능의 속도를 높여주는 자료구조</li>\n<li>책에 있는 목차와 같은 개념으로, 인덱스에서 내가 원하는 데이터를 먼저 찾고 저장되어있는 물리적 주소로 찾아가게 된다.</li>\n</ul>\n<br/>\n<h2 id=\"인덱스를-사용하는-이유\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"인덱스를 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👍 인덱스를 사용하는 이유</h2>\n<ul>\n<li>\n<p><strong>조건검색 Where 절의 효율성 향상</strong></p>\n<ul>\n<li>테이블 레코드는 순서 없이 저장되어 Where 절의 조건에 맞는 데이터를 찾을 때 처음부터 끝까지 다 읽게 된다(<strong>Full Table Scan</strong>)</li>\n<li>인덱스 테이블은 데이터가 정렬되어 저장되어있어 Where 조건에 맞는 데이터를 빠르게 찾을 수 있다.</li>\n</ul>\n</li>\n<li>\n<p><strong>정렬 Order by 절의 효율성 향상</strong></p>\n<ul>\n<li>Order by는 부하가 많이 걸리는 작업(1차적으로 메모리에서 정렬 발생 &#x26; 메모리보다 작업이 큰 경우 디스크 I/O발생)</li>\n<li>인덱스를 사용하면 이미 정렬이 되어있어 Order by에 의한 sort과정을 피할 수 있다.</li>\n</ul>\n</li>\n<li>\n<p><strong>Min / Max의 효율적 처리</strong></p>\n<ul>\n<li>레코드의 시작값 &#x26; 끝 값 한 건만 가져오면 되기 때문에 Full table scan을 하지 않고 min/max값을 찾을 수 있다.</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"인덱스index의-단점\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4index%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"인덱스index의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>👎 인덱스(Index)의 단점</h2>\n<p>인덱스가 정렬된 상태를 계속 유지시켜야 하기 때문에 레코드 내 데이터 값이 바뀌면</p>\n<ul>\n<li>Index 테이블 값을 다시 정렬해야한다.</li>\n<li>Index 테이블, 원본 테이블 두 군데에 수정 작업이 필요하다.</li>\n</ul>\n<p>또한, 인덱스는 테이블의 전체 데이터 중 10~15% 데이터를 처리하는 경우에만 효율적이고 그 이상일 경우에는 사용하지 않는 것을 추천.</p>\n<p>인덱스를 관리하기 위해 데이터베이스의 추가 저장공간(약 10%)이 필요하다.</p>\n<h2 id=\"인덱스index를-사용하면-좋은-경우\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EB%8D%B1%EC%8A%A4index%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%80-%EA%B2%BD%EC%9A%B0\" aria-label=\"인덱스index를 사용하면 좋은 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>✨ 인덱스(Index)를 사용하면 좋은 경우</h2>\n<ul>\n<li>규모가 작지 않은 테이블</li>\n<li>INSERT, UPDATE, DELETE가 자주 발생하지 않는 컬럼</li>\n<li>JOIN, WHERE 또는 ORDER BY에 자주 사용되는 컬럼</li>\n<li>데이터 중복도가 낮은 컬럼</li>\n<li>기타</li>\n</ul>\n<h1 id=\"2-데이터베이스-인덱스-자료구조\" style=\"position:relative;\"><a href=\"#2-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%9D%B8%EB%8D%B1%EC%8A%A4-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"2 데이터베이스 인덱스 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 데이터베이스 인덱스 자료구조</h1>\n<p>인덱스를 구현하기 위해 다양한 자료구조를 사용할 수 있지만, 가장 대표적 예인 해시테이블과 B+Tree에 대해 알아보도록 하자.</p>\n<h2 id=\"해시-테이블hash-table\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EC%8B%9C-%ED%85%8C%EC%9D%B4%EB%B8%94hash-table\" aria-label=\"해시 테이블hash table permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[해시 테이블(Hash Table)]</h2>\n<ul>\n<li>\n<p>Key-Value 형태로 데이터를 저장하는 자료구조로 <strong>빠른 데이터 검색이 필요</strong>할 때 유용하다.</p>\n</li>\n<li>\n<p>Key값을 이용해 고유한 Index를 생성하여 해당 Index에 저장된 값을 꺼내오는 구조이다.</p>\n</li>\n<li>\n<p>DB인덱스에서 해시테이블이 사용되는 경우는 제한적이다 → 해시가 등호 연산에만 특화되어있기 때문이다(<strong>부등호 연산을 자주 사용하는 DB 검색에는 해시테이블이 적합하지 않다</strong>)</p>\n</li>\n</ul>\n<h2 id=\"btree\" style=\"position:relative;\"><a href=\"#btree\" aria-label=\"btree permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[B+Tree]</h2>\n<ul>\n<li>자식 노드가 2개 이상인 B-Tree를 개선시킨 자료구조로, 모든 노드에 데이터(Value)를 저장했던 B Tree와 다른 특성을 가진다.\n<ul>\n<li>리프 노드(데이터 노드)만 인덱스와 함께 데이터(Value)를 가지고 있고, 나머지 노드(Index 노드)는 데이터를 위한 인덱스(key)만을 갖는다.</li>\n<li>리프 노드들은 Linked List로 연결되어있다.</li>\n<li>데이터 노드 크기는 인덱스 노드의 크기와 같지 않아도 된다.</li>\n</ul>\n</li>\n<li>인덱스 컬럼에서는 부등호를 이용한 순차 검색 연산이 자주 발생할 수 있어 B Tree의 리프 노드들을 Linked List로 연결해 <strong>순차 검색을 용이하게 하는 등 B Tree를 인덱스에 맞게 최적화</strong>하였다.</li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"July 08, 2022","title":"데이터베이스(Database) 인덱스(Index) 자료구조","categories":"CS","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220708-cs-database-index/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220706-cs-das-nas-san/","nextSlug":"/220705-python-pip-virtualenv/","prevSlug":"/220708-cs-database-index/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}