{"componentChunkName":"component---src-templates-blog-template-js","path":"/220519-kubernetes-cka-mock-exam-3-09/","result":{"data":{"cur":{"id":"de2e0bde-cf76-5ce6-b35a-5eff66c9fe28","html":"<h1 id=\"1-모의고사-39---디플로이먼트deployment-트러블슈팅\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-39---%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85\" aria-label=\"1 모의고사 39   디플로이먼트deployment 트러블슈팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.9 - 디플로이먼트(Deployment) 트러블슈팅</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>We have created a new deployment called <code class=\"language-text\">nginx-deploy</code>. scale the deployment to 3 replicas. Has the replica’s increased? Troubleshoot the issue and fix it.</p>\n<ul>\n<li>deployment has 3 replicas</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-디플로이먼트deployment-트러블슈팅\" style=\"position:relative;\"><a href=\"#2-%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85\" aria-label=\"2 디플로이먼트deployment 트러블슈팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 디플로이먼트(Deployment) 트러블슈팅</h3>\n<ul>\n<li>명령형 커맨드로 디플로이먼트를 3으로 증가시킨다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  kubectl scale --replicas<span class=\"token operator\">=</span><span class=\"token number\">3</span> deployment/nginx-deploy\ndeployment.apps/nginx-deploy scaled</code></pre></div>\n<br/>\n<ul>\n<li>nginx-deploy의 상세정보를 살펴본다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k describe deployments<span class=\"token punctuation\">.</span>apps nginx<span class=\"token operator\">-</span>deploy \n<span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>                   nginx<span class=\"token operator\">-</span>deploy\n<span class=\"token literal-property property\">Namespace</span><span class=\"token operator\">:</span>              <span class=\"token keyword\">default</span>\n<span class=\"token literal-property property\">CreationTimestamp</span><span class=\"token operator\">:</span>      Wed<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span><span class=\"token operator\">:</span><span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">36</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n<span class=\"token literal-property property\">Labels</span><span class=\"token operator\">:</span>                 app<span class=\"token operator\">=</span>nginx<span class=\"token operator\">-</span>deploy\n<span class=\"token literal-property property\">Annotations</span><span class=\"token operator\">:</span>            deployment<span class=\"token punctuation\">.</span>kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>revision<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n<span class=\"token literal-property property\">Selector</span><span class=\"token operator\">:</span>               app<span class=\"token operator\">=</span>nginx<span class=\"token operator\">-</span>deploy\n<span class=\"token literal-property property\">Replicas</span><span class=\"token operator\">:</span>               <span class=\"token number\">3</span> desired <span class=\"token operator\">|</span> <span class=\"token number\">1</span> updated <span class=\"token operator\">|</span> <span class=\"token number\">1</span> total <span class=\"token operator\">|</span> <span class=\"token number\">1</span> available <span class=\"token operator\">|</span> <span class=\"token number\">0</span> unavailable\n<span class=\"token literal-property property\">StrategyType</span><span class=\"token operator\">:</span>           RollingUpdate\n<span class=\"token literal-property property\">MinReadySeconds</span><span class=\"token operator\">:</span>        <span class=\"token number\">0</span>\n<span class=\"token literal-property property\">RollingUpdateStrategy</span><span class=\"token operator\">:</span>  <span class=\"token number\">25</span><span class=\"token operator\">%</span> max unavailable<span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token operator\">%</span> max surge\nPod Template<span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">Labels</span><span class=\"token operator\">:</span>  app<span class=\"token operator\">=</span>nginx<span class=\"token operator\">-</span>deploy\n  <span class=\"token literal-property property\">Containers</span><span class=\"token operator\">:</span>\n   <span class=\"token literal-property property\">nginx</span><span class=\"token operator\">:</span>\n    <span class=\"token literal-property property\">Image</span><span class=\"token operator\">:</span>        nginx\n    <span class=\"token literal-property property\">Port</span><span class=\"token operator\">:</span>         <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Host Port:    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Environment:  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Mounts:       </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  Volumes:        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    NewReplicaSetAvailable\nOldReplicaSets:  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nNewReplicaSet:   nginx-deploy-65db889b76 (1/1 replicas created)\nEvents:\n  Type    Reason             Age    From                   Message\n  ----    ------             ----   ----                   -------\n  Normal  ScalingReplicaSet  5m34s  deployment-controller  Scaled up replica set nginx-deploy-65db889b76 to 1</span></code></pre></div>\n<ul>\n<li>특별한 에러 메시지는 보이지 않는다.</li>\n</ul>\n<br/>\n<ul>\n<li>kube-system 네임스페이스의 kube-controller-manager가 제대로 동작하지 않는다(<code class=\"language-text\">STATUS=ErrImagePull</code>).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -n kube-system \nNAME                                   READY   STATUS         RESTARTS   AGE\ncoredns-74ff55c5b-g8tqw                <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\ncoredns-74ff55c5b-t5d97                <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\nkube-contro1ler-manager-controlplane   <span class=\"token number\">0</span>/1     ErrImagePull   <span class=\"token number\">0</span>          34s\nkube-proxy-j7hk8                       <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\nkube-proxy-k4vpm                       <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          42m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running        <span class=\"token number\">0</span>          43m\nweave-net-mz8wq                        <span class=\"token number\">2</span>/2     Running        <span class=\"token number\">0</span>          42m\nweave-net-p4pb9                        <span class=\"token number\">2</span>/2     Running        <span class=\"token number\">1</span>          43m</code></pre></div>\n<br/>\n<ul>\n<li>kube-controller-manager 파드의 상세 설정을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod -n kube-system kube-contro1ler-manager-controlplane\nName:                 kube-contro1ler-manager-controlplane\nNamespace:            kube-system\nPriority:             <span class=\"token number\">2000001000</span>\nPriority Class Name:  system-node-critical\nNode:                 controlplane/10.28.158.12\nStart Time:           Thu, <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:45:32 +0000\nLabels:               <span class=\"token assign-left variable\">component</span><span class=\"token operator\">=</span>kube-contro1ler-manager\n                      <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>control-plane\nAnnotations:          kubernetes.io/config.hash: f1785ce0b7f69827b85f828fee6a9cb4\n                      kubernetes.io/config.mirror: f1785ce0b7f69827b85f828fee6a9cb4\n                      kubernetes.io/config.seen: <span class=\"token number\">2022</span>-05-19T12:45:32.958919589Z\n                      kubernetes.io/config.source: <span class=\"token function\">file</span>\nStatus:               Pending\nIP:                   <span class=\"token number\">10.28</span>.158.12\nIPs:\n  IP:           <span class=\"token number\">10.28</span>.158.12\nControlled By:  Node/controlplane\nContainers:\n  kube-contro1ler-manager:\n    Container ID:  \n    Image:         k8s.gcr.io/kube-contro1ler-manager:v1.20.0\n    Image ID:      \n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      kube-contro1ler-manager\n      --allocate-node-cidrs<span class=\"token operator\">=</span>true\n      --authentication-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --authorization-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --bind-address<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1\n      --client-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --cluster-cidr<span class=\"token operator\">=</span><span class=\"token number\">10.244</span>.0.0/16\n      --cluster-name<span class=\"token operator\">=</span>kubernetes\n      --cluster-signing-cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --cluster-signing-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.key\n      --controllers<span class=\"token operator\">=</span>*,bootstrapsigner,tokencleaner\n      --kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --leader-elect<span class=\"token operator\">=</span>true\n      --port<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n      --requestheader-client-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/front-proxy-ca.crt\n      --root-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --service-account-private-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/sa.key\n      --service-cluster-ip-range<span class=\"token operator\">=</span><span class=\"token number\">10.96</span>.0.0/12\n      --use-service-account-credentials<span class=\"token operator\">=</span>true\n    State:          Waiting\n      Reason:       ErrImagePull\n    Ready:          False\n    Restart Count:  <span class=\"token number\">0</span>\n    Requests:\n      cpu:        200m\n    Liveness:     http-get https://127.0.0.1:10257/healthz <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=8</span>\n    Startup:      http-get https://127.0.0.1:10257/healthz <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=24</span>\n    Environment:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /etc/ca-certificates from etc-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/kubernetes/controller-manager.conf from kubeconfig <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/kubernetes/pki from k8s-certs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/ssl/certs from ca-certs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /usr/libexec/kubernetes/kubelet-plugins/volume/exec from flexvolume-dir <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n      /usr/local/share/ca-certificates from usr-local-share-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /usr/share/ca-certificates from usr-share-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             False \n  ContainersReady   False \n  PodScheduled      True \nVolumes:\n  ca-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/ssl/certs\n    HostPathType:  DirectoryOrCreate\n  etc-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/ca-certificates\n    HostPathType:  DirectoryOrCreate\n  flexvolume-dir:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/libexec/kubernetes/kubelet-plugins/volume/exec\n    HostPathType:  DirectoryOrCreate\n  k8s-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/pki\n    HostPathType:  DirectoryOrCreate\n  kubeconfig:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/controller-manager.conf\n    HostPathType:  FileOrCreate\n  usr-local-share-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/local/share/ca-certificates\n    HostPathType:  DirectoryOrCreate\n  usr-share-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/share/ca-certificates\n    HostPathType:  DirectoryOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:       :NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists\nEvents:\n  Type     Reason   Age                From     Message\n  ----     ------   ----               ----     -------\n  Normal   Pulling  21s <span class=\"token punctuation\">(</span>x3 over 59s<span class=\"token punctuation\">)</span>  kubelet  Pulling image <span class=\"token string\">\"k8s.gcr.io/kube-contro1ler-manager:v1.20.0\"</span>\n  Warning  Failed   21s <span class=\"token punctuation\">(</span>x3 over 59s<span class=\"token punctuation\">)</span>  kubelet  Failed to pull image <span class=\"token string\">\"k8s.gcr.io/kube-contro1ler-manager:v1.20.0\"</span><span class=\"token builtin class-name\">:</span> rpc error: code <span class=\"token operator\">=</span> Unknown desc <span class=\"token operator\">=</span> Error response from daemon: manifest <span class=\"token keyword\">for</span> k8s.gcr.io/kube-contro1ler-manager:v1.20.0 not found: manifest unknown: Failed to fetch <span class=\"token string\">\"v1.20.0\"</span> from request <span class=\"token string\">\"/v2/kube-contro1ler-manager/manifests/v1.20.0\"</span><span class=\"token builtin class-name\">.</span>\n  Warning  Failed   21s <span class=\"token punctuation\">(</span>x3 over 59s<span class=\"token punctuation\">)</span>  kubelet  Error: ErrImagePull\n  Normal   BackOff  6s <span class=\"token punctuation\">(</span>x4 over 59s<span class=\"token punctuation\">)</span>   kubelet  Back-off pulling image <span class=\"token string\">\"k8s.gcr.io/kube-contro1ler-manager:v1.20.0\"</span>\n  Warning  Failed   6s <span class=\"token punctuation\">(</span>x4 over 59s<span class=\"token punctuation\">)</span>   kubelet  Error: ImagePullBackOff</code></pre></div>\n<ul>\n<li>Image:         k8s.gcr.io/kube-contro1ler-manager:v1.20.0\n<ul>\n<li>controller 가 아니라 contro”1”ler로 되어있다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>kube-controller-manager는 스태틱 파드이므로 vi 명령어로 매니페스트 파일에 접속해 직접 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">vi</span> /etc/kubernetes/manifests/kube-controller-manager.yaml\n\n---\n<span class=\"token punctuation\">(</span>생략<span class=\"token punctuation\">)</span>\n    Image:         k8s.gcr.io/kube-controller-manager:v1.20.0\n<span class=\"token punctuation\">(</span>생략<span class=\"token punctuation\">)</span>\n</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 파드가 잘 동작하는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get -n kube-system pods\nNAME                                   READY   STATUS              RESTARTS   AGE\ncoredns-74ff55c5b-g8tqw                <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          49m\ncoredns-74ff55c5b-t5d97                <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          49m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          50m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          50m\nkube-contro1ler-manager-controlplane   <span class=\"token number\">0</span>/1     RunContainerError   <span class=\"token number\">3</span>          85s\nkube-proxy-j7hk8                       <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          49m\nkube-proxy-k4vpm                       <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          49m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          50m\nweave-net-mz8wq                        <span class=\"token number\">2</span>/2     Running             <span class=\"token number\">0</span>          49m\nweave-net-p4pb9                        <span class=\"token number\">2</span>/2     Running             <span class=\"token number\">1</span>          49m</code></pre></div>\n<ul>\n<li>RunContainerError가 발생했음을 알 수 있다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 다시 내용을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe -n kube-system pod kube-contro1ler-manager-controlplane \nName:                 kube-contro1ler-manager-controlplane\nNamespace:            kube-system\nPriority:             <span class=\"token number\">2000001000</span>\nPriority Class Name:  system-node-critical\nNode:                 controlplane/10.28.158.12\nStart Time:           Thu, <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:51:54 +0000\nLabels:               <span class=\"token assign-left variable\">component</span><span class=\"token operator\">=</span>kube-contro1ler-manager\n                      <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>control-plane\nAnnotations:          kubernetes.io/config.hash: d1b03e68f1957bd0567379ca57c2517a\n                      kubernetes.io/config.mirror: d1b03e68f1957bd0567379ca57c2517a\n                      kubernetes.io/config.seen: <span class=\"token number\">2022</span>-05-19T12:51:36.844508338Z\n                      kubernetes.io/config.source: <span class=\"token function\">file</span>\nStatus:               Running\nIP:                   <span class=\"token number\">10.28</span>.158.12\nIPs:\n  IP:           <span class=\"token number\">10.28</span>.158.12\nControlled By:  Node/controlplane\nContainers:\n  kube-contro1ler-manager:\n    Container ID:  docker://844721f13d9bb78e13f2e2b598d085d5b2a3c51b5a872ee63c13f47467a6842d\n    Image:         k8s.gcr.io/kube-controller-manager:v1.20.0\n    Image ID:      docker-pullable://k8s.gcr.io/kube-controller-manager@sha256:00ccc3a5735e82d53bc26054d594a942fae64620a6f84018c057a519ba7ed1dc\n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      kube-contro1ler-manager\n      --allocate-node-cidrs<span class=\"token operator\">=</span>true\n      --authentication-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --authorization-kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --bind-address<span class=\"token operator\">=</span><span class=\"token number\">127.0</span>.0.1\n      --client-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --cluster-cidr<span class=\"token operator\">=</span><span class=\"token number\">10.244</span>.0.0/16\n      --cluster-name<span class=\"token operator\">=</span>kubernetes\n      --cluster-signing-cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --cluster-signing-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.key\n      --controllers<span class=\"token operator\">=</span>*,bootstrapsigner,tokencleaner\n      --kubeconfig<span class=\"token operator\">=</span>/etc/kubernetes/controller-manager.conf\n      --leader-elect<span class=\"token operator\">=</span>true\n      --port<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n      --requestheader-client-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/front-proxy-ca.crt\n      --root-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/ca.crt\n      --service-account-private-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/sa.key\n      --service-cluster-ip-range<span class=\"token operator\">=</span><span class=\"token number\">10.96</span>.0.0/12\n      --use-service-account-credentials<span class=\"token operator\">=</span>true\n    State:          Waiting\n      Reason:       CrashLoopBackOff\n    Last State:     Terminated\n      Reason:       ContainerCannotRun\n      Message:      OCI runtime create failed: container_linux.go:367: starting container process caused: exec: <span class=\"token string\">\"kube-contro1ler-manager\"</span><span class=\"token builtin class-name\">:</span> executable <span class=\"token function\">file</span> not found <span class=\"token keyword\">in</span> <span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span> unknown\n      Exit Code:    <span class=\"token number\">127</span>\n      Started:      Thu, <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:53:47 +0000\n      Finished:     Thu, <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:53:47 +0000\n    Ready:          False\n    Restart Count:  <span class=\"token number\">4</span>\n    Requests:\n      cpu:        200m\n    Liveness:     http-get https://127.0.0.1:10257/healthz <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=8</span>\n    Startup:      http-get https://127.0.0.1:10257/healthz <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=24</span>\n    Environment:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /etc/ca-certificates from etc-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/kubernetes/controller-manager.conf from kubeconfig <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/kubernetes/pki from k8s-certs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /etc/ssl/certs from ca-certs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /usr/libexec/kubernetes/kubelet-plugins/volume/exec from flexvolume-dir <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n      /usr/local/share/ca-certificates from usr-local-share-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n      /usr/share/ca-certificates from usr-share-ca-certificates <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             False \n  ContainersReady   False \n  PodScheduled      True \nVolumes:\n  ca-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/ssl/certs\n    HostPathType:  DirectoryOrCreate\n  etc-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/ca-certificates\n    HostPathType:  DirectoryOrCreate\n  flexvolume-dir:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/libexec/kubernetes/kubelet-plugins/volume/exec\n    HostPathType:  DirectoryOrCreate\n  k8s-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/pki\n    HostPathType:  DirectoryOrCreate\n  kubeconfig:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/controller-manager.conf\n    HostPathType:  FileOrCreate\n  usr-local-share-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/local/share/ca-certificates\n    HostPathType:  DirectoryOrCreate\n  usr-share-ca-certificates:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /usr/share/ca-certificates\n    HostPathType:  DirectoryOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:       :NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists\nEvents:\n  Type     Reason                  Age                  From     Message\n  ----     ------                  ----                 ----     -------\n  Warning  Failed                  2m32s                kubelet  Error: <span class=\"token function\">open</span> /var/lib/kubelet/pods/d1b03e68f1957bd0567379ca57c2517a/etc-hosts: no such <span class=\"token function\">file</span> or directory\n  Warning  FailedCreatePodSandBox  2m32s                kubelet  Failed to create pod sandbox: rpc error: code <span class=\"token operator\">=</span> Unknown desc <span class=\"token operator\">=</span> failed to create a sandbox <span class=\"token keyword\">for</span> pod <span class=\"token string\">\"kube-contro1ler-manager-controlplane\"</span><span class=\"token builtin class-name\">:</span> Error response from daemon: Conflict. The container name <span class=\"token string\">\"/k8s_POD_kube-contro1ler-manager-controlplane_kube-system_d1b03e68f1957bd0567379ca57c2517a_0\"</span> is already <span class=\"token keyword\">in</span> use by container <span class=\"token string\">\"775fa97beafb1dbf81920ae34fa8655cff1002ad4105a5a5a00ab666b3c37a4f\"</span><span class=\"token builtin class-name\">.</span> You have to remove <span class=\"token punctuation\">(</span>or <span class=\"token function\">rename</span><span class=\"token punctuation\">)</span> that container to be able to reuse that name.\n  Warning  BackOff                 53s <span class=\"token punctuation\">(</span>x7 over 2m12s<span class=\"token punctuation\">)</span>  kubelet  Back-off restarting failed container\n  Normal   Pulled                  39s <span class=\"token punctuation\">(</span>x6 over 2m32s<span class=\"token punctuation\">)</span>  kubelet  Container image <span class=\"token string\">\"k8s.gcr.io/kube-controller-manager:v1.20.0\"</span> already present on machine\n  Normal   Created                 39s <span class=\"token punctuation\">(</span>x5 over 2m32s<span class=\"token punctuation\">)</span>  kubelet  Created container kube-contro1ler-manager\n  Warning  Failed                  38s <span class=\"token punctuation\">(</span>x5 over 2m30s<span class=\"token punctuation\">)</span>  kubelet  Error: failed to start container <span class=\"token string\">\"kube-contro1ler-manager\"</span><span class=\"token builtin class-name\">:</span> Error response from daemon: OCI runtime create failed: container_linux.go:367: starting container process caused: exec: <span class=\"token string\">\"kube-contro1ler-manager\"</span><span class=\"token builtin class-name\">:</span> executable <span class=\"token function\">file</span> not found <span class=\"token keyword\">in</span> <span class=\"token environment constant\">$PATH</span><span class=\"token builtin class-name\">:</span> unknown</code></pre></div>\n<ul>\n<li>kube-contro’1’ler-manager로 되어있는 부분을 모두 수정한다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 파드가 정상동작하는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get -n kube-system podsNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-74ff55c5b-g8tqw                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\ncoredns-74ff55c5b-t5d97                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\nkube-controller-manager-controlplane   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          76s\nkube-proxy-j7hk8                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\nkube-proxy-k4vpm                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          55m\nweave-net-mz8wq                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          55m\nweave-net-p4pb9                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">1</span>          55m</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 nginx-deploy의 파드가 3개로 스케일링 되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get deployments.apps \nNAME           READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deploy   <span class=\"token number\">3</span>/3     <span class=\"token number\">3</span>            <span class=\"token number\">3</span>           19m</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl 치트 시트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","excerpt":"1. 모의고사 3.9 - 디플로이먼트(Deployment) 트러블슈팅 1. 문제 요건 We have created a new deployment called . scale the deployment to 3 replicas. Has the replica’s increased? Troubleshoot the issue and fix it. deployment has 3 replicas  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).  2. 디플로이먼트(Deployment) 트러블슈팅 명령형 커맨드로 디플로이먼트를 3으로 증가시킨다 nginx-deploy의 상세정보를 살펴본다. 특별한 에러 메시지는 보이지 않는다. kube-system 네임스페이스의 kube-controller-manager가 제대로 동작하지 않는다(). kube-controller-manager 파드의 상세 설정을 확인한다. Image:         k8s.…","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.9 - 디플로이먼트(Deployment) 트러블슈팅","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-09/"}},"next":{"id":"df3a445a-9654-51d9-98d0-4e48e96b5415","html":"<h1 id=\"1-모의고사-35---네트워크-폴리시network-policy-적용하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-35---%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8F%B4%EB%A6%AC%EC%8B%9Cnetwork-policy-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 35   네트워크 폴리시network policy 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.5 - 네트워크 폴리시(Network Policy) 적용하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>We have deployed a new pod called <code class=\"language-text\">np-test-1</code> and a service called <code class=\"language-text\">np-test-service</code>. Incoming connections to this service are not working. Troubleshoot and fix it.Create NetworkPolicy, by the name <code class=\"language-text\">ingress-to-nptest</code> that allows incoming connections to the service over port <code class=\"language-text\">80</code>.</p>\n<p>Important: Don’t delete any current objects deployed.</p>\n<ul>\n<li>Important: Don’t Alter Existing Objects!</li>\n<li>NetworkPolicy: Applied to All sources (Incoming traffic from all pods)?</li>\n<li>NetWorkPolicy: Correct Port?</li>\n<li>NetWorkPolicy: Applied to correct Pod?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-네트워크-폴리시network-policy-적용\" style=\"position:relative;\"><a href=\"#2-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8F%B4%EB%A6%AC%EC%8B%9Cnetwork-policy-%EC%A0%81%EC%9A%A9\" aria-label=\"2 네트워크 폴리시network policy 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 네트워크 폴리시(Network Policy) 적용</h3>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 문제에서 제시한 파드와 서비스가 제대로 생성되어 실행되고 있는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pod,service\nNAME            READY   STATUS    RESTARTS   AGE\npod/np-test-1   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          36s\npod/pvviwer     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6m16s\n\nNAME                      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nservice/kubernetes        ClusterIP   <span class=\"token number\">10.96</span>.0.1       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span>/TCP   17m\nservice/np-test-service   ClusterIP   <span class=\"token number\">10.110</span>.84.136   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>/TCP    37s</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">run</code> 명령어로 테스트용 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k run curl <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>alpine<span class=\"token operator\">/</span>curl <span class=\"token operator\">--</span>rm <span class=\"token operator\">-</span>it <span class=\"token operator\">--</span> sh\nIf you don't see a command prompt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">try</span> pressing enter<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">/</span> # curl np<span class=\"token operator\">-</span>test<span class=\"token operator\">-</span>service</code></pre></div>\n<ul>\n<li><code class=\"language-text\">curl</code> 명령어에 반응이 없는 상태.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">vi</code> 명령어로 네트워크 폴리시 매니페스트 파일을 생성해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> np.yaml\n\n---\n\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ingress-to-nptest\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      run: np-test-1\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - ipBlock:\n        cidr: <span class=\"token number\">0.0</span>.0.0/0\n    ports:\n    - protocol: TCP\n      port: <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 네트워크 폴리시를 생성해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f np.yaml \nnetworkpolicy.networking.k8s.io/ingress-to-nptest created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 네트워크 폴리시가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe networkpolicies.networking.k8s.io ingress-to-nptest \nName:         ingress-to-nptest\nNamespace:    default\nCreated on:   <span class=\"token number\">2022</span>-05-19 <span class=\"token number\">12</span>:30:41 +0000 UTC\nLabels:       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nSpec:\n  PodSelector:     <span class=\"token assign-left variable\">run</span><span class=\"token operator\">=</span>np-test-1\n  Allowing ingress traffic:\n    To Port: <span class=\"token number\">80</span>/TCP\n    From:\n      IPBlock:\n        CIDR: <span class=\"token number\">0.0</span>.0.0/0\n        Except: \n  Not affecting egress traffic\n  Policy Types: Ingress</code></pre></div>\n<br/>\n<ul>\n<li>생성해두었던 테스트용 파드의 쉘을 실행해 <code class=\"language-text\">curl</code> 명령어로 파드에 트래픽을 전송할 수 있는지 확인한다.\n<ul>\n<li>확인이 완료된 후, <code class=\"language-text\">exit</code> 명령어로 컨테이너 내의 쉘에서 빠져나올 수 있다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ✖ k <span class=\"token builtin class-name\">exec</span> <span class=\"token function\">curl</span> -it -- <span class=\"token function\">sh</span>\n/ <span class=\"token comment\"># curl np-test-service</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    body <span class=\"token punctuation\">{</span>\n        width: 35em<span class=\"token punctuation\">;</span>\n        margin: <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n        font-family: Tahoma, Verdana, Arial, sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>For online documentation and support please refer to\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.org/\"</span><span class=\"token operator\">></span>nginx.org<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>br/<span class=\"token operator\">></span>\nCommercial support is available at\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.com/\"</span><span class=\"token operator\">></span>nginx.com<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Thank you <span class=\"token keyword\">for</span> using nginx.<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>네트워크 정책(Network Policy): <a href=\"https://kubernetes.io/ko/docs/concepts/services-networking/network-policies/\">https://kubernetes.io/ko/docs/concepts/services-networking/network-policies/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.5 - 네트워크 폴리시(Security Policy) 적용하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-05/"}},"prev":{"id":"2e9d513b-821e-5eb8-a38e-0b0ad17ad7fd","html":"<h1 id=\"1-모의고사-36---테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-36---%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 36   테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.6 - 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Taint the worker node <code class=\"language-text\">node01</code> to be Unschedulable. Once done, create a pod called <code class=\"language-text\">dev-redis</code>, image <code class=\"language-text\">redis:alpine</code>, to ensure workloads are not scheduled to this worker node. Finally, create a new pod called <code class=\"language-text\">prod-redis</code> and image: <code class=\"language-text\">redis:alpine</code> with toleration to be scheduled on <code class=\"language-text\">node01</code>.</p>\n<p>key: <code class=\"language-text\">env_type</code>, value: <code class=\"language-text\">production</code>, operator: <code class=\"language-text\">Equal</code> and effect: <code class=\"language-text\">NoSchedule</code></p>\n<ul>\n<li>Key = env_type</li>\n<li>Value = production</li>\n<li>Effect = NoSchedule</li>\n<li>pod ‘dev-redis’ (no tolerations) is not scheduled on node01?</li>\n<li>Create a pod ‘prod-redis’ to run on node01</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#2-%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h3>\n<ul>\n<li>명령형 커맨드로 node01에 테인트를 설정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl taint nodes node01 <span class=\"token assign-left variable\">env_type</span><span class=\"token operator\">=</span>production:NoSchedule</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k run dev<span class=\"token operator\">-</span>redis <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>redis<span class=\"token operator\">:</span>alpine\npod<span class=\"token operator\">/</span>dev<span class=\"token operator\">-</span>redis created</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드가 control plane 노드에 스케줄링 된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10s     <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          18m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          9m14s   <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드의 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run prod-redis --image<span class=\"token operator\">=</span>redis:alpine --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> prod-redis.yaml</code></pre></div>\n<br/>\n<ul>\n<li>문제 요건에 맞게 편집한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> prod-redis.yaml\n\n---\n\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: prod-redis\n  name: prod-redis\nspec:\n  containers:\n  - image: redis:alpine\n    name: prod-redis\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  tolerations:\n  - key: <span class=\"token string\">\"env_type\"</span>\n    operator: <span class=\"token string\">\"Equal\"</span>\n    value: <span class=\"token string\">\"production\"</span>\n    effect: <span class=\"token string\">\"NoSchedule\"</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f prod-redis.yaml \npod/prod-redis created</code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드가 node01에 스케줄링된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6m41s   <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          24m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          15m     <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nprod-redis     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          58s     <span class=\"token number\">10.50</span>.192.5   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          36m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl 치트 시트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>테인트와 톨러레이션: <a href=\"https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/\">https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.6 - 테인트(Taint) & 톨러레이션(Toleration) 적용하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220519-kubernetes-cka-mock-exam-3-09/","nextSlug":"/220519-kubernetes-cka-mock-exam-3-05/","prevSlug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}