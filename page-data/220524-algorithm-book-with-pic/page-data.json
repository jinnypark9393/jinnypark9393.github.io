{"componentChunkName":"component---src-templates-blog-template-js","path":"/220524-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"fc33f28a-79c2-5df8-9f7b-fbf5040dae6c","html":"<h1 id=\"제-2장-변수와-배열\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-2%EC%9E%A5-%EB%B3%80%EC%88%98%EC%99%80-%EB%B0%B0%EC%97%B4\" aria-label=\"제 2장 변수와 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 2장 변수와 배열</h1>\n<h2 id=\"21-문자열의-길이는-문자길이-변수-또는-보초-값이-관리한다\" style=\"position:relative;\"><a href=\"#21-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EA%B8%B8%EC%9D%B4%EB%8A%94-%EB%AC%B8%EC%9E%90%EA%B8%B8%EC%9D%B4-%EB%B3%80%EC%88%98-%EB%98%90%EB%8A%94-%EB%B3%B4%EC%B4%88-%EA%B0%92%EC%9D%B4-%EA%B4%80%EB%A6%AC%ED%95%9C%EB%8B%A4\" aria-label=\"21 문자열의 길이는 문자길이 변수 또는 보초 값이 관리한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>21. 문자열의 길이는 문자길이 변수 또는 ‘보초 값’이 관리한다</h2>\n<ul>\n<li>문자열은 1번째 요소부터 차례로 문자가 저장된 문자 타입의 배열 ⇒ 문자열이 끝날 때 배열이 끝났음을 알려주어야한다.</li>\n<li>문자열이 끝남을 알려주는 방법\n<ul>\n<li>\n<p>문자 열 길이 변수를 준비</p>\n<p>: 배열 속 문자열 길이를 정수 타입 변수에 저장해 참조한다.</p>\n</li>\n<li>\n<p>문자 열 끝에 <strong>보초 값</strong>을 저장</p>\n<ul>\n<li>문자열의 구성 문자로 절대로 표시되지 않는 문자 코드(<strong>보초 값</strong>)를 배열 끝 부분에 저장</li>\n<li>일반적으로 숫자 0(문자 ‘0’ 아님)을 사용</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"column-관용적으로-사용되는-변수명\" style=\"position:relative;\"><a href=\"#column-%EA%B4%80%EC%9A%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EB%B3%80%EC%88%98%EB%AA%85\" aria-label=\"column 관용적으로 사용되는 변수명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Column: 관용적으로 사용되는 변수명</h2>\n<ol>\n<li>\n<p>반복문의 반복 횟수를 저장하는 변수</p>\n<p>: 반복 처리 알고리즘에서 반복 횟수를 유지하는 정수 타입 변수명은 <strong>i, j, k</strong>를 자주 사용</p>\n</li>\n<li>\n<p>배열 첨자로 사용되는 변수</p>\n<p>: <strong>index, idx</strong></p>\n</li>\n<li>\n<p>수를 세는 데 사용되는 변수</p>\n<p>: <strong>count, counter, cnt</strong></p>\n</li>\n<li>\n<p>문자열을 다루는 변수(배열)</p>\n<p>: <strong>str, string</strong></p>\n</li>\n</ol>\n<br/>\n<h1 id=\"제-3장-자료구조\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-3%EC%9E%A5-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"제 3장 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 3장: 자료구조</h1>\n<h2 id=\"22-대량-데이터를-효율적으로-관리하기-위한-메커니즘이-자료구조\" style=\"position:relative;\"><a href=\"#22-%EB%8C%80%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98%EC%9D%B4-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"22 대량 데이터를 효율적으로 관리하기 위한 메커니즘이 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>22. 대량 데이터를 효율적으로 관리하기 위한 메커니즘이 자료구조</h2>\n<ul>\n<li><strong>자료구조</strong>: 대량 데이터를 효율적으로 관리하기 위한 메커니즘</li>\n<li>예시\n<ul>\n<li>우편번호: 앞 3자리로 대략적인 시, 군, 자치구를 파악할 수 있어 배송처의 범위를 빠르게 좁힐 수 있음</li>\n<li>출석번호: 무작위로 나열된 학생 명단에서 특정 학생을 찾는 것은 어렵지만 학년, 반, 출석번호 라는 정보를 부여하면 해당 학생을 효율적으로 찾을 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>","excerpt":"제 2장 변수와 배열 21. 문자열의 길이는 문자길이 변수 또는 ‘보초 값’이 관리한다 문자열은 1번째 요소부터 차례로 문자가 저장된 문자 타입의 배열 ⇒ 문자열이 끝날 때 배열이 끝났음을 알려주어야한다. 문자열이 끝남을 알려주는 방법 문자 열 길이 변수를 준비 : 배열 속 문자열 길이를 정수 타입 변수에 저장해 참조한다. 문자 열 끝에 보초 값을 저장 문자열의 구성 문자로 절대로 표시되지 않는 문자 코드(보초 값)를 배열 끝 부분에 저장 일반적으로 숫자 0(문자 ‘0’ 아님)을 사용 Column: 관용적으로 사용되는 변수명 반복문의 반복 횟수를 저장하는 변수 : 반복 처리 알고리즘에서 반복 횟수를 유지하는 정수 타입 변수명은 i, j, k를 자주 사용 배열 첨자로 사용되는 변수 : index, idx 수를 세는 데 사용되는 변수 : count, counter, cnt 문자열을 다루는 변수(배열) : str, string 제 3장: 자료구조 22. 대량 데이터를 효율적으로 관리하기…","frontmatter":{"date":"May 24, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(8), 제3장 - 자료구조(1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220524-algorithm-book-with-pic/"}},"next":{"id":"f9dd679f-ac3d-5bdb-88ca-fac0004aa523","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 12-3. 블로그 프로젝트 - 게시물 로딩 기능 구현을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo1.JPG\" alt=\"2022-05-23-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo2.JPG\" alt=\"2022-05-23-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"03-블로그-게시글-로딩하기\" style=\"position:relative;\"><a href=\"#03-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EB%A1%9C%EB%94%A9%ED%95%98%EA%B8%B0\" aria-label=\"03 블로그 게시글 로딩하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 블로그 게시글 로딩하기</h1>\n<h2 id=\"1-프로그램-기능-구현하기\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"1 프로그램 기능 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로그램 기능 구현하기</h2>\n<ul>\n<li>\n<p>게시글 로딩하기 기능의 의사 코드(Pseudo Code)를 작성해보자.</p>\n<ul>\n<li>**의사코드(Pseudo Code)**란? 직역하면 가짜(Pseudo) 코드라는 뜻으로, 프로그램 코드를 작성하기위해 프로그램의 진행 과정을 단계별로 기록해 놓은 것.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 게시글 로딩하기</span>\n\ndata.csv 파일이 있으면\n    게시글을 로딩한다.\ndata.csv 파일이 없으면\n    data.csv파일을 만든다.\n\n<span class=\"token comment\"># 게시글 로딩 기능</span>\ndata.csv 파일을 읽는다.\n데이터 한 줄마다\n    Post 인스턴스를 만든다.\n    Post 리스트에 인스턴스를 저장한다.</code></pre></div>\n<ul>\n<li>게시글 로딩 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>, 파이썬 공부 <span class=\"token number\">2</span>일차, 연산 배웠다, <span class=\"token number\">2</span>\n<span class=\"token number\">2</span>, 파이썬 공부 <span class=\"token number\">3</span>일차, 조건문 배웠다, <span class=\"token number\">0</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"2-코드-구현\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 구현</h2>\n<ul>\n<li>위에서 의사코드로 작성한 내용을 실제 코드로 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    pass\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>파일유무를 체크하기 위해 os.path.exists 모듈을 활용한다: os 모듈을 import한 뒤 사용할 수 있음</p>\n</li>\n<li>\n<p>파일 생성 ⇒ open 함수를 이용해 생성. newline은 윈도우 환경일 때 추가할 것.</p>\n</li>\n<li>\n<p>실행결과: data.csv 파일이 Chapter12 폴더 하위에 생성된다.</p>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo3.png\" alt=\"2022-05-23-Python-Photo3.png\"></p>\n<ul>\n<li>file not found 에러가 발생한 경우 경로 설정을 다시 확인해보자.</li>\n</ul>\n</li>\n<li>\n<p>테스트를 위해 data.csv 파일에 데이터를 넣어준다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>,테스트,테스트입니다</code></pre></div>\n<ul>\n<li>게시글 로딩을 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        print<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>위의 코드가 이해가 되지 않는다면 <strong>파일 입출력</strong> 파트의 <strong>csv 입출력 강의</strong>를 복습하고 오자.</p>\n</li>\n<li>\n<p>csv.reader는 순회 가능한 함수 ⇒ for in 문을 사용해 데이터를 한줄씩 리스트 형태로 뽑아와 data객체에 저장할 수 있다.</p>\n</li>\n<li>\n<p>지금까지 만든 부분을 출력해보자.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span>, <span class=\"token string\">'테스트'</span>, <span class=\"token string\">'테스트입니다'</span>, <span class=\"token string\">'0'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'2'</span>, <span class=\"token string\">'테스트2'</span>, <span class=\"token string\">'테스트입니다2'</span>, <span class=\"token string\">'0'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>\n<p>게시글을 리스트 형태로 잘 받아오는 것을 확인할 수 있다. 이제 인덱스를 이용해 각 데이터에 접근할 수 있다.</p>\n</li>\n<li>\n<p>지금까지 구현된 코드를 확인해보자.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 게시글 로딩하기</span>\n\ndata.csv 파일이 있으면 <span class=\"token comment\"># 구현 완료</span>\n    게시글을 로딩한다. <span class=\"token comment\"># 구현중</span>\ndata.csv 파일이 없으면 <span class=\"token comment\"># 구현 완료</span>\n    data.csv파일을 만든다. <span class=\"token comment\"># 구현중</span>\n\n<span class=\"token comment\"># 게시글 로딩 기능</span>\ndata.csv 파일을 읽는다. <span class=\"token comment\"># 구현 완료</span>\n데이터 한 줄마다 <span class=\"token comment\"># 구현 완료(데이터 한 줄씩 리스트 형태로 불러오기)</span>\n    Post 인스턴스를 만든다. <span class=\"token comment\"># 구현해야 함</span>\n    Post 리스트에 인스턴스를 저장한다. <span class=\"token comment\"># 구현해야 함</span></code></pre></div>\n<ul>\n<li>post 객체를 저장할 리스트를 생성하고 post 객체를 불러온다(이해가 되지 않을 경우 <strong>모듈과 패키지</strong> 강의를 복습하자)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        print<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Post 객체를 생성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>print문으로 post_list를 확인하면 2개의 객체가 담겨있는 것을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>post.Post object at 0x104ddea7<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span>, <span class=\"token operator\">&lt;</span>post.Post object at 0x104eece2<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>post_list에 저장된 첫번째 객체에서 get_title 메서드를 호출해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># 호출 부분</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n테스트</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 블로그의 게시물 로딩 기능을 구현해보았다. 다음 포스팅에서는 메뉴 출력하기, 게시글 쓰기 기능을 구현하도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 23, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 36일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220523-python-day36/"}},"prev":{"id":"bcb7c40c-d63d-5972-9dc9-fa7fd0e52be9","html":"<p>2022년 5월 22일에 봤던 <a href=\"https://www.cncf.io/certification/cka/\">Certified Kubernetes Administrator(이하 CKA)</a>자격증 시험 결과가 나와 바로 올리는 따끈따끈한 후기.</p>\n<br/>\n<p>CKA(Certified Kubernetes Administrator)는 작년 10월 말 새로운 회사에서 데브옵스 엔지니어로 근무하기 시작하면서부터 계속 따려고 생각했던 자격증. 사실 다른 자격증 준비과 기타 공부에 밀려 미루고 있다가 회사에서 자격증 챌린지(!)를 한다는 소식에 이제 더는 미룰 수 없겠다 싶어 취득하게 되었다(그리고 사내 자격증 챌린지는 무사히 1등을 따냈다는 후문😉).</p>\n<p><br/><br/></p>\n<h1 id=\"cka-시험-개요\" style=\"position:relative;\"><a href=\"#cka-%EC%8B%9C%ED%97%98-%EA%B0%9C%EC%9A%94\" aria-label=\"cka 시험 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CKA 시험 개요</h1>\n<p>CKA 자격증 시험은 쿠버네티스(Kubernetes) 오픈소스 프로젝트를 관리하는 <a href=\"https://www.linuxfoundation.org/\">Linux Foundation</a> 산하의 <a href=\"https://www.cncf.io/\">Cloud Native Computing Foundation(CNCF)</a>라는 단체에서 주관하는 시험이다.</p>\n<br/>\n<p>CNCF에서 제공하는 쿠버네티스 관련 자격시험은 CKA, CKAD, CKS 총 3가지로, 그 중 CKA는 쿠버네티스 관리자가 가져야하는 스킬, 지식, 역량을 가지고 있는지 여부를 확인하는 시험. <strong>쿠버네티스 네트워크, 스토리지, 보안, 유지보수, 로깅 및 모니터링, 애플리케이션 라이프사이클, 트러블슈팅, API 오브젝트 기초</strong> 등의 내용을 망라한다.</p>\n<p><br/><br/></p>\n<h2 id=\"cka-기본-시험-정보\" style=\"position:relative;\"><a href=\"#cka-%EA%B8%B0%EB%B3%B8-%EC%8B%9C%ED%97%98-%EC%A0%95%EB%B3%B4\" aria-label=\"cka 기본 시험 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CKA 기본 시험 정보</h2>\n<ul>\n<li><strong>100% 실습</strong> 시험(Hands-On Lab)</li>\n<li><strong>100% 온라인</strong> 시험 (On-site 없음)</li>\n<li>총 100점 만점 중 <strong>66점 이상</strong>을 획득해야한다.</li>\n<li>시험 시간은 총 <strong>120분</strong></li>\n<li>문제 수는 <strong>15문제 ~ 20문제</strong> 사이(라고는 하지만 대부분 17문제인 듯 하다)</li>\n<li>자격증 <strong>구입 후 1년 이내 시험 신청</strong> 가능</li>\n<li><strong>1회 무료 재시험</strong> (패널티 기간 없음)</li>\n<li>자격증의 유효기간은 <strong>3년</strong></li>\n<li>시험 비용은 <strong>$375</strong> (주기적으로 15~40% 쿠폰을 발급하니 할인 쿠폰이 떴을때 미리 바우처를 구입해두면 좋다)</li>\n<li>시험 결과는 <strong>시험 종료 후 24시간 이내</strong>에 메일로 통지된다.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"수험-시-주의-사항\" style=\"position:relative;\"><a href=\"#%EC%88%98%ED%97%98-%EC%8B%9C-%EC%A3%BC%EC%9D%98-%EC%82%AC%ED%95%AD\" aria-label=\"수험 시 주의 사항 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수험 시 주의 사항</h2>\n<ul>\n<li>온라인으로 보는 IT 자격증 시험을 많이 보신 분들은 아시겠지만 <strong>응시자 외에 아무도 없는 개인 공간</strong>에서 시험을 치러야 한다.</li>\n<li>책상 위도 신분증과 라벨이 붙지 않은 투명 물병 외의 불필요한 물건을 모두 치워야 한다.</li>\n<li>신분증은 <strong>여권</strong>, 혹은 <strong>국내신분증 + 신용카드</strong>(서명 되어있어야 함)조합으로 사용 가능하나 국내 신분증은 확인이 번거로우니 여권을 지참하길 추천한다.</li>\n<li>외장모니터 사용은 가능하나 화면 딜레이가 심해진다고하여 나는 사용하지 않았다.</li>\n<li>시험은 크롬 계열 브라우저에서 볼 수 있으나 크롬브라우저에서 시험이 작동하지 않는 경우가 있어 권장 브라우저인 <strong>비발디(Vivaldi) 브라우저</strong>를 미리 설치해 북마크를 해두는 것을 추천.</li>\n<li>CKA는 오픈북 시험으로 쿠버네티스 공식문서를 시험 중 열람할 수 있는데, 시험 화면 외 <strong>1개의 추가 탭</strong>만 허용된다.</li>\n<li>시험 중 쿠버네티스 공식문서 중 허용된 URL의 문서들만 열람 가능하며, 쿠버네티스 공식 웹사이트 중에서도 <strong>Discussion 페이지</strong>는 열람 불가하다.</li>\n<li>시험 화면 내 <strong>notepad</strong> 기능이 있어 명령어 등을 복사하거나 YAML 파일을 붙여넣고 편집할 수 있다.</li>\n<li>각 문제마다 <strong>컨텍스트가 지정</strong>되어있다. 실수로 다른 컨텍스트에서 작업하게 될 경우 점수에 반영이 되지 않으니, 문제풀이를 시작하기 전, 터미널에 반드시 복사 &#x26; 붙여넣고 시작하자. 컨텍스트를 전환하는 명령어는 시험 문제 제일 상단에 표시되어있어 따로 외울 필요는 없다.</li>\n<li>반드시!! <strong>네트워크 환경이 원활한 곳</strong>에서 시험을 볼 것. 내 방이 평소에도 인터넷이 유독 안터지는 편인데 시험 보는 도중 갑자기 화면이 프리즈 된 뒤 튕겨져나와서 멘붕이었다. 다행히 재접속하니 감독관(Proctor)가 바로 시험환경에 연결하고 튕겨나간 시간만큼 추가시간을 부여해줬지만 답안 데이터가 날아갔는지 점검하기 위해(다행히 작업했던 내역이 날아가지는 않았다) 시간을 꽤 소모해서 마지막에는 시간이 부족해 문제를 풀지 못했다.</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"시험-준비-방법\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%97%98-%EC%A4%80%EB%B9%84-%EB%B0%A9%EB%B2%95\" aria-label=\"시험 준비 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시험 준비 방법</h1>\n<p>CKA는 아래 세 가지 리소스를 가지고 학습하면 시험 합격에는 큰 무리가 없을 듯 하다.</p>\n<br/>\n<h2 id=\"udemy의-뭄샤드-cka-강의의-바이블\" style=\"position:relative;\"><a href=\"#udemy%EC%9D%98-%EB%AD%84%EC%83%A4%EB%93%9C-cka-%EA%B0%95%EC%9D%98%EC%9D%98-%EB%B0%94%EC%9D%B4%EB%B8%94\" aria-label=\"udemy의 뭄샤드 cka 강의의 바이블 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Udemy의 뭄샤드: CKA 강의의 바이블</h2>\n<p>“CKA 시험 후기”로 검색해서 나오는 모든 블로그 포스팅에서 언급되는 강의인 Mumshad Mannambeth의 <strong><a href=\"https://www.udemy.com/course/certified-kubernetes-administrator-with-practice-tests/\">Certified Kubernetes Administrator (CKA) with Practice Tests</a></strong>.</p>\n<br/>\n<p>쿠버네티스 오브젝트의 동작 메커니즘을 이해하기 위한 기본 개념부터 시작해 CKA의 시험 범위 전체를 커버하는데, 할인행사를 적용해 구입하면 약 **2만원 가량의 가격으로 핸즈온 랩까지 무제한으로 연습(!)**할 수 있는 엄청난 강의이다.</p>\n<br/>\n<p>핸즈온 랩은 매 챕터마다, 그리고 강의 마지막에 모의고사 형태(Lightning Lab과 Mock Exam)로 제공되는데, Udemy 외부의 뭄샤드가 운영하는 KodeKloud라는 사이트에서 진행된다. 실제 환경보다 느리고 종종 장애가 나기도 하지만, 마지막의 모의고사들(Lightning Lab &#x26; Mock Exam)은 실제 시험 중 쉽거나 중간 난이도의 문제와 유사하니 꼭 반복해서 풀어보길 바란다.</p>\n<br/>\n<p>강의 내용도 CKA를 보는 사람들 뿐만 아니라 쿠버네티스 개념에 대해 익히고 싶은 사람들에게도 좋을법한 내용이다.</p>\n<br/>\n<p>다만 영어 강의인데다 자막도 자동자막인 점은 불편할 수 있다. 사실 자막이 초반에는 볼만해서 수동 자막인줄 알았는데 후반에 가면 갈수록 자막이 엉망이라 후반부에는 자막을 끄고 봤었다. 그나마 강사인 뭄샤드가 인도사람 치고는(?) 발음이 깔끔하고 강의 속도도 빠르지 않아서 1.5배속으로 들어도 잘 들리는 편. 나는 유독 안들리는 일부 강의를 빼고는 괜찮게 들었다. 하지만 나는 영어가 쥐약이다! 하는 분께는 약간 힘들수도. 그래도 실습환경 제공만으로도 돈 값은 충분히 한다고 생각하니 CKA를 보려는 분이면 꼭 신청하시길. (영어에 익숙치 않은 분들은 야매(?) 자막 번역 방법이 있으니 참고할 것: <a href=\"https://fomaios.tistory.com/m/entry/Udemy-%EC%8B%A4%EC%8B%9C%EA%B0%84-%ED%95%9C%EA%B8%80-%EC%9E%90%EB%A7%89%EC%9C%BC%EB%A1%9C-%EB%B3%B4%EB%8A%94-%EB%B0%A9%EB%B2%95featChrome\">유데미 한글자막 보는법</a>)</p>\n<br/>\n<p>참고로 최근 Udemy와 웅진글로벌이 파트너 계약을 맺고 강의의 한글 번역본을 내고 있는데, 웅진글로벌에 문의 결과(22년 5월 기준) CKA는 안타깝게도 당분간 한글번역을 낼 예정이 없다고 한다.</p>\n<p><br/><br/></p>\n<h2 id=\"killersh--고난이도-문제-풀이-연습--실제-환경과-유사\" style=\"position:relative;\"><a href=\"#killersh--%EA%B3%A0%EB%82%9C%EC%9D%B4%EB%8F%84-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%97%B0%EC%8A%B5--%EC%8B%A4%EC%A0%9C-%ED%99%98%EA%B2%BD%EA%B3%BC-%EC%9C%A0%EC%82%AC\" aria-label=\"killersh  고난이도 문제 풀이 연습  실제 환경과 유사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Killer.sh : 고난이도 문제 풀이 연습 &#x26; 실제 환경과 유사</h2>\n<p><a href=\"http://Killer.sh\">Killer.sh</a>은 CKA 시험을 신청하면 아래와 같이 시험신청 탭에서 접속할 수 있는 모의고사로 <strong>매우 고난이도</strong>이다. (CKA Mock Exam 한 두번 풀어보고 시험날짜가 얼마 남지 않았길래 Killer.sh 접속해봤다가 너무 어려워서 깜짝 놀랐던)</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-24-How-to-Pass-CKA-Exam/2022-05-24-How-to-Pass-CKA-Exam1.png\" alt=\"2022-05-24-How-to-Pass-CKA-Exam1.png\"></p>\n<br/>\n<p>Killer.sh는 25문제 + 보너스 문제들로 구성된 모의고사로, 실제 CKA 시험보다 훨씬 어렵지만 실제 시험환경과 동일하게 컨텍스트를 바꿔가며 시험 문제를 풀수 있고, 시험을 보고 나서 채점도 해준다(위에서 언급한 Udemy 강의의 모의고사들도 채점해주는 건 마찬가지지만).</p>\n<br/>\n<p>문제 난이도는 높은 편이지만 공식 사이트에서 제공하는 만큼 문제의 방향성이 실제 시험과 유사한 점이 많고 해설이 매우 충실해 시험 전 꼭 풀어보고 들어갈 것을 추천한다. 특히 <strong>ETCD 백업유형</strong>과 <strong>트러블 슈팅 관련 유형</strong>은 꼭 반복해서 풀이 방법을 반드시 체득하고 들어갈 것.</p>\n<br/>\n<p>트러블 슈팅 문제는 쿠버네티스 공식문서에도 관련 내용이 있기는 하지만 컨트롤 플레인의 컴포넌트가 망가진 유형의 경우, Kube-apiserver를 사용할 수 없기 때문에 컨테이너 런타임(이전에는 도커였으나 쿠버네티스에서 도커가 더이상 컨테이너 런타임으로써 사용되지 않게 되었기 때문에 현재 시험환경에서는 CRI-O를 런타임으로 사용하는 것으로 알고있다. 따라서 docker ps가 아니라 crictl ps 처럼 CRI-O에 맞는 커맨드를 입력해야한다)에서 제공하는 커맨드 혹은 리눅스 명령어(ps aux 등)를 숙지하고 있어야 하기 때문이다. 따라서 기존에 리눅스를 다루는 데 익숙하지 않은 학습자라면 Killer.sh을 통해 조금이라도 더 리눅스 명령어와 로그에 익숙하게 만든 뒤 들어가야한다.</p>\n<br/>\n<p>원래 Killer.sh은 추가금을 지불해야한다거나, 시험 2일 전 오픈된다고 하는 제약사항이 있었던 듯 한데, 현재는 <strong>시뮬레이터가 총 2개 지원되고 시뮬레이터 접속 혹은 답안지 열람은 시뮬레이터 활성화로부터 36시간 동안 자유롭게</strong> 할 수 있다. 다만, Udemy 강의의 Mock Test처럼 접속할 때마다 환경이 새로 구성되지 않고, 한 번 푼 이후에는 설정값들이 그대로 남아있어 여러번 풀기에는 적합하지 않은 편.</p>\n<br/>\n<p>개인적으로는 킬러쉘은 난이도가 많이 높은 편이기 때문에 안풀리는 문제를 끙끙 붙잡고 있기보다는 시험 한 일주일 전에 첫번째 시뮬레이터를 활성화 해서 실제 시험처럼 쭉 풀어본 뒤, 해설을 보고 반복적으로 다시 풀어보다가 전날쯤에 두번때 시뮬레이터를 활성화 해서 마지막 점검 형식으로 풀고 가는 게 낫지 않았을까 싶다(나는 시험 2일전 오픈된다는 말만 철썩같이 믿고 2일전에 오픈해 제대로는 딱 한번정도만 풀고 들어갔어서 제대로 내용을 숙지하지 못한 게 가장 후회된다.)</p>\n<p>+)</p>\n<p>참고로 killer.sh를 만든 팀에서 무료로 KillerKoda라는 실습환경도 제공하고있다(현재 베타버전). Killer.sh의 조금 순한 버전의 실습 문제들(CKA뿐만 아니라 CKS, CKAD도 있다)과 <a href=\"https://killercoda.com/playgrounds\">쿠버네티스 연습용 환경</a>(최신버전은 k8s 1.24버전이나 Istio, NGINX가 설치된 환경 등)을 제공하고 있으니 관심 있으신 분들은 한 번 살펴보시길.</p>\n<p>이전 포스팅에서 <a href=\"https://jinnypark9393.github.io/devops/Kubernetes-CKA-KillerKoda-Q01/\">Killer.sh, KillerKoda에 대한 설명</a>도 기재해 두었으니 같이 보시면 좋을 듯 하다.</p>\n<p><br/><br/></p>\n<h2 id=\"따배씨-실제-문제와-가장-흡사한-유형\" style=\"position:relative;\"><a href=\"#%EB%94%B0%EB%B0%B0%EC%94%A8-%EC%8B%A4%EC%A0%9C-%EB%AC%B8%EC%A0%9C%EC%99%80-%EA%B0%80%EC%9E%A5-%ED%9D%A1%EC%82%AC%ED%95%9C-%EC%9C%A0%ED%98%95\" aria-label=\"따배씨 실제 문제와 가장 흡사한 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>따배씨: 실제 문제와 가장 흡사한 유형</h2>\n<p>유투브에 쿠버네티스, 도커와 관련된 무료 강의를 올려주시는 유투버 따배런 이성미 강사님의 CKA강의. 초반에만 무료로 강의가 오픈되고, 이후 강의들은 멤버십을 신청해야만 들을 수 있다.</p>\n<br/>\n<p>나는 무료로 오픈된 ETCD 백업 강의만 들었는데, 실제 문제와 비슷했다. 아직 멤버십 가입을 하지 않아 정확한 비교는 어렵지만, 오픈된 문제해설을 보면 유데미, Killer.sh, 따배씨 세 문제를 비교했을 때 따배씨의 문제가 압도적으로 실전과 유사도가 매우 높고, 플레이리스트에서 확인한 강의 제목을 보았을때도 실제 나온 문제 유형들로 구성되어있었다. CKA 자격증 자체만 빠르게 취득하고 싶은 경우에는 유투브 멤버십에 가입해 따배씨 강의를 듣고 가는 것도 좋을 듯하다.</p>\n<br/>\n<p>다만 현재 시점에서는 모든 강의가 오픈되지 않아 위에서 언급한 다른 강의와 병행하는 걸 추천한다.</p>\n<p><br/><br/></p>\n<h1 id=\"시험-팁\" style=\"position:relative;\"><a href=\"#%EC%8B%9C%ED%97%98-%ED%8C%81\" aria-label=\"시험 팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>시험 팁</h1>\n<h2 id=\"최대한-명령형-커맨드imperative-command를-활용하자\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EB%8C%80%ED%95%9C-%EB%AA%85%EB%A0%B9%ED%98%95-%EC%BB%A4%EB%A7%A8%EB%93%9Cimperative-command%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%98%EC%9E%90\" aria-label=\"최대한 명령형 커맨드imperative command를 활용하자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대한 명령형 커맨드(Imperative Command)를 활용하자</h2>\n<p>현재 프로젝트에서는 휴먼 에러를 최대한 줄이기 위해 커맨드라인으로 리소스를 수정하는 것을 지양하고 있어 서드파티에서 제공한 UI툴에서 YAML파일을 수정하는 형태로 작업을 많이 하는 편이라 CKA를 보기 전까지는 명령형 커맨드가 익숙치 않았었다.</p>\n<br/>\n<p>하지만 CKA 강의를 들으면서 보니 YAML 쿠버네티스 문서에서 복붙해서 쫌쫌따리(?) 고치지 않고도 명령어 한 줄로 웬만한 리소스들을 한 번에 수정할 수 있었다. 실제 운영 환경에서는 팀의 정책을 따라야하겠지만 시험에서는 반드시 이 명령형 커맨드 사용에 익숙해져야한다.</p>\n<br/>\n<p>참고로 현재 시험 환경에서는 kubectl의 축약어와 자동완성 기능이 이미 적용되어있어 별도로 <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">kubectl 치트시트</a>에 나와있는 설정을 하지 않아도 된다.</p>\n<br/>\n<p>또한 kubectl 명령어 사용법 확인은 <a href=\"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands\">kubectl reference</a>에서도 확인이 가능하나, 커맨드 자체는 알고있고, 옵션 값의 확이 필요한 경우에는 kubectl <command> —help을 입력하면 간단한 사용 예와 함께 옵션값에 대한 설명을 빠르게 확인할 수 있으니 위 명령어 사용에도 익숙해지도록 하자.</p>\n<p><br/><br/></p>\n<h3 id=\"json-path를-익혀두자\" style=\"position:relative;\"><a href=\"#json-path%EB%A5%BC-%EC%9D%B5%ED%98%80%EB%91%90%EC%9E%90\" aria-label=\"json path를 익혀두자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JSON Path를 익혀두자</h3>\n<p>쿠버네티스에서는 kubectl을 사용해 리소스를 확인할 수 있는데, JSON Path옵션을 적용하면 리소스의 특정 데이터를 뽑아 저장할 수 있다.</p>\n<br/>\n<p>CKA 문제 유형 중 특정 리소스의 특정 데이터를 문제에서 지정한 파일에 저장하는 문제유형에 JSON Path를 활용하면 빠르게 문제를 풀 수 있다.</p>\n<br/>\n<p>참고로 jsonpath 옵션 외에도 custom column이라는 옵션도 유용하니 <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">kubectl 치트시트</a>를 참고해 익혀두면 좋다.</p>\n<p><br/><br/></p>\n<h2 id=\"쿠버네티스-공식문서-검색에-익숙해지자-북마크는-검색으로-찾기-어려운-페이지만\" style=\"position:relative;\"><a href=\"#%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-%EA%B3%B5%EC%8B%9D%EB%AC%B8%EC%84%9C-%EA%B2%80%EC%83%89%EC%97%90-%EC%9D%B5%EC%88%99%ED%95%B4%EC%A7%80%EC%9E%90-%EB%B6%81%EB%A7%88%ED%81%AC%EB%8A%94-%EA%B2%80%EC%83%89%EC%9C%BC%EB%A1%9C-%EC%B0%BE%EA%B8%B0-%EC%96%B4%EB%A0%A4%EC%9A%B4-%ED%8E%98%EC%9D%B4%EC%A7%80%EB%A7%8C\" aria-label=\"쿠버네티스 공식문서 검색에 익숙해지자 북마크는 검색으로 찾기 어려운 페이지만 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>쿠버네티스 공식문서 검색에 익숙해지자, 북마크는 검색으로 찾기 어려운 페이지만</h2>\n<p>CKA는 쿠버네티스 공식문서의 자료를 검색해 참고할 수 있는 오픈북 시험인만큼, 방대한 양의 쿠버네티스 문서 중에서 필요한 내용을 빠르게 검색해 활용할 수 있는 능력이 중요한 시험이다.</p>\n<br/>\n<p>북마크를 활용하는 방법도 있지만, 모든 관련 페이지를 북마크하면 북마크 리스트 중에서 해당 내용을 찾는 것이 또 번거로워서 웬만한 페이지는 검색으로 찾아서 활용하고,</p>\n<br/>\n<p>ETCD 백업 방법처럼 검색어로 찾을 때 여러 페이지를 거쳐 접속해야 하는 페이지이거나, 페이지가 길어서 YAML 템플릿을 한눈에 찾기 어려운 페이지일 경우, Security Policy나 Sidecar Container 처럼 문제에 직접적으로 나온 키워드로 찾기 어려울 경우에만 북마크를 해두는 것이 개인적으로는 편했다. 하지만 이건 개인적인 취향이니 한 번 모의테스트나 <a href=\"http://Killer.sh\">Killer.sh</a> 문제를 풀어보고 자신에게 맞는 방법을 찾는 게 좋을 듯.</p>\n<br/>\n<p>참고로 위에도 잠깐 설명했지만 CKA는 비발디브라우저에서 최적으로 작동하고, 크롬브라우저에서는 접속이 안되는 경우가 있어 애써 저장한 북마크를 활용하지 못할 수도 있기 때문에 모의고사를 치를 때부터 비발디 브라우저를 적극 활용하길 추천한다.</p>\n<p><br/><br/></p>\n<h2 id=\"문제-유형\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9C%A0%ED%98%95\" aria-label=\"문제 유형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제 유형</h2>\n<ol>\n<li>사이드카 컨테이너 생성</li>\n<li>네임스페이스 셀렉터를 사용해 네트워크폴리시 생성</li>\n<li>Kubeadm으로 마스터노드만 업그레이드</li>\n<li>etcd 백업 및 복구</li>\n<li>멀티컨테이너 파드 생성</li>\n<li>노드 트러블슈팅</li>\n<li>노드 정보 저장</li>\n<li>Hostpath 타입의 볼륨 생성하기</li>\n<li>서비스어카운트 &#x26; 클러스터롤 &#x26; 롤바인딩 리소스 생성</li>\n<li>파드 리소스 사용량 순으로 정렬해 제일 높은 파드 이름 기록</li>\n<li>Nodeport타입 서비스 생성</li>\n<li>디플로이먼트 업데이트 + 업데이트 내용 기록 옵션 활성화</li>\n<li>파드 로그 중 특정 내용이 들어있는 로그만 기록</li>\n<li>파드(혹은 디플로이먼트) 노드셀렉터 추가하기</li>\n<li>Pvc 생성 및 파드 마운트</li>\n<li>디플로이먼트의 레플리카 수 늘리기</li>\n</ol>\n<p><br/><br/></p>","frontmatter":{"date":"May 24, 2022","title":"쿠버네티스(Kubernetes) Certified Kubernetes Administrator(CKA) 시험 합격 후기: 공부 방법, 문제 유형, 시험 개요 등","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220524-kubernetes-how-to-pass-cka-exam/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220524-algorithm-book-with-pic/","nextSlug":"/220523-python-day36/","prevSlug":"/220524-kubernetes-how-to-pass-cka-exam/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}