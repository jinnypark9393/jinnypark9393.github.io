{"componentChunkName":"component---src-templates-blog-template-js","path":"/220524-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"fc33f28a-79c2-5df8-9f7b-fbf5040dae6c","html":"<h1 id=\"제-2장-변수와-배열\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-2%EC%9E%A5-%EB%B3%80%EC%88%98%EC%99%80-%EB%B0%B0%EC%97%B4\" aria-label=\"제 2장 변수와 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 2장 변수와 배열</h1>\n<h2 id=\"21-문자열의-길이는-문자길이-변수-또는-보초-값이-관리한다\" style=\"position:relative;\"><a href=\"#21-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EA%B8%B8%EC%9D%B4%EB%8A%94-%EB%AC%B8%EC%9E%90%EA%B8%B8%EC%9D%B4-%EB%B3%80%EC%88%98-%EB%98%90%EB%8A%94-%EB%B3%B4%EC%B4%88-%EA%B0%92%EC%9D%B4-%EA%B4%80%EB%A6%AC%ED%95%9C%EB%8B%A4\" aria-label=\"21 문자열의 길이는 문자길이 변수 또는 보초 값이 관리한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>21. 문자열의 길이는 문자길이 변수 또는 ‘보초 값’이 관리한다</h2>\n<ul>\n<li>문자열은 1번째 요소부터 차례로 문자가 저장된 문자 타입의 배열 ⇒ 문자열이 끝날 때 배열이 끝났음을 알려주어야한다.</li>\n<li>문자열이 끝남을 알려주는 방법\n<ul>\n<li>\n<p>문자 열 길이 변수를 준비</p>\n<p>: 배열 속 문자열 길이를 정수 타입 변수에 저장해 참조한다.</p>\n</li>\n<li>\n<p>문자 열 끝에 <strong>보초 값</strong>을 저장</p>\n<ul>\n<li>문자열의 구성 문자로 절대로 표시되지 않는 문자 코드(<strong>보초 값</strong>)를 배열 끝 부분에 저장</li>\n<li>일반적으로 숫자 0(문자 ‘0’ 아님)을 사용</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"column-관용적으로-사용되는-변수명\" style=\"position:relative;\"><a href=\"#column-%EA%B4%80%EC%9A%A9%EC%A0%81%EC%9C%BC%EB%A1%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%EB%B3%80%EC%88%98%EB%AA%85\" aria-label=\"column 관용적으로 사용되는 변수명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Column: 관용적으로 사용되는 변수명</h2>\n<ol>\n<li>\n<p>반복문의 반복 횟수를 저장하는 변수</p>\n<p>: 반복 처리 알고리즘에서 반복 횟수를 유지하는 정수 타입 변수명은 <strong>i, j, k</strong>를 자주 사용</p>\n</li>\n<li>\n<p>배열 첨자로 사용되는 변수</p>\n<p>: <strong>index, idx</strong></p>\n</li>\n<li>\n<p>수를 세는 데 사용되는 변수</p>\n<p>: <strong>count, counter, cnt</strong></p>\n</li>\n<li>\n<p>문자열을 다루는 변수(배열)</p>\n<p>: <strong>str, string</strong></p>\n</li>\n</ol>\n<br/>\n<h1 id=\"제-3장-자료구조\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-3%EC%9E%A5-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"제 3장 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 3장: 자료구조</h1>\n<h2 id=\"22-대량-데이터를-효율적으로-관리하기-위한-메커니즘이-자료구조\" style=\"position:relative;\"><a href=\"#22-%EB%8C%80%EB%9F%89-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%ED%9A%A8%EC%9C%A8%EC%A0%81%EC%9C%BC%EB%A1%9C-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0-%EC%9C%84%ED%95%9C-%EB%A9%94%EC%BB%A4%EB%8B%88%EC%A6%98%EC%9D%B4-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0\" aria-label=\"22 대량 데이터를 효율적으로 관리하기 위한 메커니즘이 자료구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>22. 대량 데이터를 효율적으로 관리하기 위한 메커니즘이 자료구조</h2>\n<ul>\n<li><strong>자료구조</strong>: 대량 데이터를 효율적으로 관리하기 위한 메커니즘</li>\n<li>예시\n<ul>\n<li>우편번호: 앞 3자리로 대략적인 시, 군, 자치구를 파악할 수 있어 배송처의 범위를 빠르게 좁힐 수 있음</li>\n<li>출석번호: 무작위로 나열된 학생 명단에서 특정 학생을 찾는 것은 어렵지만 학년, 반, 출석번호 라는 정보를 부여하면 해당 학생을 효율적으로 찾을 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>","excerpt":"제 2장 변수와 배열 21. 문자열의 길이는 문자길이 변수 또는 ‘보초 값’이 관리한다 문자열은 1번째 요소부터 차례로 문자가 저장된 문자 타입의 배열 ⇒ 문자열이 끝날 때 배열이 끝났음을 알려주어야한다. 문자열이 끝남을 알려주는 방법 문자 열 길이 변수를 준비 : 배열 속 문자열 길이를 정수 타입 변수에 저장해 참조한다. 문자 열 끝에 보초 값을 저장 문자열의 구성 문자로 절대로 표시되지 않는 문자 코드(보초 값)를 배열 끝 부분에 저장 일반적으로 숫자 0(문자 ‘0’ 아님)을 사용 Column: 관용적으로 사용되는 변수명 반복문의 반복 횟수를 저장하는 변수 : 반복 처리 알고리즘에서 반복 횟수를 유지하는 정수 타입 변수명은 i, j, k를 자주 사용 배열 첨자로 사용되는 변수 : index, idx 수를 세는 데 사용되는 변수 : count, counter, cnt 문자열을 다루는 변수(배열) : str, string 제 3장: 자료구조 22. 대량 데이터를 효율적으로 관리하기…","frontmatter":{"date":"May 24, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(8), 제3장 - 자료구조(1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220524-algorithm-book-with-pic/"}},"next":{"id":"62207d43-714c-55b0-a7c9-cd25e0e0c8d3","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 12-4. 메뉴 출력하기, 글쓰기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-24-Python-Photo/2022-05-24-Python-Photo1.jpg\" alt=\"2022-05-24-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-24-Python-Photo/2022-05-24-Python-Photo2.jpg\" alt=\"2022-05-24-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"4-1-블로그-메뉴-출력하기\" style=\"position:relative;\"><a href=\"#4-1-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A9%94%EB%89%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0\" aria-label=\"4 1 블로그 메뉴 출력하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-1. 블로그 메뉴 출력하기</h1>\n<h2 id=\"1-프로젝트-설계\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84\" aria-label=\"1 프로젝트 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로젝트 설계</h2>\n<ul>\n<li>프로그램 기능 설계\n<ul>\n<li>게시글 로딩하기 (완료)</li>\n<li><strong>메뉴 출력하기</strong> (이번 강의에서 다룰 내용)</li>\n<li><strong>게시글 쓰기</strong> (이번 강의에서 다룰 내용)</li>\n<li>게시글 목록 확인하기</li>\n<li>게시글 상세 확인하기</li>\n<li>게시글 수정하기</li>\n<li>게시글 삭제하기</li>\n<li>게시글 저장하기</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-메뉴-출력하기-결과물-예시\" style=\"position:relative;\"><a href=\"#2-%EB%A9%94%EB%89%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0-%EA%B2%B0%EA%B3%BC%EB%AC%BC-%EC%98%88%EC%8B%9C\" aria-label=\"2 메뉴 출력하기 결과물 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 메뉴 출력하기 결과물 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- CANARY BLOG -\n- 메뉴를 선택해 주세요 -\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span></code></pre></div>\n<ul>\n<li>메뉴를 출력하기 까지만 진행할 것(메뉴별 기능 구현은 뒤의 강의에서 다룰 예정)</li>\n<li>숫자 1,2,3외의 숫자를 입력할 경우 ⇒ 다시 메뉴 출력</li>\n<li>문자 입력 시 ⇒ 예외처리가 필요</li>\n<li>해당 기능 구현은 실습문제 5.3.2와 유사하다(while True라는 무한반복문 사용).</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-기능-구현\" style=\"position:relative;\"><a href=\"#3-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84\" aria-label=\"3 기능 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 기능 구현</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">break</span></code></pre></div>\n<ul>\n<li>먼저 메뉴를 출력해준 뒤, 입력값에 따라 표시되는 출력문을 분기한다(3이 나올경우 break로 프로그램 종료)</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span>\n게시글 쓰기\n\n<span class=\"token comment\"># 2번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span>\n게시글 목록\n\n<span class=\"token comment\"># 3번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span>\n프로그램 종료</code></pre></div>\n<br/>\n<ul>\n<li>문자열 입력시에는 아래와 같이 에러가 발생한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> aa\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Users/usr/Documents/python_basic/myvenv/Chapter12/main.py\"</span>, line <span class=\"token number\">33</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\nValueError: invalid literal <span class=\"token keyword\">for</span> int<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> with base <span class=\"token number\">10</span>: <span class=\"token string\">'aa'</span></code></pre></div>\n<ul>\n<li>예외 처리가 필요한 상황.</li>\n</ul>\n<br/>\n<ul>\n<li>try-except 구문으로 예외처리하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    try:\n        choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    except ValueError:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    else:\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 목록\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin class-name\">break</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> aa\n숫자를 입력해 주세요</code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"4-2-게시글-쓰기\" style=\"position:relative;\"><a href=\"#4-2-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%93%B0%EA%B8%B0\" aria-label=\"4 2 게시글 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-2. 게시글 쓰기</h1>\n<h2 id=\"1-게시글-쓰기-결과-화면-예시\" style=\"position:relative;\"><a href=\"#1-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%93%B0%EA%B8%B0-%EA%B2%B0%EA%B3%BC-%ED%99%94%EB%A9%B4-%EC%98%88%EC%8B%9C\" aria-label=\"1 게시글 쓰기 결과 화면 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 게시글 쓰기 결과 화면 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- 게시글 쓰기 - \n제목을 입력해 주세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>\n파이썬 공부 <span class=\"token number\">1</span>일차\n본문을 입력해 주세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n자료형 변수 배웠다\n<span class=\"token comment\"># 게시글이 등록되었습니다.</span></code></pre></div>\n<ul>\n<li>게시글 등록 기능\n<ol>\n<li>Post 인스턴스 생성</li>\n<li>Post 리스트에 저장</li>\n</ol>\n</li>\n<li>Post 인스턴스\n<ol>\n<li>글번호 ⇒ <strong>어떻게 처리?</strong></li>\n<li>제목 ⇒ 입력값 받기</li>\n<li>내용 ⇒ 입력값 받기</li>\n<li>조회수 ⇒ 초기 값 0</li>\n</ol>\n<ul>\n<li>마지막 글번호 ⇒ 현재 post_list의 마지막 요소의 id값 +1</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-코드-구현\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 구현</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 쓰기</span>\ndef write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 쓰기 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 쓰기 -\"</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"내용을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 글번호</span>\n    <span class=\"token function\">id</span> <span class=\"token operator\">=</span> post_list<span class=\"token punctuation\">[</span>-1<span class=\"token punctuation\">]</span>.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> + <span class=\"token number\">1</span>\n    post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>id, title, content, <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"# 게시글이 등록되었습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 목록</span>\ndef list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 목록 횟수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    try:\n        choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    except ValueError:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    else:\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n            write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n            list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin class-name\">break</span></code></pre></div>\n<ul>\n<li>블로그 메뉴 출력: while True ~ break 함수를 정의해 구현\n<ul>\n<li>숫자 대신 문자열 입력값이 들어올 경우 “숫자를 입력해 주세요”라는 에러메시지 출력(try~except를 사용해 구현)</li>\n</ul>\n</li>\n<li>게시글 쓰기 기능: write_post() 함수를 정의해 구현\n<ul>\n<li>id라는 변수를 정의해 구현(리스트의 마지막 id에서 1을 더한 것)</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 진행할 프로젝트의 메뉴 출력과 글쓰기 기능에 대해 알아보았다. 다음 포스팅에서는 먼저 블로그 프로젝트의 게시글 목록, 상세를 구현해보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 24, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 37일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220524-python-day37/"}},"prev":{"id":"4c1b7167-efea-5892-a4ee-022f33c6a59c","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 12-5. 블로그 게시글 목록, 상세 구현을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-25-Python-Photo/2022-05-25-Python-Photo1.jpg\" alt=\"2022-05-25-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-25-Python-Photo/2022-05-25-Python-Photo2.jpg\" alt=\"2022-05-25-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"5-블로그-게시글-목록-상세\" style=\"position:relative;\"><a href=\"#5-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EB%AA%A9%EB%A1%9D-%EC%83%81%EC%84%B8\" aria-label=\"5 블로그 게시글 목록 상세 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 블로그 게시글 목록, 상세</h1>\n<h2 id=\"1-프로그램-기능-구현하기\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"1 프로그램 기능 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로그램 기능 구현하기</h2>\n<ul>\n<li>게시글 목록 구현 결과 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- 게시글 목록 - \n번호 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\n제목 <span class=\"token builtin class-name\">:</span> 파이썬 공부 <span class=\"token number\">2</span>일차\n조회수 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>\n\n번호 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span>\n제목 <span class=\"token builtin class-name\">:</span> 파이썬 공부 <span class=\"token number\">3</span>일차\n조회수: <span class=\"token number\">0</span>\n\n번호 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span>\n제목 <span class=\"token builtin class-name\">:</span> 파이썬 공부 <span class=\"token number\">1</span>일차\n조회수 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">0</span></code></pre></div>\n<ul>\n<li>post_list 객체를 get 메서드로 가져와 출력하면 된다.</li>\n</ul>\n<br/>\n<ul>\n<li>글 번호를 선택하는 기능</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Q<span class=\"token punctuation\">)</span> 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">4</span>\n없는 글 번호입니다.\nQ<span class=\"token punctuation\">)</span> 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">5</span>\n없는 글 번호입니다.\nQ<span class=\"token punctuation\">)</span> 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>글 번호 선택\n<ul>\n<li>없는 글 번호 ⇒ 무한 반복</li>\n<li>-1 입력 시 ⇒ 메뉴로 복귀(break)</li>\n<li><strong>올바른 글 번호 ⇒ 게시글 상세(난이도 있음)</strong></li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-코드-구현\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 구현</h2>\n<h3 id=\"1-게시글-목록-구현하기\" style=\"position:relative;\"><a href=\"#1-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EB%AA%A9%EB%A1%9D-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"1 게시글 목록 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 게시글 목록 구현하기</h3>\n<ul>\n<li>게시글 목록을 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom termios <span class=\"token function\">import</span> VLNEXT\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 쓰기</span>\ndef write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 쓰기 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 쓰기 -\"</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"내용을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 글번호</span>\n    <span class=\"token function\">id</span> <span class=\"token operator\">=</span> post_list<span class=\"token punctuation\">[</span>-1<span class=\"token punctuation\">]</span>.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> + <span class=\"token number\">1</span>\n    post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>id, title, content, <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"# 게시글이 등록되었습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 목록</span>\ndef list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 목록 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 목록 -\"</span><span class=\"token punctuation\">)</span>\n    id_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">post</span> <span class=\"token keyword\">in</span> post_list:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: \"</span>, post.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목: \"</span>, post.get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"조회수: \"</span>, post.get_view_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        id_list.append<span class=\"token punctuation\">(</span>post.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n\n    <span class=\"token keyword\">while</span> True:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"Q. 글 번호를 선택해 주세요 (메뉴로 돌아가려면 -1을 입력해주세요)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">id</span> <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>>\"</span><span class=\"token punctuation\">))</span>\n        try:\n            <span class=\"token keyword\">if</span> <span class=\"token function\">id</span> <span class=\"token keyword\">in</span> id_list:\n                print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 상세보기\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> <span class=\"token function\">id</span> <span class=\"token operator\">==</span> -1:\n                <span class=\"token builtin class-name\">break</span>\n            else:\n                print<span class=\"token punctuation\">(</span><span class=\"token string\">\"없는 글 번호 입니다.\"</span><span class=\"token punctuation\">)</span>\n        except ValueError:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/jinipark/Documents/python_basic/m\nyvenv/bin/python /Users/jinipark/Documents/python_basic/myvenv/Ch\napter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span>\n\n- 게시글 목록 -\n번호:  <span class=\"token number\">1</span>\n제목:  테스트\n조회수:  <span class=\"token number\">0</span>\n\n번호:  <span class=\"token number\">2</span>\n제목:  테스트2\n조회수:  <span class=\"token number\">0</span>\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>게시글 목록 보기를 구현한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 쓰기</span>\ndef write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 쓰기 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 쓰기 -\"</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"내용을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 글번호</span>\n    <span class=\"token function\">id</span> <span class=\"token operator\">=</span> post_list<span class=\"token punctuation\">[</span>-1<span class=\"token punctuation\">]</span>.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> + <span class=\"token number\">1</span>\n    post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>id, title, content, <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"# 게시글이 등록되었습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 목록</span>\ndef list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 목록 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 목록 -\"</span><span class=\"token punctuation\">)</span>\n    id_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">post</span> <span class=\"token keyword\">in</span> post_list:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: \"</span>, post.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목: \"</span>, post.get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"조회수: \"</span>, post.get_view_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        id_list.append<span class=\"token punctuation\">(</span>post.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span>\n\n    <span class=\"token keyword\">while</span> True:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"Q. 글 번호를 선택해 주세요 (메뉴로 돌아가려면 -1을 입력해주세요)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">id</span> <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>>\"</span><span class=\"token punctuation\">))</span>\n        try:\n            <span class=\"token keyword\">if</span> <span class=\"token function\">id</span> <span class=\"token keyword\">in</span> id_list:\n                print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 상세보기\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">elif</span> <span class=\"token function\">id</span> <span class=\"token operator\">==</span> -1:\n                <span class=\"token builtin class-name\">break</span>\n            else:\n                print<span class=\"token punctuation\">(</span><span class=\"token string\">\"없는 글 번호 입니다.\"</span><span class=\"token punctuation\">)</span>\n        except ValueError:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요.\"</span><span class=\"token punctuation\">)</span>\n        \n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    try:\n        choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    except ValueError:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    else:\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n            write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n            list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin class-name\">break</span></code></pre></div>\n<ul>\n<li>글 번호를 설정하면 게시글 상세보기를 할 수 있도록 구현한다.\n<ul>\n<li>글 번호 선택 시 해당 번호가 있는 경우, 없는 경우를 구분한다.</li>\n<li>메뉴로 돌아가기 기능을 구현한다.</li>\n<li>try - except 구문으로 문자열 입력 시의 에러 메시지를 설정해준다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents/python_basic/m\nyvenv/bin/python /Users/usr/Documents/python_basic/myvenv/Ch\napter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span>\n\n- 게시글 목록 -\n번호:  <span class=\"token number\">1</span>\n제목:  테스트\n조회수:  <span class=\"token number\">0</span>\n\n번호:  <span class=\"token number\">2</span>\n제목:  테스트2\n조회수:  <span class=\"token number\">0</span>\n\nQ. 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력해주세요<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span>\n게시글 상세보기\nQ. 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력해주세요<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">3</span>\n없는 글 번호 입니다.\nQ. 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력해주세요<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span>-1\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-게시글-상세-확인하기\" style=\"position:relative;\"><a href=\"#2-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%83%81%EC%84%B8-%ED%99%95%EC%9D%B8%ED%95%98%EA%B8%B0\" aria-label=\"2 게시글 상세 확인하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 게시글 상세 확인하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- 게시글 상세 - \n번호 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">1</span>\n제목 <span class=\"token builtin class-name\">:</span> 파이썬 공부 <span class=\"token number\">2</span>일차\n본문 <span class=\"token builtin class-name\">:</span> 연산 배웠다\n조회수 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">3</span>\nQ<span class=\"token punctuation\">)</span> 수정: <span class=\"token number\">1</span> 삭제 <span class=\"token builtin class-name\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 -1을 입력<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>게시글 상세\n<ul>\n<li>사용자가 입력한 글 번호와 같은 게시글을 찾기: post_list에서 찾음</li>\n<li>조회수 증가 및 상세 내용 출력</li>\n<li>수정, 삭제 기능을 수행할 때 Post 객체 넘겨주기</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>코드로 구현</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\n<span class=\"token keyword\">import</span> csv\n<span class=\"token keyword\">from</span> post <span class=\"token keyword\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span>exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> reader<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">,</span> newline<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 쓰기</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">write_post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"게시글 쓰기 함수\"\"\"</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n- 게시글 쓰기 -\"</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"제목을 입력해 주세요\\n>>>\"</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"내용을 입력해 주세요\\n>>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 글번호</span>\n    <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> post_list<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n    post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    post_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"# 게시글이 등록되었습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 목록</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">list_post</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"게시글 목록 함수\"\"\"</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n- 게시글 목록 -\"</span><span class=\"token punctuation\">)</span>\n    id_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> post_list<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"제목: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"조회수: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_view_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n        id_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">.</span>get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q. 글 번호를 선택해 주세요 (메뉴로 돌아가려면 -1을 입력해주세요)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token builtin\">id</span> <span class=\"token keyword\">in</span> id_list<span class=\"token punctuation\">:</span>\n                detail_post<span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">elif</span> <span class=\"token builtin\">id</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"없는 글 번호 입니다.\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요.\"</span><span class=\"token punctuation\">)</span>\n        \n\n<span class=\"token comment\"># 글 상세 페이지</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">detail_post</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\" 게시글 상세보기 함수 \"\"\"</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n- 게시글 상세 -\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> post_list<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> post<span class=\"token punctuation\">.</span>get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">:</span>\n            <span class=\"token comment\"># 조회수 1 증가</span>\n            post<span class=\"token punctuation\">.</span>add_view_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"번호: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"제목: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"본문: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_content<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"조회수: \"</span><span class=\"token punctuation\">,</span> post<span class=\"token punctuation\">.</span>get_view_count<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Q) 수정: 1 삭제: 2 (메뉴로 돌아가려면 -1을 입력)\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n            choice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"수정\"</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"삭제\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"잘못 입력 하였습니다\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\n- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        choice <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span></code></pre></div>\n<ul>\n<li>글 번호를 선택할 때 id_list에 id가 있는 경우 ⇒ detail_post(id)로 변경해줌</li>\n<li>detail_post라는 함수를 선언해준다.\n<ul>\n<li>for 문으로 게시글 상세 내역을 출력해준다.</li>\n<li>while True + except문으로 수정 및 삭제 항목을 생성해준다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>m\nyvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Ch\napter12<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>py\n게시글 로딩중<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">-</span> CANARY BLOG\n<span class=\"token operator\">-</span> 메뉴를 선택해 주세요\n<span class=\"token number\">1.</span> 게시글 쓰기\n<span class=\"token number\">2.</span> 게시글 목록\n<span class=\"token number\">3.</span> 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span>\n\n<span class=\"token operator\">-</span> 게시글 목록 <span class=\"token operator\">-</span>\n번호<span class=\"token punctuation\">:</span>  <span class=\"token number\">1</span>\n제목<span class=\"token punctuation\">:</span>  테스트\n조회수<span class=\"token punctuation\">:</span>  <span class=\"token number\">0</span>\n\n번호<span class=\"token punctuation\">:</span>  <span class=\"token number\">2</span>\n제목<span class=\"token punctuation\">:</span>  테스트<span class=\"token number\">2</span>\n조회수<span class=\"token punctuation\">:</span>  <span class=\"token number\">0</span>\n\nQ<span class=\"token punctuation\">.</span> 글 번호를 선택해 주세요 <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 <span class=\"token operator\">-</span><span class=\"token number\">1</span>을 입력해주세요<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span>\n\n<span class=\"token operator\">-</span> 게시글 상세 <span class=\"token operator\">-</span>\n번호<span class=\"token punctuation\">:</span>  <span class=\"token number\">1</span>\n제목<span class=\"token punctuation\">:</span>  테스트\n본문<span class=\"token punctuation\">:</span>  테스트입니다\n조회수<span class=\"token punctuation\">:</span>  <span class=\"token number\">1</span>\nQ<span class=\"token punctuation\">)</span> 수정<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span> 삭제<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">(</span>메뉴로 돌아가려면 <span class=\"token operator\">-</span><span class=\"token number\">1</span>을 입력<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span>\n수정\n\n<span class=\"token operator\">-</span> CANARY BLOG\n<span class=\"token operator\">-</span> 메뉴를 선택해 주세요\n<span class=\"token number\">1.</span> 게시글 쓰기\n<span class=\"token number\">2.</span> 게시글 목록\n<span class=\"token number\">3.</span> 프로그램 종료</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 진행할 프로젝트의 블로그 게시글 목록, 상세 구현을 해보았다. 다음 포스팅에서는 블로그 프로젝트의 게시글 수정, 삭제, 저장 기능을 구현해보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 25, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 38일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220525-python-day38/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220524-algorithm-book-with-pic/","nextSlug":"/220524-python-day37/","prevSlug":"/220525-python-day38/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}