{"componentChunkName":"component---src-templates-blog-template-js","path":"/220517-python-day30/","result":{"data":{"cur":{"id":"11047eed-1726-56a3-8e90-d85a64653e14","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 10-2. csv파일입출력을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-17-Python-Photo/2022-05-17-Python-Photo1.jpg\" alt=\"2022-05-17-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-17-Python-Photo/2022-05-17-Python-Photo2.jpg\" alt=\"2022-05-17-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"1-파일-입출력-기본이어서\" style=\"position:relative;\"><a href=\"#1-%ED%8C%8C%EC%9D%BC-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EA%B8%B0%EB%B3%B8%EC%9D%B4%EC%96%B4%EC%84%9C\" aria-label=\"1 파일 입출력 기본이어서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파일 입출력 기본(이어서)</h1>\n<h2 id=\"1-pickle-모듈\" style=\"position:relative;\"><a href=\"#1-pickle-%EB%AA%A8%EB%93%88\" aria-label=\"1 pickle 모듈 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. pickle 모듈</h2>\n<ul>\n<li>파일에 파이썬 객체를 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pickle\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"목표1\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"매일 팔굽혀펴기 100회\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"목표2\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"매일 코딩 공부 1시간\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data.pickle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span>\npickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>wb: write binary 모드. 컴퓨터가 바로 읽을 수 있는 데이터 형식</li>\n<li>“data.pickle” 의 pickle은 .p 혹은 .pc 로 변경해도 된다.</li>\n</ul>\n<br/>\n<ul>\n<li>파일로부터 파이썬 객체를 읽어보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pickle\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data.pickle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> \n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>rb: read binary 모드.</li>\n<li>data = pickle.load(file): 파일에서 데이터가 하나하나 로드되어 data 객체에 저장</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-with-구문\" style=\"position:relative;\"><a href=\"#2-with-%EA%B5%AC%EB%AC%B8\" aria-label=\"2 with 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. With 구문</h2>\n<ul>\n<li>With 구문을 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># with 구문 사용 X</span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># with 구문 사용 O</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>with 구문을 사용하는 이유: file.close 를 매번 사용하기 번거롭기 때문.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<ul>\n<li>파이썬 객체를 pickle로 저장해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. 파이썬 객체를 pickle로 저장하기</span>\n<span class=\"token keyword\">import</span> pickle\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"목표1\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"매일 팔굽혀 펴기 100회\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"목표2\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"매일 코딩 공부 1시간\"</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./myvenv/Chapter10/data.pickle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"wb\"</span><span class=\"token punctuation\">)</span>\npickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>코드를 실행하면 Chapter10 폴더 하위에 data.pickle 이라는 파일이 생성된다(바이너리 파일이므로 열어서 내용을 읽을 수 없음)</li>\n</ul>\n<br/>\n<ul>\n<li>pickle 파일을 파이썬으로 가져와보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2. pickle 파일 파이썬으로 가져오기</span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./myvenv/Chapter10/data.pickle\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"rb\"</span><span class=\"token punctuation\">)</span>\ndata <span class=\"token operator\">=</span> pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter10<span class=\"token operator\">/</span><span class=\"token number\">02</span><span class=\"token punctuation\">.</span>pickle<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">{</span><span class=\"token string\">'목표1'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'매일 팔굽혀 펴기 100회'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'목표2'</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'매일 코딩 공부 1시간'</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>with 구문도 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># with 구문을 사용하면 자동으로 file.close 해준다.</span>\n<span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./myvenv/Chapter10/data.txt\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">,</span> encoding<span class=\"token operator\">=</span><span class=\"token string\">\"utf-8\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter10<span class=\"token operator\">/</span><span class=\"token number\">03.</span><span class=\"token keyword\">with</span>구문<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">1.</span> 스타트코딩과 함께 파이썬 공부\n<span class=\"token number\">2.</span> 비전공자도 정말 쉽게 배울 수 있습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"2-csv-파일-입출력\" style=\"position:relative;\"><a href=\"#2-csv-%ED%8C%8C%EC%9D%BC-%EC%9E%85%EC%B6%9C%EB%A0%A5\" aria-label=\"2 csv 파일 입출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. csv 파일 입출력</h1>\n<h2 id=\"1-csv-파일이란\" style=\"position:relative;\"><a href=\"#1-csv-%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%9E%80\" aria-label=\"1 csv 파일이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. csv 파일이란?</h2>\n<ul>\n<li>\n<p>CSV: comma-seperated values의 약어. 데이터가 콤마로 구분된 텍스트 파일 형식</p>\n</li>\n<li>\n<p>예: student.csv</p>\n<p>이름, 반, 번호</p>\n<p>재석, 1, 20</p>\n<p>홍철, 3, 8</p>\n<p>형돈, 5, 32</p>\n</li>\n</ul>\n<p>⇒ 테이블 형태의 데이터</p>\n<p><br/><br/></p>\n<h2 id=\"2-csv-파일-입출력-사용방법\" style=\"position:relative;\"><a href=\"#2-csv-%ED%8C%8C%EC%9D%BC-%EC%9E%85%EC%B6%9C%EB%A0%A5-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95\" aria-label=\"2 csv 파일 입출력 사용방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. csv 파일 입출력 사용방법</h2>\n<h3 id=\"1-csv-파일-쓰기\" style=\"position:relative;\"><a href=\"#1-csv-%ED%8C%8C%EC%9D%BC-%EC%93%B0%EA%B8%B0\" aria-label=\"1 csv 파일 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. csv 파일 쓰기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># csv파일 쓰기</span>\n<span class=\"token keyword\">import</span> csv\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"이름\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"반\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"번호\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"재석\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"홍철\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"형돈\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\nwriter <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-csv-파일-읽기\" style=\"position:relative;\"><a href=\"#2-csv-%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EA%B8%B0\" aria-label=\"2 csv 파일 읽기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. csv 파일 읽기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> csv\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"student.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\nreader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> reader<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-실습-1\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5-1\" aria-label=\"3 실습 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> asyncore <span class=\"token keyword\">import</span> write\n<span class=\"token keyword\">import</span> csv\n<span class=\"token keyword\">from</span> dataclasses <span class=\"token keyword\">import</span> dataclass <span class=\"token comment\"># 내장 모듈</span>\n\ndata <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"이름\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"반\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"번호\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"재석\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"홍철\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token string\">\"형돈\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># Window의 경우 newline=\"\" (자동 띄어쓰기 방지), encoding=\"utf-8-sig\" (글씨 깨짐 방지) 삽입: open(\"student.csv\", \"w\", newline=\"\", encoding=\"\")</span>\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./myvenv/Chapter10/student.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"w\"</span><span class=\"token punctuation\">)</span>\nwriter <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> d <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">:</span>\n    writer<span class=\"token punctuation\">.</span>writerow<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span>\n\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>for d in data: data의 데이터들을 하나씩 갖고와 d 에 저장한다.</li>\n</ul>\n<br/>\n<ul>\n<li>csv파일 읽기 파일을 생성해 아래 코드를 작성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> csv\n\n<span class=\"token builtin\">file</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"./myvenv/Chapter10/student.csv\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\nreader <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>reader<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> data <span class=\"token keyword\">in</span> reader<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token builtin\">file</span><span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter10<span class=\"token operator\">/</span><span class=\"token number\">05</span><span class=\"token punctuation\">.</span>csv파일읽기<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'이름'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'반'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'번호'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'재석'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'20'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'홍철'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'형돈'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'32'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 csv파일 입출력에 대해 알아보았다. 다음 포스팅에서는 파일입출력 실습문제를 풀어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 10-2. csv파일입출력을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-17-Python-Photo1 2022-05-17-Python-Photo2  1. 파일 입출력 기본(이어서) 1. pickle 모듈 파일에 파이썬 객체를 저장한다. wb: write binary 모드. 컴퓨터가 바로 읽을 수 있는 데이터 형식 “data.pickle” 의 pickle은 .p 혹은 .pc 로 변경해도 된다. 파일로부터 파이썬 객체를 읽어보자. rb: read binary 모드. data = pickle.load(file): 파일에서 데이터가 하나하나 로드되어 data 객체에 저장  2. With 구문 With 구문을 사용해보자. with 구문을 사용하는 이유: file.close 를 매번…","frontmatter":{"date":"May 17, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 31일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220517-python-day30/"}},"next":{"id":"ac2ea676-662f-5352-bd9a-aa8bf336e97a","html":"<h1 id=\"모의고사-112---퍼시스턴트-볼륨persistent-volume-pv-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-112---%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume-pv-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 112   퍼시스턴트 볼륨persistent volume pv 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 1.12 - 퍼시스턴트 볼륨(Persistent Volume: PV) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a <code class=\"language-text\">Persistent Volume</code> with the given specification.</p>\n<ul>\n<li>Volume Name: pv-analytics</li>\n<li>Storage: 100Mi</li>\n<li>Access modes: ReadWriteMany</li>\n<li>Host Path: /pv/data-analytics</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-yaml을-이용해-hostpath타입-퍼시스턴트-볼륨persistent-volume생성\" style=\"position:relative;\"><a href=\"#2-yaml%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%B4-hostpath%ED%83%80%EC%9E%85-%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume%EC%83%9D%EC%84%B1\" aria-label=\"2 yaml을 이용해 hostpath타입 퍼시스턴트 볼륨persistent volume생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. YAML을 이용해 hostpath타입 퍼시스턴트 볼륨(Persistent Volume)생성</h3>\n<ul>\n<li>hostpath 타입 퍼시스턴트 볼륨 매니페스트 파일의 예시를 복사해둔다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: task-pv-volume\n  labels:\n    type: <span class=\"token builtin class-name\">local</span>\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: <span class=\"token string\">\"/mnt/data\"</span></code></pre></div>\n<br/>\n<ul>\n<li>vi 에디터로 파일 생성 후 문제 요건에 맞게 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> pv-analytics.yaml\n\napiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: pv-analytics\n  labels:\n    type: <span class=\"token builtin class-name\">local</span>\nspec:\n  storageClassName: manual\n  capacity:\n    storage: 100Mi\n  accessModes:\n    - ReadWriteMany\n  hostPath:\n    path: <span class=\"token string\">\"/pv/data-analytics\"</span></code></pre></div>\n<br/>\n<ul>\n<li>작성한 매니페스트 파일을 이용해 PV를  생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  kubectl create -f pv-analytics.yaml \npersistentvolume/pv-analytics created</code></pre></div>\n<br/>\n<ul>\n<li>PV가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get <span class=\"token function\">pv</span>\nNAME           CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE\npv-analytics   100Mi      RWX            Retain           Available           manual                  58s</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>퍼시스턴트 볼륨(Persistent Volume): <a href=\"https://kubernetes.io/ko/docs/concepts/storage/persistent-volumes/\">https://kubernetes.io/ko/docs/concepts/storage/persistent-volumes/</a></li>\n<li>hostPath 타입 PV 생성하기: <a href=\"https://kubernetes.io/ko/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8%EB%B3%BC%EB%A5%A8-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\">https://kubernetes.io/ko/docs/tasks/configure-pod-container/configure-persistent-volume-storage/#퍼시스턴트볼륨-생성하기</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 17, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 1.12 - 퍼시스턴트 볼륨(Persistent Volume: PV) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220517-kubernetes-cka-mock-exam-1-12/"}},"prev":{"id":"721557e4-07d1-5538-bff8-8b463c828aac","html":"<p>파이썬 챌린지를 시작한지 정말 얼마 되지 않은 것 같은데 벌써 중간 미션을 하라는 공지가 왔다.</p>\n<br/>\n<p>출퇴근 + cka 자격증 강의와 함께 병행해야 해서 진도를 많이는 못나가지만 하루에 그래도 1~2강은 꾸준히 들으려고 노력했었는데, 그러다보니 파이썬 기본 문법까지는 거의 다 수강하게 되었다.</p>\n<br/>\n<p>사실 아직 기초적인 문법을 배우는 단계이고 무언가를 만들어본 게 아니라서 Before &#x26; After를 논하기에는 아직 이른 듯 해 강의 후기, 챌린지 회고, 앞으로의 계획 세 파트로 나눠서 포스팅을 해보려 한다.</p>\n<p><br/><br/></p>\n<h1 id=\"1-강의-수강--챌린지-신청-계기\" style=\"position:relative;\"><a href=\"#1-%EA%B0%95%EC%9D%98-%EC%88%98%EA%B0%95--%EC%B1%8C%EB%A6%B0%EC%A7%80-%EC%8B%A0%EC%B2%AD-%EA%B3%84%EA%B8%B0\" aria-label=\"1 강의 수강  챌린지 신청 계기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 강의 수강 &#x26; 챌린지 신청 계기</h1>\n<p><img src=\"/assets/images/2022-05-17-Python-Mid-Review/2022-05-17-Python-Mid-Review1.jpg\" alt=\"2022-05-17-Python-Mid-Review1\"></p>\n<p>내가 수강했던 강의는 “파이썬 웹개발 초격차 패키지 Online”이라는 강의이다.</p>\n<br/>\n<p>사실 나는 이 이전에 백엔드 &#x26; 프론트 엔드 둘 다 사용가능해 범용성이 높다고 생각해 자바스크립트를 배우려고 했었다. 그래서 패스트캠퍼스의 자회사인 제로베이스(Zero-base)에서 자바스크립트 강의를 먼저 수강했었는데, 과제가 단계별로 계단을 밟아가듯 수준이 올라가는 것이 아니라 거의 엘리베이터급으로 훅훅 올라가는 느낌이었고, 수강 중간부터 해당 주차의 강의 진도의 과제가 나오는게 아니라 그 다음주의 강의 진도의 과제가 나와서 진도가 어긋나는 부분이 있어 중도에 하차했었던 마음아픈 기억이 있다.</p>\n<br/>\n<p>그래서 다른 플랫폼을 찾아봐야하나 고민했었는데, 회사에서 같은 팀원분이 “패캠 파이썬 강의 괜찮더라구요~” 라고 말씀주셔서 결제해보았다.</p>\n<br/>\n<p>사실 백엔드에서 파이썬(Django)을 사용하는 회사가 많지 않아서 개인적으로는 선호도가 떨어졌었는데, 다시 생각해보니 파이썬도 꽤나 괜찮은 선택이라는 생각이 들었다. 그 이유는</p>\n<br/>\n<ol>\n<li>예전에 판다스(Pandas)를 아주 조금 만져봐서 그나마 익숙한 언어임</li>\n<li>고수준 언어라 영어에만 익숙하면 코드를 이해하기가 쉽다(고들 함)</li>\n<li>각종 데브옵스 툴에서도 사용되는 언어라 본격적으로 개발에 뛰어들지 않더라도 현재 직무에서 향후 충분히 활용가능함</li>\n</ol>\n<br/>\n<p>라는 생각이 들어서였다. 그렇게 패스트캠퍼스에서 강의를 수강하려고 했는데, 우연히 같은 시기에 캐시백 챌린지를 진행한다는 광고를 패스트캠퍼스 웹사이트에서 봤다. 챌린지 내용을 봤더니 제로베이스처럼 코딩과제가 아니라(코딩과제가 실력 향상에 좋긴 하지만 회사 업무 일정에 따라 과제에 시간을 쏟을 수 없는 경우 매우 곤란했었다) 블로그 포스팅 과제라 꾸준히 공부하는 습관 들이기도 가능하고 크게 부담도 없을 듯 해서 신청해보았다.</p>\n<p><br/><br/></p>\n<h1 id=\"2-강의-후기\" style=\"position:relative;\"><a href=\"#2-%EA%B0%95%EC%9D%98-%ED%9B%84%EA%B8%B0\" aria-label=\"2 강의 후기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 강의 후기</h1>\n<p>그래서 실제 강의 내용은 만족스럽냐 묻는다면…</p>\n<br/>\n<p>자신있게 <strong>만족스럽다!</strong> 라고 대답할 수 있을 듯 하다.</p>\n<br/>\n<p>일단은 강사님께서 비전공자 출신이시라 그런지 개념을 굉장히 알기 쉽게 설명해주신다. 그 중에서도 내가 가장 좋았다고 생각하는 부분은 바로 코드의 개념을 한글로 보여주시는 것.</p>\n<p><img src=\"/assets/images/2022-05-17-Python-Mid-Review/2022-05-17-Python-Mid-Review2.jpg\" alt=\"2022-05-17-Python-Mid-Review2\"></p>\n<p><img src=\"/assets/images/2022-05-17-Python-Mid-Review/2022-05-17-Python-Mid-Review3.jpg\" alt=\"2022-05-17-Python-Mid-Review3\"></p>\n<p>예컨대 딕셔너리의 개념을 설명할 때, 구두로 개념을 설명하고 딕셔너리는 <code class=\"language-text\">stock = {“삼성전자” : 82000, “LG전자” : 150000}</code> 이렇게 쓰는겁니다~ 하고 바로 코딩에 들어가는 것이 아니라, 각 요소가 정확히 어떤 의미인지 <code class=\"language-text\">딕셔너리 = {키1 : 데이터1, 키2 : 데이터2}</code> 라는 형식으로 한글로 코드 요소요소의 의미를 풀어 써주신 뒤에 실제 예시를 들어주셔서 이해하기가 훨씬 수월했다.</p>\n<br/>\n<p>그리고 비전공자들이 어떤 부분에서 힘들어 하시는 지 아시고 중간중간 응원(?)을 해주시거나, 개념 이해가 어려워 실습 문제를 풀기 어려울 때에도 막히면 강의를 들으며 따라해본 뒤, 혼자서 다시 풀어보라고 하시는 등, 코딩초짜들도 강의 중간에 중도포기하지 않고 꾸준히 들을 수 있도록 동기부여를 해주시는 점도 좋았다.</p>\n<p><br/><br/></p>\n<h1 id=\"3-챌린지-회고\" style=\"position:relative;\"><a href=\"#3-%EC%B1%8C%EB%A6%B0%EC%A7%80-%ED%9A%8C%EA%B3%A0\" aria-label=\"3 챌린지 회고 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 챌린지 회고</h1>\n<p><img src=\"/assets/images/2022-05-17-Python-Mid-Review/2022-05-17-Python-Mid-Review4.png\" alt=\"2022-05-17-Python-Mid-Review4\"></p>\n<p>챌린지를 약 한달간 한 소감은 ‘확실히 매일매일 공부하는 습관이 들었다’ 라는 것.</p>\n<br/>\n<p>나는 출퇴근 시간이 오래걸리는 편이라 평일 오전이면 5시 40분 이전, 오후에는 9시 이후에만 시간 확보가 가능해서(그래서 매일 강제 4시~4시반 기상해서 갓생사는중 ^^;;) 이직 후 몇 개월간은 퇴근 후 공부를 거의 못했었는데, 이번 챌린지를 하면서 ‘하루에 최소 한개만 공부하면 된다’라는 생각이 드니 부담감이 없어지면서 매일 꾸준하게 1강 이상은 수강하게 되었다.</p>\n<br/>\n<p>마침 깃허브 블로그도 새로 만든 참이라 블로그 포스팅하면서 깃허브 잔디심는 재미도 꽤 쏠쏠한 편 ㅎㅎ</p>\n<br/>\n<p>그리고 남들이 볼 수 있는 블로그에 업로드하려고 하니 아무래도 혼자 수강할 때보다 조금 더 다듬어서 올리기 때문에 실습문제를 푸는 도중에 예전 개념을 참고할 때에도 유용해서 이번 챌린지를 도전하길 잘했다라는 생각이 들었다.</p>\n<br/>\n<h1 id=\"4-앞으로의-계획\" style=\"position:relative;\"><a href=\"#4-%EC%95%9E%EC%9C%BC%EB%A1%9C%EC%9D%98-%EA%B3%84%ED%9A%8D\" aria-label=\"4 앞으로의 계획 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 앞으로의 계획</h1>\n<p>앞으로의 계획은 1. 남은 챌린지 기간동안의 계획, 2. 챌린지 기간 이후의 계획 두 가지로 나눌 수 있을 것 같다.</p>\n<h2 id=\"1-남은-챌린지-기간-동안의-계획\" style=\"position:relative;\"><a href=\"#1-%EB%82%A8%EC%9D%80-%EC%B1%8C%EB%A6%B0%EC%A7%80-%EA%B8%B0%EA%B0%84-%EB%8F%99%EC%95%88%EC%9D%98-%EA%B3%84%ED%9A%8D\" aria-label=\"1 남은 챌린지 기간 동안의 계획 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 남은 챌린지 기간 동안의 계획</h2>\n<p>남은 챌린지 기간동안에는 가장 먼저 파이썬 문법의 기초강의를 끝까지 수강할 것이다. 그리고 나서는 Part 2. 파이썬 심화 문법을 건너뛴 뒤, Part 3. 웹 &#x26; 프론트엔드 강의를 완강할 예정. 파트 2를 스킵하는 이유는 강사님께서 파트 2는 처음부터 쭉 듣기보다는 크롤링 실습을 진행하며 궁금한 기능들을 하나씩 찾아 듣는 걸 추천하셔서 그대로 해보려고 한다. 다만 남은 챌린지 기간 내에는 파트 3를 완강하는 정도만 진행할 수 있을 듯 해(출퇴근도 있고 다른 자격증도 준비하는게 있어서 추가 시간 확보는 어려울 듯 하다^.ㅠ) 일단은 다음달까지 파트 3를 수강하는 것으로 잡았다.</p>\n<h2 id=\"2챌린지-기간-이후의-계획\" style=\"position:relative;\"><a href=\"#2%EC%B1%8C%EB%A6%B0%EC%A7%80-%EA%B8%B0%EA%B0%84-%EC%9D%B4%ED%9B%84%EC%9D%98-%EA%B3%84%ED%9A%8D\" aria-label=\"2챌린지 기간 이후의 계획 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2.챌린지 기간 이후의 계획</h2>\n<p>챌린지 기간 이후에는 크롤링 프로젝트를 보고 따라하면서 이 <a href=\"http://github.com/brave-people/Dev-Event\">깃허브 레파지토리</a>처럼 구독 서비스도 하나 만들어보려 한다. 아이디어는 대충 구상해뒀는데 구현단계에서 또 바뀔수도 있을 듯.</p>\n<p>그리고 파이썬을 배우는 최종 목표(?)는 Django로 백엔드 구현하는거라 Django 관련 파트까지 쭉 수강하면서 매일 포스팅을 올리려 한다.</p>\n<p>파이썬 공부와 병행해서 지금은 k8s 자격증(CKA)를 공부하고 있지만 이 이후에는 AWS Solution Architect 자격증, 그리고 그 다음에는 DB 공부(와 빼놓을 수 없는 자격증 취득)을 생각하고 있어, 연내에는 토이프로젝트를 하나 진행할 계획.</p>\n<p>좋은 분들 덕분에 운좋게 무경험자가 SI회사에서 데브옵스 직무를 맡게 되어 점점 경험을 쌓아가고있지만, 파이콘이나 다른 컨퍼런스의 연사님들, 블로그의 고수분들의 글을 보니 나도 서비스회사에서 이것저것 만들어보고 개선해서 내가 만든 애플리케이션! 이런 경험을 해보고 싶어져서(물론 지금회사에서도 일정부분 가능하지만) 패캠 강의를 비롯해 열심히 기술스택을 쌓아 1~2년 내에 서비스회사로 커리어 전환을 할 수 있길 바라며 포스팅을 마친다.</p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 17, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 중간미션, 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online 강의 후기","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220517-python-mid-review/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220517-python-day30/","nextSlug":"/220517-kubernetes-cka-mock-exam-1-12/","prevSlug":"/220517-python-mid-review/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}