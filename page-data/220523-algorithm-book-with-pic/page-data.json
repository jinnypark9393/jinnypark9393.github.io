{"componentChunkName":"component---src-templates-blog-template-js","path":"/220523-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"905dcb20-0f11-5415-8ed0-96e1cb839da4","html":"<h1 id=\"제-2장-변수와-배열\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-2%EC%9E%A5-%EB%B3%80%EC%88%98%EC%99%80-%EB%B0%B0%EC%97%B4\" aria-label=\"제 2장 변수와 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 2장 변수와 배열</h1>\n<h2 id=\"19-2차원-배열의-각-요소는-2개의-첨자로-구별한다\" style=\"position:relative;\"><a href=\"#19-2%EC%B0%A8%EC%9B%90-%EB%B0%B0%EC%97%B4%EC%9D%98-%EA%B0%81-%EC%9A%94%EC%86%8C%EB%8A%94-2%EA%B0%9C%EC%9D%98-%EC%B2%A8%EC%9E%90%EB%A1%9C-%EA%B5%AC%EB%B3%84%ED%95%9C%EB%8B%A4\" aria-label=\"19 2차원 배열의 각 요소는 2개의 첨자로 구별한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>19. 2차원 배열의 각 요소는 2개의 첨자로 구별한다</h2>\n<ul>\n<li>2차원 배열에서는 행과 열에 대해 각각 ‘0’(또는 ‘1’)로 시작하는 요소번호를 붙여 교차점에 있는 배열요소를 가리킨다.</li>\n<li>예시\n<ul>\n<li>배열명[행 요소번호][열 요소번호] ⇒ ARRAY[2][6]</li>\n<li>배열명(행 요소번호)(열 요소번호) ⇒ ARRAY(2)(6)</li>\n<li>배열명[행 요소번호, 열 요소번호] ⇒ ARRAY[2, 6]</li>\n<li>배열명(행 요소번호, 열 요소번호) ⇒ ARRAY(2, 6)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"20-문자열은-문자-데이터의-배열이다\" style=\"position:relative;\"><a href=\"#20-%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%80-%EB%AC%B8%EC%9E%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%EB%B0%B0%EC%97%B4%EC%9D%B4%EB%8B%A4\" aria-label=\"20 문자열은 문자 데이터의 배열이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>20. 문자열은 문자 데이터의 배열이다</h2>\n<ul>\n<li>문자열은 각 요소에 문자가 저장된 문자 타입 배열이다.</li>\n<li>예: 문자열 ‘ABC’: 문자타입 데이터를 저장할 수 있는 배열의 1번째 요소에 문자 ‘A’, 2번째 요소에 문자 ‘B’, 3번째 요소에 문자 ‘C’가 저장된 것이다.</li>\n</ul>\n<p><br/><br/></p>","excerpt":"제 2장 변수와 배열 19. 2차원 배열의 각 요소는 2개의 첨자로 구별한다 2차원 배열에서는 행과 열에 대해 각각 ‘0’(또는 ‘1’)로 시작하는 요소번호를 붙여 교차점에 있는 배열요소를 가리킨다. 예시 배열명[행 요소번호][열 요소번호] ⇒ ARRAY[2][6] 배열명(행 요소번호)(열 요소번호) ⇒ ARRAY(2)(6) 배열명[행 요소번호, 열 요소번호] ⇒ ARRAY[2, 6] 배열명(행 요소번호, 열 요소번호) ⇒ ARRAY(2, 6) 20. 문자열은 문자 데이터의 배열이다 문자열은 각 요소에 문자가 저장된 문자 타입 배열이다. 예: 문자열 ‘ABC’: 문자타입 데이터를 저장할 수 있는 배열의 1번째 요소에 문자 ‘A’, 2번째 요소에 문자 ‘B’, 3번째 요소에 문자 ‘C’가 저장된 것이다.","frontmatter":{"date":"May 23, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(7)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220523-algorithm-book-with-pic/"}},"next":{"id":"f9dd679f-ac3d-5bdb-88ca-fac0004aa523","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 12-3. 블로그 프로젝트 - 게시물 로딩 기능 구현을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo1.JPG\" alt=\"2022-05-23-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo2.JPG\" alt=\"2022-05-23-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"03-블로그-게시글-로딩하기\" style=\"position:relative;\"><a href=\"#03-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EB%A1%9C%EB%94%A9%ED%95%98%EA%B8%B0\" aria-label=\"03 블로그 게시글 로딩하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 블로그 게시글 로딩하기</h1>\n<h2 id=\"1-프로그램-기능-구현하기\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"1 프로그램 기능 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로그램 기능 구현하기</h2>\n<ul>\n<li>\n<p>게시글 로딩하기 기능의 의사 코드(Pseudo Code)를 작성해보자.</p>\n<ul>\n<li>**의사코드(Pseudo Code)**란? 직역하면 가짜(Pseudo) 코드라는 뜻으로, 프로그램 코드를 작성하기위해 프로그램의 진행 과정을 단계별로 기록해 놓은 것.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 게시글 로딩하기</span>\n\ndata.csv 파일이 있으면\n    게시글을 로딩한다.\ndata.csv 파일이 없으면\n    data.csv파일을 만든다.\n\n<span class=\"token comment\"># 게시글 로딩 기능</span>\ndata.csv 파일을 읽는다.\n데이터 한 줄마다\n    Post 인스턴스를 만든다.\n    Post 리스트에 인스턴스를 저장한다.</code></pre></div>\n<ul>\n<li>게시글 로딩 예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>, 파이썬 공부 <span class=\"token number\">2</span>일차, 연산 배웠다, <span class=\"token number\">2</span>\n<span class=\"token number\">2</span>, 파이썬 공부 <span class=\"token number\">3</span>일차, 조건문 배웠다, <span class=\"token number\">0</span></code></pre></div>\n</li>\n</ul>\n<h2 id=\"2-코드-구현\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 구현</h2>\n<ul>\n<li>위에서 의사코드로 작성한 내용을 실제 코드로 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    pass\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>파일유무를 체크하기 위해 os.path.exists 모듈을 활용한다: os 모듈을 import한 뒤 사용할 수 있음</p>\n</li>\n<li>\n<p>파일 생성 ⇒ open 함수를 이용해 생성. newline은 윈도우 환경일 때 추가할 것.</p>\n</li>\n<li>\n<p>실행결과: data.csv 파일이 Chapter12 폴더 하위에 생성된다.</p>\n<p><img src=\"/assets/images/2022-05-23-Python-Photo/2022-05-23-Python-Photo3.png\" alt=\"2022-05-23-Python-Photo3.png\"></p>\n<ul>\n<li>file not found 에러가 발생한 경우 경로 설정을 다시 확인해보자.</li>\n</ul>\n</li>\n<li>\n<p>테스트를 위해 data.csv 파일에 데이터를 넣어준다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">1</span>,테스트,테스트입니다</code></pre></div>\n<ul>\n<li>게시글 로딩을 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        print<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>위의 코드가 이해가 되지 않는다면 <strong>파일 입출력</strong> 파트의 <strong>csv 입출력 강의</strong>를 복습하고 오자.</p>\n</li>\n<li>\n<p>csv.reader는 순회 가능한 함수 ⇒ for in 문을 사용해 데이터를 한줄씩 리스트 형태로 뽑아와 data객체에 저장할 수 있다.</p>\n</li>\n<li>\n<p>지금까지 만든 부분을 출력해보자.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span><span class=\"token string\">'1'</span>, <span class=\"token string\">'테스트'</span>, <span class=\"token string\">'테스트입니다'</span>, <span class=\"token string\">'0'</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'2'</span>, <span class=\"token string\">'테스트2'</span>, <span class=\"token string\">'테스트입니다2'</span>, <span class=\"token string\">'0'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>\n<p>게시글을 리스트 형태로 잘 받아오는 것을 확인할 수 있다. 이제 인덱스를 이용해 각 데이터에 접근할 수 있다.</p>\n</li>\n<li>\n<p>지금까지 구현된 코드를 확인해보자.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 게시글 로딩하기</span>\n\ndata.csv 파일이 있으면 <span class=\"token comment\"># 구현 완료</span>\n    게시글을 로딩한다. <span class=\"token comment\"># 구현중</span>\ndata.csv 파일이 없으면 <span class=\"token comment\"># 구현 완료</span>\n    data.csv파일을 만든다. <span class=\"token comment\"># 구현중</span>\n\n<span class=\"token comment\"># 게시글 로딩 기능</span>\ndata.csv 파일을 읽는다. <span class=\"token comment\"># 구현 완료</span>\n데이터 한 줄마다 <span class=\"token comment\"># 구현 완료(데이터 한 줄씩 리스트 형태로 불러오기)</span>\n    Post 인스턴스를 만든다. <span class=\"token comment\"># 구현해야 함</span>\n    Post 리스트에 인스턴스를 저장한다. <span class=\"token comment\"># 구현해야 함</span></code></pre></div>\n<ul>\n<li>post 객체를 저장할 리스트를 생성하고 post 객체를 불러온다(이해가 되지 않을 경우 <strong>모듈과 패키지</strong> 강의를 복습하자)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        print<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>Post 객체를 생성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>print문으로 post_list를 확인하면 2개의 객체가 담겨있는 것을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n<span class=\"token punctuation\">[</span><span class=\"token operator\">&lt;</span>post.Post object at 0x104ddea7<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span>, <span class=\"token operator\">&lt;</span>post.Post object at 0x104eece2<span class=\"token operator\"><span class=\"token file-descriptor important\">0</span>></span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>post_list에 저장된 첫번째 객체에서 get_title 메서드를 호출해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nprint<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>.get_title<span class=\"token punctuation\">(</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># 호출 부분</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n테스트</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 블로그의 게시물 로딩 기능을 구현해보았다. 다음 포스팅에서는 메뉴 출력하기, 게시글 쓰기 기능을 구현하도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 23, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 36일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220523-python-day36/"}},"prev":{"id":"62207d43-714c-55b0-a7c9-cd25e0e0c8d3","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 12-4. 메뉴 출력하기, 글쓰기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-24-Python-Photo/2022-05-24-Python-Photo1.jpg\" alt=\"2022-05-24-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-24-Python-Photo/2022-05-24-Python-Photo2.jpg\" alt=\"2022-05-24-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"4-1-블로그-메뉴-출력하기\" style=\"position:relative;\"><a href=\"#4-1-%EB%B8%94%EB%A1%9C%EA%B7%B8-%EB%A9%94%EB%89%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0\" aria-label=\"4 1 블로그 메뉴 출력하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-1. 블로그 메뉴 출력하기</h1>\n<h2 id=\"1-프로젝트-설계\" style=\"position:relative;\"><a href=\"#1-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%A4%EA%B3%84\" aria-label=\"1 프로젝트 설계 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 프로젝트 설계</h2>\n<ul>\n<li>프로그램 기능 설계\n<ul>\n<li>게시글 로딩하기 (완료)</li>\n<li><strong>메뉴 출력하기</strong> (이번 강의에서 다룰 내용)</li>\n<li><strong>게시글 쓰기</strong> (이번 강의에서 다룰 내용)</li>\n<li>게시글 목록 확인하기</li>\n<li>게시글 상세 확인하기</li>\n<li>게시글 수정하기</li>\n<li>게시글 삭제하기</li>\n<li>게시글 저장하기</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-메뉴-출력하기-결과물-예시\" style=\"position:relative;\"><a href=\"#2-%EB%A9%94%EB%89%B4-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0-%EA%B2%B0%EA%B3%BC%EB%AC%BC-%EC%98%88%EC%8B%9C\" aria-label=\"2 메뉴 출력하기 결과물 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 메뉴 출력하기 결과물 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- CANARY BLOG -\n- 메뉴를 선택해 주세요 -\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span></code></pre></div>\n<ul>\n<li>메뉴를 출력하기 까지만 진행할 것(메뉴별 기능 구현은 뒤의 강의에서 다룰 예정)</li>\n<li>숫자 1,2,3외의 숫자를 입력할 경우 ⇒ 다시 메뉴 출력</li>\n<li>문자 입력 시 ⇒ 예외처리가 필요</li>\n<li>해당 기능 구현은 실습문제 5.3.2와 유사하다(while True라는 무한반복문 사용).</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-기능-구현\" style=\"position:relative;\"><a href=\"#3-%EA%B8%B0%EB%8A%A5-%EA%B5%AC%ED%98%84\" aria-label=\"3 기능 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 기능 구현</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token builtin class-name\">break</span></code></pre></div>\n<ul>\n<li>먼저 메뉴를 출력해준 뒤, 입력값에 따라 표시되는 출력문을 분기한다(3이 나올경우 break로 프로그램 종료)</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># 1번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">1</span>\n게시글 쓰기\n\n<span class=\"token comment\"># 2번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">2</span>\n게시글 목록\n\n<span class=\"token comment\"># 3번 선택</span>\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token number\">3</span>\n프로그램 종료</code></pre></div>\n<br/>\n<ul>\n<li>문자열 입력시에는 아래와 같이 에러가 발생한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> aa\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:\n  File <span class=\"token string\">\"/Users/usr/Documents/python_basic/myvenv/Chapter12/main.py\"</span>, line <span class=\"token number\">33</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\nValueError: invalid literal <span class=\"token keyword\">for</span> int<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> with base <span class=\"token number\">10</span>: <span class=\"token string\">'aa'</span></code></pre></div>\n<ul>\n<li>예외 처리가 필요한 상황.</li>\n</ul>\n<br/>\n<ul>\n<li>try-except 구문으로 예외처리하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    try:\n        choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    except ValueError:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    else:\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 목록\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin class-name\">break</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic /Users/usr/Documents\n/python_basic/myvenv/bin/python /Users/usr/Do\ncuments/python_basic/myvenv/Chapter12/main.py\n게시글 로딩중<span class=\"token punctuation\">..</span>.\n\n- CANARY BLOG\n- 메뉴를 선택해 주세요\n<span class=\"token number\">1</span>. 게시글 쓰기\n<span class=\"token number\">2</span>. 게시글 목록\n<span class=\"token number\">3</span>. 프로그램 종료\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> aa\n숫자를 입력해 주세요</code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"4-2-게시글-쓰기\" style=\"position:relative;\"><a href=\"#4-2-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%93%B0%EA%B8%B0\" aria-label=\"4 2 게시글 쓰기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4-2. 게시글 쓰기</h1>\n<h2 id=\"1-게시글-쓰기-결과-화면-예시\" style=\"position:relative;\"><a href=\"#1-%EA%B2%8C%EC%8B%9C%EA%B8%80-%EC%93%B0%EA%B8%B0-%EA%B2%B0%EA%B3%BC-%ED%99%94%EB%A9%B4-%EC%98%88%EC%8B%9C\" aria-label=\"1 게시글 쓰기 결과 화면 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 게시글 쓰기 결과 화면 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">- 게시글 쓰기 - \n제목을 입력해 주세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>\n파이썬 공부 <span class=\"token number\">1</span>일차\n본문을 입력해 주세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>\n자료형 변수 배웠다\n<span class=\"token comment\"># 게시글이 등록되었습니다.</span></code></pre></div>\n<ul>\n<li>게시글 등록 기능\n<ol>\n<li>Post 인스턴스 생성</li>\n<li>Post 리스트에 저장</li>\n</ol>\n</li>\n<li>Post 인스턴스\n<ol>\n<li>글번호 ⇒ <strong>어떻게 처리?</strong></li>\n<li>제목 ⇒ 입력값 받기</li>\n<li>내용 ⇒ 입력값 받기</li>\n<li>조회수 ⇒ 초기 값 0</li>\n</ol>\n<ul>\n<li>마지막 글번호 ⇒ 현재 post_list의 마지막 요소의 id값 +1</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-코드-구현\" style=\"position:relative;\"><a href=\"#2-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"2 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 코드 구현</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">import</span> os\n<span class=\"token function\">import</span> csv\nfrom post <span class=\"token function\">import</span> Post\n\n<span class=\"token comment\"># 파일 경로</span>\nfile_path <span class=\"token operator\">=</span> <span class=\"token string\">\"./myvenv/Chapter12/data.csv\"</span> <span class=\"token comment\"># data.csv 파일 경로를 변수로 지정해준다.</span>\n\n<span class=\"token comment\"># post 객체를 저장할 리스트 생성</span>\npost_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># data.csv 파일이 있다면</span>\n<span class=\"token keyword\">if</span> os.path.exists<span class=\"token punctuation\">(</span>file_path<span class=\"token punctuation\">)</span>: <span class=\"token comment\"># 결과로 true를 반환한다</span>\n    <span class=\"token comment\"># 게시글 로딩</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"게시글 로딩중...\"</span><span class=\"token punctuation\">)</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"r\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span>\n    reader <span class=\"token operator\">=</span> csv.reader<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">data</span> <span class=\"token keyword\">in</span> reader:\n        <span class=\"token comment\"># post 인스턴스 생성하기</span>\n        post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>, data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>, int<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">))</span> <span class=\"token comment\"># Post 인스턴스를 생성해 post 객체에 담아준다.</span>\n        post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\nelse:\n    <span class=\"token comment\"># 파일 생성하기</span>\n    f <span class=\"token operator\">=</span> open<span class=\"token punctuation\">(</span>file_path, <span class=\"token string\">\"w\"</span>, <span class=\"token assign-left variable\">encoding</span><span class=\"token operator\">=</span><span class=\"token string\">\"utf8\"</span>, <span class=\"token assign-left variable\">newline</span><span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span>\n    f.close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 쓰기</span>\ndef write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 쓰기 함수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- 게시글 쓰기 -\"</span><span class=\"token punctuation\">)</span>\n    title <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"제목을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    content <span class=\"token operator\">=</span> input<span class=\"token punctuation\">(</span><span class=\"token string\">\"내용을 입력해 주세요<span class=\"token entity\" title=\"\\n\">\\n</span>>>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\"># 글번호</span>\n    <span class=\"token function\">id</span> <span class=\"token operator\">=</span> post_list<span class=\"token punctuation\">[</span>-1<span class=\"token punctuation\">]</span>.get_id<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> + <span class=\"token number\">1</span>\n    post <span class=\"token operator\">=</span> Post<span class=\"token punctuation\">(</span>id, title, content, <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    post_list.append<span class=\"token punctuation\">(</span>post<span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"# 게시글이 등록되었습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 게시글 목록</span>\ndef list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>:\n    <span class=\"token string\">\"\"</span>\"게시글 목록 횟수<span class=\"token string\">\"\"</span>\"\n    print<span class=\"token punctuation\">(</span>post_list<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 메뉴 출력하기</span>\n<span class=\"token keyword\">while</span> True:\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"<span class=\"token entity\" title=\"\\n\">\\n</span><span class=\"token entity\" title=\"\\n\">\\n</span>- CANARY BLOG\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"- 메뉴를 선택해 주세요\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"1. 게시글 쓰기\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"2. 게시글 목록\"</span><span class=\"token punctuation\">)</span>\n    print<span class=\"token punctuation\">(</span><span class=\"token string\">\"3. 프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n    try:\n        choice <span class=\"token operator\">=</span> int<span class=\"token punctuation\">(</span>input<span class=\"token punctuation\">(</span><span class=\"token string\">\">>> \"</span><span class=\"token punctuation\">))</span>\n    except ValueError:\n        print<span class=\"token punctuation\">(</span><span class=\"token string\">\"숫자를 입력해 주세요\"</span><span class=\"token punctuation\">)</span>\n    else:\n        <span class=\"token keyword\">if</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">1</span>:\n            write_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">2</span>:\n            list_post<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> choice <span class=\"token operator\">==</span> <span class=\"token number\">3</span>:\n            print<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램 종료\"</span><span class=\"token punctuation\">)</span>\n            <span class=\"token builtin class-name\">break</span></code></pre></div>\n<ul>\n<li>블로그 메뉴 출력: while True ~ break 함수를 정의해 구현\n<ul>\n<li>숫자 대신 문자열 입력값이 들어올 경우 “숫자를 입력해 주세요”라는 에러메시지 출력(try~except를 사용해 구현)</li>\n</ul>\n</li>\n<li>게시글 쓰기 기능: write_post() 함수를 정의해 구현\n<ul>\n<li>id라는 변수를 정의해 구현(리스트의 마지막 id에서 1을 더한 것)</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 진행할 프로젝트의 메뉴 출력과 글쓰기 기능에 대해 알아보았다. 다음 포스팅에서는 먼저 블로그 프로젝트의 게시글 목록, 상세를 구현해보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 24, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 37일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220524-python-day37/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220523-algorithm-book-with-pic/","nextSlug":"/220523-python-day36/","prevSlug":"/220524-python-day37/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}