{"componentChunkName":"component---src-templates-blog-template-js","path":"/220616-kubernetes-hpa-unknown-error/","result":{"data":{"cur":{"id":"eaf28a92-78b0-5f4c-83c5-0a0fdcdcc410","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>컨테이너 전환 프로젝트 진행 중 운영 파드들에는 리소스 사용량이 증가하면 스케일아웃(scale-out)을 하도록 HPA를 설정해두었었는데, HPA에서 일부 파드의 현재 메트릭을 수집하지 못해 <code class=\"language-text\">Unknown</code> 상태로 떠있게 되었다. 이렇게 될 경우 실제 사용 HPA에서 설정해 둔 리소스의 임계값을 넘게 되어도 오토 스케일링이 작동하지 않게되는 문제가 발생한다.</p>\n<br/>\n<ul>\n<li>HPA(Horizontal Pod Autoscaler): 리소스 사용량에 따라 쿠버네티스의 워크로드 리소스(디플로이먼트 혹은 스테이트풀셋)를 스케일 아웃(scale-out)하는 오브젝트. 참고로 daemonset은 HPA설정이 불가하다.</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h1>\n<p>경험 상 HPA의 현재 메트릭이 <code class=\"language-text\">Unknown</code> 상태로 빠지는 건 아래의 두 가지 경우 중 하나였다.</p>\n<br/>\n<h2 id=\"1-deployment-replicationcontroller-statefulset의-replica가-0인-경우\" style=\"position:relative;\"><a href=\"#1-deployment-replicationcontroller-statefulset%EC%9D%98-replica%EA%B0%80-0%EC%9D%B8-%EA%B2%BD%EC%9A%B0\" aria-label=\"1 deployment replicationcontroller statefulset의 replica가 0인 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Deployment, ReplicationController, Statefulset의 replica가 0인 경우</h2>\n<p>HPA는 쿠버네티스의 metrics-server로부터 받은 현재 리소스 사용량 데이터를 기준으로 오토스케일링을 진행하게 되는데, replica가 0으로 Pod가 아예 뜨지 않은 경우 사용량 데이터를 집계할 대상이 존재하지 않기 때문에 현재 리소스 사용량이 Unknown 상태가 된다.</p>\n<br/>\n<p>따라서 HPA가 동작하지 않게 되며, HPA에서 설정한 min(replica수) 값에 영향을 받지 않고 파드 개수가 그대로 0으로 남게 된다.</p>\n<br/>\n<p>만약 replicas를 0으로 설정한 것이 파드 수를 0으로 바꾸는 것이 원래 목적이었다면 그대로 두면 되고, 아니라면 원하는 파드 수만큼 replica 수를 Deployment(혹은 ReplicationController / Statefulset) 원하는 값으로 변경하면 된다.</p>\n<h2 id=\"2-pod의-requested-cpumemory--0이거나-존재하지-않는-경우\" style=\"position:relative;\"><a href=\"#2-pod%EC%9D%98-requested-cpumemory--0%EC%9D%B4%EA%B1%B0%EB%82%98-%EC%A1%B4%EC%9E%AC%ED%95%98%EC%A7%80-%EC%95%8A%EB%8A%94-%EA%B2%BD%EC%9A%B0\" aria-label=\"2 pod의 requested cpumemory  0이거나 존재하지 않는 경우 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Pod의 requested CPU/memory = 0이거나 존재하지 않는 경우</h2>\n<p>두번째 경우가 이번에 경험한 상황인데, Metrics Server에서는 requested resource, HPA를 설정할 때 최소 리소스 요청값인 <strong><code class=\"language-text\">requested</code> 항목의 값이 존재하지 않거나 0인 경우</strong>, 메트릭 서버에서 현재 메트릭을 수집하지 않게 되어 HPA에서의 현재 리소스 사용률이 <code class=\"language-text\">Unknown</code>으로 표시된다(상세 내용은 <a href=\"https://github.com/kubernetes-sigs/metrics-server/blob/master/KNOWN_ISSUES.md#hpa-is-unable-to-get-resource-utilization\">링크 참조</a>).</p>\n<br/>\n<p>이 때 클러스터의 Events를 확인하게 되면 아래와 같은 메시지가 발생하게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">failed <span class=\"token keyword\">to</span> get memory utilization: missing request <span class=\"token keyword\">for</span> memory</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">failed <span class=\"token keyword\">to</span> get memory utilization: missing request <span class=\"token keyword\">for</span> cpu</code></pre></div>\n<br/>\n<p>이렇게 현재 메트릭을 수집할 수 없는 경우 HPA에 설정한 임계값보다 실제 리소스 사용량이 많아졌다고 하더라도 HPA가 작동하지 않기 때문에 Pod의 리소스가 부족해 질 수 있다.</p>\n<br/>\n<p>내가 requested 리소스를 0으로 줄인 이유는 노드에 할당된 파드들의 requested cpu의 총 합에 새로 생성한 Pod의 requested cpu를 더했을 때 노드에서 수용가능한 cpu를 넘어섰기 때문이다. requested cpu를 1로 설정했을 때 pod가 노드에 스케줄 되지 못하고 pending 상태에 빠졌기 때문에 임시로 0으로 줄인 것이다.</p>\n<p>하지만 쿠버네티스에서는 <a href=\"https://kubernetes.io/ko/docs/concepts/configuration/manage-resources-containers/#:~:text=CPU%20%EB%A6%AC%EC%86%8C%EC%8A%A4%20%EB%8B%A8%EC%9C%84,%EA%B0%80%EC%83%81%20%EC%BD%94%EC%96%B4%20%EC%97%90%20%ED%95%B4%EB%8B%B9%ED%95%9C%EB%8B%A4\">cpu단위를 밀리코어 기준으로도 설정할 수 있어</a>, <strong>0 대신 500m 등의 형식으로 입력하여 현재 리소스 사용량 메트릭을 메트릭서버가 수집할 수 있도록 할 수 있다</strong>(물론 노드 리소스가 지속적으로 부족할 경우 불필요하게 노드 리소스를 점유하고 있는 Pod나 다른 리소스가 없는지, 혹은 노드 용량 자체를 늘려야 할지에 대한 고민이 필요할 것이다).</p>\n<br/>\n<p>참고로 쿠버네티스에서 사용하는 cpu, 메모리 리소스 단위는 아래와 같다.</p>\n<ul>\n<li>\n<p>CPU</p>\n<ul>\n<li>1.0 CPU (Core) = 1,000m (Milicore)</li>\n</ul>\n</li>\n<li>\n<p>Memory</p>\n<ol>\n<li>\n<p>E, P, T, G, M, k(바이트)</p>\n</li>\n<li>\n<p>Ei, Pi, Ti, Gi, Mi, Ki(바이트)</p>\n</li>\n</ol>\n</li>\n</ul>\n<br/>\n<br/>\n<h1 id=\"3-참고-자료\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-%EC%9E%90%EB%A3%8C\" aria-label=\"3 참고 자료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 자료</h1>\n<ul>\n<li><a href=\"https://github.com/kubernetes-sigs/metrics-server/blob/master/KNOWN_ISSUES.md#hpa-is-unable-to-get-resource-utilization\">https://github.com/kubernetes-sigs/metrics-server/blob/master/KNOWN_ISSUES.md#hpa-is-unable-to-get-resource-utilization</a></li>\n<li><a href=\"https://kubernetes.io/ko/docs/concepts/configuration/manage-resources-containers/#:~:text=CPU%20%EB%A6%AC%EC%86%8C%EC%8A%A4%20%EB%8B%A8%EC%9C%84,%EA%B0%80%EC%83%81%20%EC%BD%94%EC%96%B4%20%EC%97%90%20%ED%95%B4%EB%8B%B9%ED%95%9C%EB%8B%A4\">https://kubernetes.io/ko/docs/concepts/configuration/manage-resources-containers/#:~:text=CPU 리소스 단위,가상 코어 에 해당한다</a>.</li>\n</ul>","excerpt":"1. 배경 상황 컨테이너 전환 프로젝트 진행 중 운영 파드들에는 리소스 사용량이 증가하면 스케일아웃(scale-out)을 하도록 HPA를 설정해두었었는데, HPA에서 일부 파드의 현재 메트릭을 수집하지 못해  상태로 떠있게 되었다. 이렇게 될 경우 실제 사용 HPA에서 설정해 둔 리소스의 임계값을 넘게 되어도 오토 스케일링이 작동하지 않게되는 문제가 발생한다. HPA(Horizontal Pod Autoscaler): 리소스 사용량에 따라 쿠버네티스의 워크로드 리소스(디플로이먼트 혹은 스테이트풀셋)를 스케일 아웃(scale-out)하는 오브젝트. 참고로 daemonset은 HPA설정이 불가하다.  2. 해결 방법 경험 상 HPA의 현재 메트릭이  상태로 빠지는 건 아래의 두 가지 경우 중 하나였다. 1. Deployment, ReplicationController, Statefulset의 replica가 0인 경우 HPA는 쿠버네티스의 metrics-server로부터 받은 현재 리소…","frontmatter":{"date":"June 16, 2022","title":"쿠버네티스(Kubernetes) HPA “failed to get memory utilization: missing request for memory” / Pod의 current metric = Unknown 에러 해결","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220616-kubernetes-hpa-unknown-error/"}},"next":{"id":"c7e0ce65-91c2-5ada-9ad9-65767ec8cd01","html":"<ul>\n<li>참고: 쿠버네티스 한글화에 참여하려고 번역했던 문서이나 중복으로 업로드 하지 않음.</li>\n</ul>\n<h1 id=\"kubernetes번역---파드-디버그\" style=\"position:relative;\"><a href=\"#kubernetes%EB%B2%88%EC%97%AD---%ED%8C%8C%EB%93%9C-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"kubernetes번역   파드 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[Kubernetes]번역 - 파드 디버그</h1>\n<ul>\n<li>원문: <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/\">https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/</a></li>\n</ul>\n<p>이 가이드는 쿠버네티스에 배포되었으나 제대로 동작하지 않는 애플리케이션을 디버깅하는 유저들을 돕기 위한 것이다. 이 문서는 클러스터를 디버깅하고 싶어하는 사람들을 위한 가이드가 아니다. 클러스터 디버깅을 위해서는 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-cluster/\">이 가이드</a>를 확인하자.</p>\n<h1 id=\"문제를-진단\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%A7%84%EB%8B%A8\" aria-label=\"문제를 진단 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제를 진단</h1>\n<p>트러블슈팅의 첫 단계는 분류이다. 무엇이 문제일까? 파드일까? 레플리케이션 컨트롤러일까? 아니면 서비스일까?</p>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-pods\">파드 디버그</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-replication-controllers\">레플리케이션 컨트롤러 디버그</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-services\">서비스 디버그</a></li>\n</ul>\n<h2 id=\"파드-디버그\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"파드 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드 디버그</h2>\n<p>파드를 디버깅할 떄의 첫 단계는 파드를 살펴보는 것이다. 파드의 현재 상태와 최근 이벤트들을 다음 명령어로 확인하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl describe pods <span class=\"token variable\">${POD_NAME}</span></code></pre></div>\n<p>파드 내 컨테이너들의 상태를 확인한다. 모두 <code class=\"language-text\">Running</code>인가? 최근에 재시작이 있었는가?</p>\n<p>파드의 상태에 따라 계속 디버깅하라.</p>\n<h2 id=\"파드가-여전히-pending-상태\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%97%AC%EC%A0%84%ED%9E%88-pending-%EC%83%81%ED%83%9C\" aria-label=\"파드가 여전히 pending 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 여전히 pending 상태</h2>\n<p>만약 파드가 <code class=\"language-text\">Pending</code> 상태에 빠져 있다면, 이것은 노드에 스케줄링 될 수 없다는 뜻이다. 일반적으로 이것은 어떠한 형태로든 스케줄링을 막는 충분치 않은 리소스가 있기 때문이다. 위의 <code class=\"language-text\">kubectl describe …</code> 명령어의 결과를 살펴본다. 스케줄러로부터 왜 파드가 스케줄 되지 못했는지 메시지가 있을 것이다. 이유들은 다음을 포함한다.</p>\n<ul>\n<li><strong>충분한 리소스를 갖고있지 않다</strong>: 클러스터의 CPU 혹은 메모리 공급을 소진했을 수 있다. 이 경우 파드를 삭제하거나, 리소스 요청을 조정하거나, 클러스터에 신규 노드를 추가해야한다. 더 많은 정보를 위해 <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">컴퓨팅 리소스 문서</a>를 확인하자.</li>\n<li><strong><code class=\"language-text\">hostPort</code> 를 사용중이다</strong>: 파드를 <code class=\"language-text\">hostPort</code> 에 바인딩한 경우 파드가 스케줄 될 수 있는 개수가 한정된다. 대부분의 경우, <code class=\"language-text\">hostPort</code> 는 불필요하므로, 파드를 노출하기 위해 서비스 오브젝트를 사용해보자. 만약 <code class=\"language-text\">hostPort</code>가 정말 필요할 경우 쿠버네티스 클러스터의 노드 수만큼만 파드를 스케줄링할 수 있다.</li>\n</ul>\n<h2 id=\"파드가-여전히-waiting-상태\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%97%AC%EC%A0%84%ED%9E%88-waiting-%EC%83%81%ED%83%9C\" aria-label=\"파드가 여전히 waiting 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 여전히 waiting 상태</h2>\n<p>파드가 <code class=\"language-text\">Waiting</code> 상태에 빠져있다면, 파드는 워커노드에 스케줄되었으나 해당 머신에서 동작하지 못하는 것이다. 다시 말하지만, <code class=\"language-text\">kubectl describe …</code> 가 도움이 될 것이다. <code class=\"language-text\">Waiting</code> 파드의 가장 일반적인 원인은 파드가 이미지를 당겨오는 데에 실패한 것이다. 세 가지 확인 사항이 있다.</p>\n<ul>\n<li>이미지 이름이 올바른지 확인한다.</li>\n<li>이미지를 레지스트리로 푸쉬했는가?</li>\n<li>이미지를 당겨올 수 있는지 여부를 보기 위해 매뉴얼로 이미지를 당겨오자. 만약 PC의 도커를 사용할 경우, <code class=\"language-text\">docker pull &lt;image></code> 를 실행하자.</li>\n</ul>\n<h2 id=\"파드가-충돌했거나-unhealthy\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%B6%A9%EB%8F%8C%ED%96%88%EA%B1%B0%EB%82%98-unhealthy\" aria-label=\"파드가 충돌했거나 unhealthy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 충돌했거나 unhealthy</h2>\n<p>파드가 스케줄링 된 후에는 디버그를 위해 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/\">동작중인 파드 디버그</a>를 이용할 수 있다.</p>\n<h2 id=\"파드가-running-상태이나-명령한대로-실행되지-않음\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-running-%EC%83%81%ED%83%9C%EC%9D%B4%EB%82%98-%EB%AA%85%EB%A0%B9%ED%95%9C%EB%8C%80%EB%A1%9C-%EC%8B%A4%ED%96%89%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%8C\" aria-label=\"파드가 running 상태이나 명령한대로 실행되지 않음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 running 상태이나 명령한대로 실행되지 않음</h2>\n<p>만약 파드가 예상한대로 동작하지 않는다면, 파드 설명 상 에러가 있었으나(예: 로컬머신의 <code class=\"language-text\">mypod.yaml</code> 파일), 해당 에러가 파드를 생성할 때 조용히 무시 당했을 수 있다. 종종 파드 설명 섹션이 잘못되거나, 네 이름이 잘못 타이핑 되는 등의 이유로 키가 무시된다. 예를 들면, 만약 <code class=\"language-text\">command</code> 를 <code class=\"language-text\">commnd</code> 로 스펠링을 잘못 입력하면 파드가 생성되나 사용하려고 의도했던 명령줄이 사용되지 않을 것이다.</p>\n<p>첫번째로 해야할 것은 파드를 삭제하고 <code class=\"language-text\">—validate</code> 옵션과 함께 재생성해보는 것이다. 예를 들어, <code class=\"language-text\">kubectl apply —validate -f mypod.yaml</code> 을 실행한다. 만약 <code class=\"language-text\">command</code>를 <code class=\"language-text\">commnd</code>로 스펠링을 잘못 입력했다면 아래와 같은 에러가 발생할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">I0805 <span class=\"token number\">10</span>:43:25.129850   <span class=\"token number\">46757</span> schema.go:126<span class=\"token punctuation\">]</span> unknown field: commnd\nI0805 <span class=\"token number\">10</span>:43:25.129973   <span class=\"token number\">46757</span> schema.go:129<span class=\"token punctuation\">]</span> this may be a <span class=\"token boolean\">false</span> alarm, see https://github.com/kubernetes/kubernetes/issues/6842\npods/mypod</code></pre></div>\n<p>다음으로 확인할 사항은 apiserver에 있는 파드가 원래 만드려고 했던 파드와의 일치여부이다(예: 로컬머신의 YAML파일). 예를 들어, <code class=\"language-text\">kubectl get pods/mypod -o yaml > mypod-on-apiserver.yaml</code> 을 실행하고 수동으로 오리지널 파드인 <code class=\"language-text\">mypod.yaml</code> 의 설명과 apiserver로부터 받은 <code class=\"language-text\">mypod-on-apiserver.yaml</code> 를 비교한다. “apiserver”버전에는 일반적으로 오리지널 버전에 없는 몇 줄이 존재한다. 이는 예상된 것이다. 하지만 apiserver버전에 없는 내용이 오리지널에 있다면, 이것이 파드 스펙에서 문제가 있는 부분을 나타내는 것일 수 있다.</p>\n<h2 id=\"레플리케이션-컨트롤러-디버그\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"레플리케이션 컨트롤러 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레플리케이션 컨트롤러 디버그</h2>\n<p>레플리케이션 컨트롤러는 꽤 직관적이다. 파드를 생성할 수도, 생성하지 못할수도 있다. 만약 레플리케이션 컨트롤러가 파드를 생성하지 못한다면, <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-pods\">위의 지시</a>를 따라 파드를 디버그하자.</p>\n<p>또한 <code class=\"language-text\">kubectl describe rc ${CONTROLLER_NAME}</code> 을 사용해 레플리케이션 컨트롤러에 내재된 이벤트를 확인할 수 있다.</p>\n<h2 id=\"서비스-디버그\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"서비스 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 디버그</h2>\n<p>서비스는 파드 셋에 걸쳐 로드밸런싱을 제공한다. 서비스가 적절하게 동작하지 못하게 하는 몇 개의 일반적인 문제들이 있다. 다음 지시는 서비스의 문제들의 디버깅에 도움이 될 수 있다.</p>\n<p>먼저, 서비스의 엔드포인트가 있는지 검증한다. 모든 서비스 오브젝트에는 apiserver가 <code class=\"language-text\">endpoints</code> 리소스를 사용가능하게 만든다.</p>\n<p>이 리소스는 아래와 같이 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get endpoints <span class=\"token variable\">${SERVICE_NAME}</span></code></pre></div>\n<p>엔드포인트의 파드의 개수가 서비스의 멤버로 예상한 것과 맞는지 확인한다. 예를 들면, 만약 서비스가 레플리카 3개의 nginx 컨테이너를 위한 것이라면, 서비스의 엔드포인트로 3개의 다른 IP주소를 예상할 것이다.</p>\n<h2 id=\"서비스에-엔드포인트가-빠져있다\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90-%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8%EA%B0%80-%EB%B9%A0%EC%A0%B8%EC%9E%88%EB%8B%A4\" aria-label=\"서비스에 엔드포인트가 빠져있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스에 엔드포인트가 빠져있다</h2>\n<p>만약 엔드포인트가 빠져있다면, 서비스가 사용하는 레이블을 이용해 파드의 목록을 불러오는 것을 시도한다. 레이블이 아래와 같은 서비스를 갖고있다고 가정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n     <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n     <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> frontend</code></pre></div>\n<p>셀렉터와 일치하는 파드 목록을 나열하기 위해 아래를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pods --selector<span class=\"token operator\">=</span>name<span class=\"token operator\">=</span>nginx,type<span class=\"token operator\">=</span>frontend</code></pre></div>\n<p>서비스에서 제공하기를 기대하는 파드와 목록이 일치하는지 검증한다. 파드의 <code class=\"language-text\">containerPort</code> 가 서비스의 <code class=\"language-text\">targetPort</code> 와 일치하는지 검증한다.</p>\n<h2 id=\"네트워크-트래픽이-포워딩-되지-않음\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8A%B8%EB%9E%98%ED%94%BD%EC%9D%B4-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%8C\" aria-label=\"네트워크 트래픽이 포워딩 되지 않음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 트래픽이 포워딩 되지 않음</h2>\n<p>더 많은 정보를 위해 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/\">서비스 디버그</a>를 확인하자.</p>\n<h1 id=\"다음-내용\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C-%EB%82%B4%EC%9A%A9\" aria-label=\"다음 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음 내용</h1>\n<p>만약 위의 것 중 어느 것도 문제를 해결하지 못한다면, <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/\">서비스 디버그 문서</a>의 지시를 따라 서비스가 동작하고, <code class=\"language-text\">Endpoints</code>를 가지고 있으며, <code class=\"language-text\">Pods</code>가 실제로 서비스 되고있는지 확인하라. DNS가 동작하고, iptables 규칙이 설치되고, kube-proxy가 잘못 동작하지 않아야 한다.</p>\n<p>또한 <a href=\"https://kubernetes.io/docs/tasks/debug/\">트러블슈팅 문서</a>를 방문해 더 많은 정보를 확인할 수 있다.</p>\n<h1 id=\"피드백\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EB%93%9C%EB%B0%B1\" aria-label=\"피드백 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피드백</h1>\n<p>이 페이지가 도움이 되었나요?</p>\n<p>네 아니요</p>","frontmatter":{"date":"June 15, 2022","title":"쿠버네티스 공식문서 번역 - 파드 디버그(Debug Pods)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220615-kubernetes-debug-pods/"}},"prev":{"id":"e66b1d50-5d87-5b46-ab04-b0942ffd6a25","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 데이터베이스 소개, SQL DML을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-16-Python-Photo/2022-06-16-Python-Photo1.jpg\" alt=\"2022-06-16-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-16-Python-Photo/2022-06-16-Python-Photo2.jpg\" alt=\"2022-06-16-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"03-sql-dmlinsert-select-update-delete\" style=\"position:relative;\"><a href=\"#03-sql-dmlinsert-select-update-delete\" aria-label=\"03 sql dmlinsert select update delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. SQL DML(INSERT, SELECT, UPDATE, DELETE)</h1>\n<ul>\n<li>CRUD(크루드)</li>\n</ul>\n<br/>\n<h2 id=\"1-sql-insert\" style=\"position:relative;\"><a href=\"#1-sql-insert\" aria-label=\"1 sql insert permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. SQL INSERT</h2>\n<ul>\n<li>데이터(행) 추가 명령 <strong>(중요!)</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> 테이블명 <span class=\"token punctuation\">(</span>컬럼명<span class=\"token punctuation\">,</span> 컬럼명<span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span>값<span class=\"token number\">1</span><span class=\"token punctuation\">,</span> 값<span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post <span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span><span class=\"token punctuation\">(</span><span class=\"token string\">'코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'재미있어요!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<h2 id=\"2-sql-select\" style=\"position:relative;\"><a href=\"#2-sql-select\" aria-label=\"2 sql select permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. SQL SELECT</h2>\n<ul>\n<li>데이터 조회 명령 <strong>(제일 중요!!!!)</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 컬럼명<span class=\"token punctuation\">,</span> 컬럼명<span class=\"token number\">2</span> <span class=\"token keyword\">FROM</span> post<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">INTO</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">INTO</span> <span class=\"token punctuation\">)</span>\\<span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> post<span class=\"token punctuation\">;</span> </code></pre></div>\n<ul>\n<li>특히 마지막 쿼리문은 자주 사용하니 알아둘 것.</li>\n</ul>\n<br/>\n<ul>\n<li>조건 추가: WHERE 추가하기(조회 조건)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> 컬럼명<span class=\"token punctuation\">,</span> 컬럼명<span class=\"token number\">2</span> <span class=\"token keyword\">FROM</span> 조건<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> title <span class=\"token operator\">like</span> <span class=\"token string\">'startcoding%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>like로 상세조건 설정 가능: <code class=\"language-text\">like 'startcoding%'</code> 는 startcoding으로 시작하는 항목만 검색</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>id가 1~10 사이인 것만 가져올 것.</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">WHERE</span> address <span class=\"token operator\">IN</span><span class=\"token punctuation\">(</span><span class=\"token string\">'seoul'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'busan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'daegu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>user테이블에서 address가 seoul, busan, daegu가 들어간 것만 출력</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> 테이블명 <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> 컬럼명 <span class=\"token punctuation\">[</span><span class=\"token keyword\">ASC</span><span class=\"token operator\">|</span><span class=\"token keyword\">DESC</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">ASC</code> 오름차순  / <code class=\"language-text\">DESC</code> 내림차순</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-sql-update\" style=\"position:relative;\"><a href=\"#3-sql-update\" aria-label=\"3 sql update permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. SQL UPDATE</h2>\n<ul>\n<li>데이터 수정 명령</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> 테이블명 <span class=\"token keyword\">SET</span> 컬럼명 <span class=\"token operator\">=</span> 값<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">WHERE</span> 조건식<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> post <span class=\"token keyword\">SET</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'제목 수정 중'</span><span class=\"token punctuation\">,</span> \n            content <span class=\"token operator\">=</span> <span class=\"token string\">'본문 수정 중'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token keyword\">WHERE</span> <span class=\"token operator\">is</span> <span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>where 구문이 없다면 해당 테이블 내의 모든 컬럼이 지정한대로 변경된다.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"4-sql-delete\" style=\"position:relative;\"><a href=\"#4-sql-delete\" aria-label=\"4 sql delete permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. SQL DELETE</h2>\n<ul>\n<li>데이터 삭제 명령</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> 테이블명 <span class=\"token keyword\">WHERE</span> 조건식<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>post 테이블에서 id=3인 행을 삭제하라는 쿼리문</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"5-실습\" style=\"position:relative;\"><a href=\"#5-%EC%8B%A4%EC%8A%B5\" aria-label=\"5 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 실습</h2>\n<ul>\n<li>\n<p>시작 전 지난 실습에서의 데이터를 수정한다.</p>\n<ul>\n<li>board ⇒ post로 변경, reg_date ⇒ 삭제</li>\n<li>user ⇒ address 추가(type: text)</li>\n</ul>\n</li>\n<li>\n<p>SQL 실행 탭으로 이동해 INSERT문을 작성 및 실행</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'스타트코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'강의 정말 재미있어요!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Execution finished without <span class=\"token keyword\">errors</span><span class=\"token punctuation\">.</span>\nResult: query executed successfully<span class=\"token punctuation\">.</span> Took <span class=\"token number\">1</span>ms<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">rows</span> affected\nAt line <span class=\"token number\">1</span>:\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'스타트코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'강의 정말 재미있어요!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> </code></pre></div>\n<br/>\n<ul>\n<li>Browse Data(데이터 보기) ⇒ Table: post 선택</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>INSERT문으로 데이터를 추가하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'돈버는 코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'코딩으로 돈을 쉽게 벌 수 있습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'시간을 버는 코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'코딩으로 시간을 벌 수 있습니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'startcoding은?'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'파이썬 배우는 이유'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쉬우니까'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Execution finished without <span class=\"token keyword\">errors</span><span class=\"token punctuation\">.</span>\nResult: query executed successfully<span class=\"token punctuation\">.</span> Took <span class=\"token number\">0</span>ms<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">rows</span> affected\nAt line <span class=\"token number\">4</span>:\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> post<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'파이썬 배우는 이유'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'쉬우니까'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>추가된 데이터</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>시간을 버는 코딩</td>\n<td>코딩으로 시간을 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>파이썬 배우는 이유</td>\n<td>쉬우니까</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>SELECT 명령어를 이용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post</code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>시간을 버는 코딩</td>\n<td>코딩으로 시간을 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>파이썬 배우는 이유</td>\n<td>쉬우니까</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>id=3인 행만 가져와보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> title<span class=\"token punctuation\">,</span> content <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3</td>\n<td>시간을 버는 코딩</td>\n<td>코딩으로 시간을 벌 수 있습니다.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>like 제약조건도 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> title <span class=\"token operator\">like</span> <span class=\"token string\">'startcoding%'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>실행결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>between 제약조건도 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">1</span> <span class=\"token operator\">and</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>title</th>\n<th>content</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>시간을 버는 코딩</td>\n<td>코딩으로 시간을 벌 수 있습니다.</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>INSERT문으로 데이터를 user 테이블에 삽입한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'스타트코딩'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'daegu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'startcoding'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'seoul'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'이쁜겅듀'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'incheon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Execution finished without <span class=\"token keyword\">errors</span><span class=\"token punctuation\">.</span>\nResult: query executed successfully<span class=\"token punctuation\">.</span> Took <span class=\"token number\">0</span>ms<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">rows</span> affected\nAt line <span class=\"token number\">3</span>:\n<span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> <span class=\"token keyword\">user</span> <span class=\"token punctuation\">(</span>nickname<span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'이쁜겅듀'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'incheon'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>추가된 데이터</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>nickname</th>\n<th>address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>daegu</td>\n</tr>\n<tr>\n<td>2</td>\n<td>startcoding</td>\n<td>seoul</td>\n</tr>\n<tr>\n<td>3</td>\n<td>이쁜겅듀</td>\n<td>incheon</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>select in 문을 작성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> <span class=\"token keyword\">user</span> <span class=\"token keyword\">WHERE</span> address <span class=\"token operator\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'seoul'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'busan'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'daegu'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>nickname</th>\n<th>address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>daegu</td>\n</tr>\n<tr>\n<td>2</td>\n<td>startcoding</td>\n<td>seoul</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>select ~ order by~ 문을 작성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> post <span class=\"token keyword\">ORDER</span> <span class=\"token keyword\">BY</span> title <span class=\"token keyword\">ASC</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>nickname</th>\n<th>address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>3</td>\n<td>시간을 버는 코딩</td>\n<td>코딩으로 시간을 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>파이썬 배우는 이유</td>\n<td>쉬우니까</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>UPDATE 명령을 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> post <span class=\"token keyword\">SET</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'제목 수정 중'</span><span class=\"token punctuation\">,</span>\ncontent <span class=\"token operator\">=</span> <span class=\"token string\">'본문 수정 중'</span> <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Execution finished without <span class=\"token keyword\">errors</span><span class=\"token punctuation\">.</span>\nResult: query executed successfully<span class=\"token punctuation\">.</span> Took <span class=\"token number\">0</span>ms<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">rows</span> affected\nAt line <span class=\"token number\">1</span>:\n<span class=\"token keyword\">UPDATE</span> post <span class=\"token keyword\">SET</span> title <span class=\"token operator\">=</span> <span class=\"token string\">'제목 수정 중'</span><span class=\"token punctuation\">,</span>\ncontent <span class=\"token operator\">=</span> <span class=\"token string\">'본문 수정 중'</span> <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>데이터</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>nickname</th>\n<th>address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>3</td>\n<td>제목 수정 중</td>\n<td>본문 수정 중</td>\n</tr>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>파이썬 배우는 이유</td>\n<td>쉬우니까</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>DELETE 명령어를 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Execution finished without <span class=\"token keyword\">errors</span><span class=\"token punctuation\">.</span>\nResult: query executed successfully<span class=\"token punctuation\">.</span> Took <span class=\"token number\">0</span>ms<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token keyword\">rows</span> affected\nAt line <span class=\"token number\">1</span>:\n<span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">from</span> post <span class=\"token keyword\">WHERE</span> id<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<ul>\n<li>데이터</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>nickname</th>\n<th>address</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>스타트코딩</td>\n<td>강의 정말 재미있어요!</td>\n</tr>\n<tr>\n<td>2</td>\n<td>돈버는 코딩</td>\n<td>코딩으로 돈을 쉽게 벌 수 있습니다.</td>\n</tr>\n<tr>\n<td>4</td>\n<td>startcoding은?</td>\n<td>누구나 쉽게 코딩으로 돈과 시간을 벌 수 있게 만들어 드립니다.</td>\n</tr>\n<tr>\n<td>5</td>\n<td>파이썬 배우는 이유</td>\n<td>쉬우니까</td>\n</tr>\n</tbody>\n</table>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 데이터베이스 소개, SQL DML을 알아보았다. 다음 포스팅에서는 SQL GROUP BY, JOIN에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 16, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 60일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220616-python-day60/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220616-kubernetes-hpa-unknown-error/","nextSlug":"/220615-kubernetes-debug-pods/","prevSlug":"/220616-python-day60/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}