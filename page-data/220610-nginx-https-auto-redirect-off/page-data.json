{"componentChunkName":"component---src-templates-blog-template-js","path":"/220610-nginx-https-auto-redirect-off/","result":{"data":{"cur":{"id":"b6a3be73-f995-5de2-bd0f-65abbd04ff42","html":"<p><strong>💡  NGINX에서 HTTPS 자동 리다이렉션 설정은 annotation에서(기본값=off), Contour에서 HTTPS 자동 리다이렉션 설정은 spec 하위에서(기본값=on) 설정한다</strong></p>\n<br/>\n<h1 id=\"1-발생-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%9C%EC%83%9D-%EC%83%81%ED%99%A9\" aria-label=\"1 발생 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 발생 상황</h1>\n<p>현재 컨테이너 이관 프로젝트를 진행 중인데, 프로젝트 초기에 http 기반으로 되어있는 담당 시스템이 이관 후에는 http로 접속해도 https로 리다이렉션 되는 현상이 발생했다.</p>\n<br/>\n<p>http로 보낸 요청이 https로 변경되어 전송되어 컨테이너에서 요청을 제대로 인식하지 못해 http를 https로 변경하는 옵션을 찾아서 disable 시켜야하는 상황이었다.</p>\n<br/>\n<p>현재 프로젝트가 VMware의 Tanzu Kubernetes Cluster라는 솔루션 기반에서 동작하고 있어 같은 VMware에서 시작한 오픈소스들을 많이 사용하고 있었는데, 그래서 Ingress Controller도 일반적으로 사용하는 NGINX가 아닌 Contour라는 솔루션을 사용하고 있었다.</p>\n<p><br/><br/></p>\n<h1 id=\"2-설정-방법---contour\" style=\"position:relative;\"><a href=\"#2-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95---contour\" aria-label=\"2 설정 방법   contour permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 설정 방법 - Contour</h1>\n<p>Contour에서는 쿠버네티스에서 제공하는 Ingress라는 리소스 대신 HTTPproxy라는 커스텀 리소스(Custom Resource)를 사용하고 있다.</p>\n<br/>\n<p>Ingress의 경우 annotation에 설정값들을 넣어주게 되는데, HTTPproxy의 경우 spec 하단에 적어주게 된다.</p>\n<br/>\n<p>그리고 Contour는 <code class=\"language-text\">virtual.host</code> 블록에 값이 존재할 경우 기본적으로 HTTP를 HTTPS로 자동 리다이렉션 하도록 설정되어있다. 따라서 HTTP로 해당 애플리케이션에 접속할 수 있도록 하려면, 아래와 같이 <code class=\"language-text\">permitInsecure</code> 라는 옵션을 true로 설정해주어야한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>(생략)<span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n\t<span class=\"token key atrule\">routes</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token key atrule\">permitInsecure</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token punctuation\">...</span>(생략)<span class=\"token punctuation\">...</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">permitInsecure</code> : 해당 경로에서 보안되지 않은 요청에 대해 HTTP를 통해 응답하는 것을 허용하는 설정.  <code class=\"language-text\">virtual.host</code> 블록이 존재할 경우 보통 허용되지 않는다.</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"3-설정-방법---nginx\" style=\"position:relative;\"><a href=\"#3-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95---nginx\" aria-label=\"3 설정 방법   nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 설정 방법 - NGINX</h1>\n<p>반면 NGINX에서는 HTTP ⇒ HTTPS 자동 리다이렉션 기능이 기본적으로 활성화 되어있지 않다.</p>\n<br/>\n<p>Ingress 리소스에서 아래 두 가지 옵션을 쌍으로 설정하여 자동 리다이렉션 기능을 켜거나 끌 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">nginx.ingress.kubernetes.io/proxy-redirect-from</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'http://'</span>\n<span class=\"token key atrule\">nginx.ingress.kubernetes.io/proxy-redirect-to</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://'</span></code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"참고-링크\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-%EB%A7%81%ED%81%AC\" aria-label=\"참고 링크 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고 링크</h1>\n<ul>\n<li>Contour API reference: <a href=\"https://projectcontour.io/docs/main/config/api/\">https://projectcontour.io/docs/main/config/api/</a></li>\n<li>NGINX kubernetes ingress annotation: <a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/\">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/</a></li>\n</ul>\n<p><br/><br/></p>","excerpt":"💡  NGINX에서 HTTPS 자동 리다이렉션 설정은 annotation에서(기본값=off), Contour에서 HTTPS 자동 리다이렉션 설정은 spec 하위에서(기본값=on) 설정한다 1. 발생 상황 현재 컨테이너 이관 프로젝트를 진행 중인데, 프로젝트 초기에 http 기반으로 되어있는 담당 시스템이 이관 후에는 http로 접속해도 https로 리다이렉션 되는 현상이 발생했다. http로 보낸 요청이 https로 변경되어 전송되어 컨테이너에서 요청을 제대로 인식하지 못해 http를 https로 변경하는 옵션을 찾아서 disable 시켜야하는 상황이었다. 현재 프로젝트가 VMware의 Tanzu Kubernetes Cluster라는 솔루션 기반에서 동작하고 있어 같은 VMware에서 시작한 오픈소스들을 많이 사용하고 있었는데, 그래서 Ingress Controller도 일반적으로 사용하는 NGINX가 아닌 Contour라는 솔루션을 사용하고 있었다.  2. 설정 방법 - Cont…","frontmatter":{"date":"June 10, 2022","title":"NGINX/Contour에서 HTTP ⇒ HTTPS 자동 리다이렉션 옵션 끄기(auto-redirect)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220610-nginx-https-auto-redirect-off/"}},"next":{"id":"adfadd19-57a6-58d1-9d80-1125b577bd02","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 map, filter 실습을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-09-Python-Photo/2022-06-09-Python-Photo1.jpg\" alt=\"2022-06-09-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-09-Python-Photo/2022-06-09-Python-Photo2.jpg\" alt=\"2022-06-09-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"05-map-filter-함수-실습\" style=\"position:relative;\"><a href=\"#05-map-filter-%ED%95%A8%EC%88%98-%EC%8B%A4%EC%8A%B5\" aria-label=\"05 map filter 함수 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. map, filter 함수 실습</h1>\n<h2 id=\"1-map-함수\" style=\"position:relative;\"><a href=\"#1-map-%ED%95%A8%EC%88%98\" aria-label=\"1 map 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. map 함수</h2>\n<ul>\n<li>map 함수를 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. map 함수</span>\n<span class=\"token comment\"># - 사용 이유</span>\n<span class=\"token comment\"># 기존 리스트를 수정해서 새로운 리스트를 만들 때</span>\n\n<span class=\"token comment\"># - 사용 방법</span>\n<span class=\"token comment\"># map(함수, 순서가있는자료형)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과: map 객체가 생성되었다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token operator\">&lt;</span><span class=\"token builtin\">map</span> <span class=\"token builtin\">object</span> at <span class=\"token number\">0x106e22cb0</span><span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>다시 리스트로 만드려면 list()로 map을 감싸주면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. map 함수</span>\n<span class=\"token comment\"># - 사용 이유</span>\n<span class=\"token comment\"># 기존 리스트를 수정해서 새로운 리스트를 만들 때</span>\n\n<span class=\"token comment\"># - 사용 방법</span>\n<span class=\"token comment\"># map(함수, 순서가있는자료형)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"1-예제-리스트-모든-요소의-공백-제거\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%A0%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%AA%A8%EB%93%A0-%EC%9A%94%EC%86%8C%EC%9D%98-%EA%B3%B5%EB%B0%B1-%EC%A0%9C%EA%B1%B0\" aria-label=\"1 예제 리스트 모든 요소의 공백 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예제: 리스트 모든 요소의 공백 제거</h3>\n<ul>\n<li>먼저 for문을 이용해서 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - 예제</span>\n<span class=\"token comment\"># 리스트 모든 요소의 공백 제거</span>\nitems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'   로지텍마우스   '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'   앱솔키보드   '</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 1) for문 사용</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>참고: 데이터에 앞뒤 공백이 붙는 경우는 크롤링을 할 때 자주 만날 수 있다.</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'로지텍마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'앱솔키보드'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>map 함수를 사용해 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2) map 사용</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">strip_all</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>strip_all<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'로지텍마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'앱솔키보드'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>마지막으로 lambda 함수를 이용해 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 3) lambda 사용</span>\nitems <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'로지텍마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'앱솔키보드'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"2-filter-함수\" style=\"position:relative;\"><a href=\"#2-filter-%ED%95%A8%EC%88%98\" aria-label=\"2 filter 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. filter 함수</h2>\n<ul>\n<li>filter 함수의 사용법을 알아보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - 사용 방법</span>\n<span class=\"token comment\"># filter(함수, 순서가있는자료형)</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"1-예제-리스트에서-길이가-3이하인-문자들만-필터링\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%A0%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EA%B8%B8%EC%9D%B4%EA%B0%80-3%EC%9D%B4%ED%95%98%EC%9D%B8-%EB%AC%B8%EC%9E%90%EB%93%A4%EB%A7%8C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"1 예제 리스트에서 길이가 3이하인 문자들만 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예제: 리스트에서 길이가 3이하인 문자들만 필터링</h3>\n<ul>\n<li>for 문을 사용해 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - 예제</span>\n<span class=\"token comment\"># 리스트에서 길이가 3이하인 문자들만 필터링</span>\nanimals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tiger'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'monkey'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># 1) for 사용</span>\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> animals<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> \n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>filter 함수를 이용해 구현해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2) filter 사용</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">word_check</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>word_check<span class=\"token punctuation\">,</span> animals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<ul>\n<li>lambda 함수를 이용해 구현해보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 3) lambda 사용</span>\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> animals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">filter</span>함수<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 map, filter함수를 실습해보았다. 다음 포스팅에서는 클래스와 객체를 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 09, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 53일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220609-python-day53/"}},"prev":{"id":"f1fe6607-f650-584a-b9ed-9c7e77540420","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의  클래스와 객체를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-10-Python-Photo/2022-06-10-Python-Photo1.jpg\" alt=\"2022-06-10-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-10-Python-Photo/2022-06-10-Python-Photo2.jpg\" alt=\"2022-06-10-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"01-클래스와-객체\" style=\"position:relative;\"><a href=\"#01-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B0%9D%EC%B2%B4\" aria-label=\"01 클래스와 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 클래스와 객체</h1>\n<h2 id=\"1-절차-지향-vs-객체-지향\" style=\"position:relative;\"><a href=\"#1-%EC%A0%88%EC%B0%A8-%EC%A7%80%ED%96%A5-vs-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5\" aria-label=\"1 절차 지향 vs 객체 지향 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 절차 지향 vs 객체 지향</h2>\n<h3 id=\"1-절차-지향-프로그래밍\" style=\"position:relative;\"><a href=\"#1-%EC%A0%88%EC%B0%A8-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"1 절차 지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 절차 지향 프로그래밍</h3>\n<ul>\n<li>기능들을 어떤 순서로 처리할 것인가에 초점을 맞춘다.</li>\n<li>프로그래밍 규모가 작은 경우 유용</li>\n</ul>\n<br/>\n<h3 id=\"2-객체-지향-프로그래밍\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D\" aria-label=\"2 객체 지향 프로그래밍 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 객체 지향 프로그래밍</h3>\n<ul>\n<li>객체가 중심, 객체를 정의하고 객체간 상호작용에 초점을 맞춘다.</li>\n<li>프로그래밍 규모가 큰 경우 유용</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-클래스와-객체-개념\" style=\"position:relative;\"><a href=\"#2-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B0%9D%EC%B2%B4-%EA%B0%9C%EB%85%90\" aria-label=\"2 클래스와 객체 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 클래스와 객체 개념</h2>\n<h3 id=\"1-클래스\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"1 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스</h3>\n<ul>\n<li>객체를 만들기 위한 설계도</li>\n</ul>\n<br/>\n<h3 id=\"2-객체\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9D%EC%B2%B4\" aria-label=\"2 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 객체</h3>\n<ul>\n<li>설계도로부터 만들어낸 제품</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-클래스-만들기\" style=\"position:relative;\"><a href=\"#3-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"3 클래스 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 클래스 만들기</h2>\n<p><img src=\"/assets/images/2022-06-10-Python-Photo/2022-06-10-Python-Photo3.png\" alt=\"2022-06-10-Python-Photo3\"></p>\n<ul>\n<li>클래스: ‘Unit’\n<ul>\n<li>속성: 이름, 체력, 공격력, 방어막</li>\n<li>메서드: 위치로 이동하기, 공격하기, 정보 표시하기</li>\n</ul>\n⇒ 스타크래프트의 프로토스 유닛을 클래스로 만들어보자.</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"1-클래스-만들기\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"1 클래스 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> 클래스이름<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">pass</span> <span class=\"token comment\"># 나중에 구현을 하겠다는 뜻</span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-객체-만들기\" style=\"position:relative;\"><a href=\"#2-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 객체 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 객체 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">인스턴스 <span class=\"token operator\">=</span> 클래스이름<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nzealot <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"3-속성-추가하기\" style=\"position:relative;\"><a href=\"#3-%EC%86%8D%EC%84%B1-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"3 속성 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 속성 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Unit 클래스에 속성을 추가해보자</span>\n<span class=\"token comment\"># 1) 이름</span>\n<span class=\"token comment\"># 2) 체력</span>\n<span class=\"token comment\"># 3) 방어막</span>\n<span class=\"token comment\"># 4) 공격력</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> hp\n        self<span class=\"token punctuation\">.</span>shield <span class=\"token operator\">=</span> shield\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n\nprobe <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\nzealot <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"질럿\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\ndragoon <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"드라군\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">__init__</code> : 생성자</li>\n<li><code class=\"language-text\">(self, name, hp, shield, demage)</code> : 파라미터</li>\n<li><code class=\"language-text\">probe</code>, <code class=\"language-text\">zealot</code> , <code class=\"language-text\">dragoon</code> : 객체</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"4-메서드-추가하기\" style=\"position:relative;\"><a href=\"#4-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"4 메서드 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 메서드 추가하기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Unit 클래스에 속성을 추가해보자</span>\n<span class=\"token comment\"># 1) 이름</span>\n<span class=\"token comment\"># 2) 체력</span>\n<span class=\"token comment\"># 3) 방어막</span>\n<span class=\"token comment\"># 4) 공격력</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> hp\n        self<span class=\"token punctuation\">.</span>shield <span class=\"token operator\">=</span> shield\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">] 체력 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>hp<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 실드: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>shield<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 공격력: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nprobe <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>proble<span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"4-실습\" style=\"position:relative;\"><a href=\"#4-%EC%8B%A4%EC%8A%B5\" aria-label=\"4 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 실습</h1>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Unit 클래스</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름, 체력, 방어막, 공격력\n    \"\"\"</span>\n\n    <span class=\"token comment\"># 생성자 (constructor)</span>\n    <span class=\"token comment\"># 객체를 생성할 떄 호출되는 메서드</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name <span class=\"token comment\"># self 는 객체 자기 자신을 의미</span>\n        self<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> hp\n        self<span class=\"token punctuation\">.</span>shield <span class=\"token operator\">=</span> shield\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">](이)가 생성 되었습니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 프로브 객체를 생성</span>\nprobe <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 질럿 객체를 생성</span>\nzealot <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"질럿\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 드라군 객체를 생성</span>\ndragoon <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"드라군\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter04<span class=\"token operator\">/</span><span class=\"token number\">01.</span>클래스와객체<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span>프로브<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>질럿<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>드라군<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>메서드를 생성해보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Unit 클래스</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름, 체력, 방어막, 공격력\n    \"\"\"</span>\n\n    <span class=\"token comment\"># 생성자 (constructor)</span>\n    <span class=\"token comment\"># 객체를 생성할 떄 호출되는 메서드</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name <span class=\"token comment\"># self 는 객체 자기 자신을 의미</span>\n        self<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> hp\n        self<span class=\"token punctuation\">.</span>shield <span class=\"token operator\">=</span> shield\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">](이)가 생성 되었습니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># 객체를 출력할 때 호출되는 메서드</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">] 체력 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>hp<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 실드: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>shield<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 공격력: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span>\n\n<span class=\"token comment\"># 프로브 객체를 생성</span>\nprobe <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 질럿 객체를 생성</span>\nzealot <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"질럿\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 드라군 객체를 생성</span>\ndragoon <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span><span class=\"token string\">\"드라군\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 객체의 속성 정보를 출력</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>probe<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>zealot<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dragoon<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter04<span class=\"token operator\">/</span><span class=\"token number\">01.</span>클래스와객체<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span>프로브<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>질럿<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>드라군<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span>이<span class=\"token punctuation\">)</span>가 생성 되었습니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>프로브<span class=\"token punctuation\">]</span> 체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> 실드<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> 공격력<span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n<span class=\"token punctuation\">[</span>질럿<span class=\"token punctuation\">]</span> 체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> 실드<span class=\"token punctuation\">:</span> <span class=\"token number\">60</span> 공격력<span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>\n<span class=\"token punctuation\">[</span>드라군<span class=\"token punctuation\">]</span> 체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span> 실드<span class=\"token punctuation\">:</span> <span class=\"token number\">80</span> 공격력<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 클래스와 객체를 알아보았다. 다음 포스팅에서는 여러가지 속성을 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 10, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 54일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220610-python-day54/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220610-nginx-https-auto-redirect-off/","nextSlug":"/220609-python-day53/","prevSlug":"/220610-python-day54/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}