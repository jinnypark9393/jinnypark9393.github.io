{"componentChunkName":"component---src-templates-blog-template-js","path":"/220514-python-day27/","result":{"data":{"cur":{"id":"beeee8dc-2aa7-50fd-8956-efc5adcae7ac","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 9-2. 모듈 만들기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-14-Python-Photo/2022-05-14-Python-Photo1.jpg\" alt=\"2022-05-14-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-14-Python-Photo/2022-05-14-Python-Photo2.jpg\" alt=\"2022-05-14-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"02-모듈-만들기\" style=\"position:relative;\"><a href=\"#02-%EB%AA%A8%EB%93%88-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"02 모듈 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 모듈 만들기</h1>\n<ul>\n<li>pay_module이라는 모듈을 생성해보자.</li>\n</ul>\n<br/>\n<ul>\n<li>pay_module.py라는 파일을 생성한 뒤, 아래를 입력 후 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 결제 정보, 관리 모듈</span>\n<span class=\"token comment\"># 변수</span>\nversion <span class=\"token operator\">=</span> <span class=\"token number\">2.0</span>\n\n<span class=\"token comment\"># 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">printAuthor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"스타트코딩\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 클래스</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Pay</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> <span class=\"token builtin\">id</span><span class=\"token punctuation\">,</span> price<span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">id</span>\n        self<span class=\"token punctuation\">.</span>price <span class=\"token operator\">=</span> price\n        self<span class=\"token punctuation\">.</span>time <span class=\"token operator\">=</span> time\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_pay_info</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span><span class=\"token builtin\">id</span><span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span></code></pre></div>\n<br/>\n<ul>\n<li>02.모듈만들기.py라는 파일을 생성한 뒤, pay_module을 import한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pay_module</code></pre></div>\n<ul>\n<li>Import “pay_module” could not be resolved Pylance(reportMissingImports) 라는 에러가 발생한다. 해당 모듈이 root 폴더에 있을 경우에만 찾을 수 있기 때문.</li>\n</ul>\n<br/>\n<ul>\n<li>File > Preferences > Settings(MacOS의 경우: VSCode > Preferences > Settings)로 이동 후 붉은 색 네모로 표시한 버튼 클릭</li>\n</ul>\n<p><img src=\"/assets/images/2022-05-14-Python-Photo/2022-05-14-Python-Photo3.png\" alt=\"2022-05-14-Python-Photo3\"></p>\n<br/>\n<ul>\n<li>settings.json 파일에서 <code class=\"language-text\">\"python.analysis.extraPaths\": [\"./myvenv/Chapter9\"],</code> 문구를 넣어준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"python.pythonPath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/anaconda3/bin/python\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"editor.unicodeHighlight.allowedCharacters\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\" \"</span><span class=\"token punctuation\">:</span> true\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"python.analysis.extraPaths\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./myvenv/Chapter9\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"liveSassCompile.settings.formats\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"format\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"expanded\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"extensionName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".css\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"savePath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/assets/css/\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pasteImage.basePath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"${currentFileDir}/images/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pasteImage.prefix\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"liveServer.settings.donotShowInfoMsg\"</span><span class=\"token punctuation\">:</span> true<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"editor.fontSize\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"window.zoomLevel\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>다시 <code class=\"language-text\">pay_module</code> 변수 및 함수를 사용하면 에러가 발생하지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pay_module\n\n<span class=\"token comment\"># 변수 사용</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pay_module<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 함수 사용</span>\npay_module<span class=\"token punctuation\">.</span>printAuthor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span><span class=\"token number\">02.</span>모듈만들기<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">2.0</span>\n스타트코딩</code></pre></div>\n<ul>\n<li>코드 실행 후 Chapter 9 디렉토리에 <code class=\"language-text\">__pycache__</code> 라는 디렉토리가 자동으로 생성되며, 폴더 하위에는 <code class=\"language-text\">pay_module.cpython-310.pyc</code> 라는 파일이 생성되는데, 이는 실행속도 향상을 위해 생성된 컴파일된 파이썬 코드.</li>\n</ul>\n<br/>\n<ul>\n<li>클래스도 사용할 수 있는지 알아보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pay_module\n\n<span class=\"token comment\"># 변수 사용</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pay_module<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 함수 사용</span>\npay_module<span class=\"token punctuation\">.</span>printAuthor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 클래스 사용</span>\npay_info <span class=\"token operator\">=</span> pay_module<span class=\"token punctuation\">.</span>Pay<span class=\"token punctuation\">(</span><span class=\"token string\">\"A102030\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13000</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"2021-06-13\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pay_info<span class=\"token punctuation\">.</span>get_pay_info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span><span class=\"token number\">02.</span>모듈만들기<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">2.0</span>\n스타트코딩\n<span class=\"token number\">2021</span><span class=\"token operator\">-</span><span class=\"token number\">06</span><span class=\"token operator\">-</span><span class=\"token number\">13</span> A102030 <span class=\"token number\">13000</span></code></pre></div>\n<ul>\n<li>다시 pay_module.py 파일로 돌아가서, 함수를 추가해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 해당 파일을 직접 실행했을 때만 실행된다.</span>\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"pay module 실행\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>__name__<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span>pay_module<span class=\"token punctuation\">.</span>py\npay module 실행\n__main__</code></pre></div>\n<br/>\n<ul>\n<li>02.모듈만들기.py 에서도 <code class=\"language-text\">print(pay_module.__name__)</code> 로 되는지 확인해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span><span class=\"token number\">02.</span>모듈만들기<span class=\"token punctuation\">.</span>py\npay_module</code></pre></div>\n<ul>\n<li>pay_module 이 출력된다. 자기자신의 파일을 직접 실행 했을 때에만 할당된다.</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 모듈을 만들어보았다. 다음 포스팅에서는 패키지에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 9-2. 모듈 만들기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-14-Python-Photo1 2022-05-14-Python-Photo2  02. 모듈 만들기 pay_module이라는 모듈을 생성해보자. pay_module.py라는 파일을 생성한 뒤, 아래를 입력 후 저장한다. 02.모듈만들기.py라는 파일을 생성한 뒤, pay_module을 import한다. Import “pay_module” could not be resolved Pylance(reportMissingImports) 라는 에러가 발생한다. 해당 모듈이 root 폴더에 있을 경우에만 찾을 수 있기 때문. File > Preferences > Settings(MacOS의 경우: VSCode > Pref…","frontmatter":{"date":"May 14, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 27일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220514-python-day27/"}},"next":{"id":"53da1368-6442-53a9-b8f7-71b1edabba77","html":"<h1 id=\"6-데이터는-다양한-정보이다\" style=\"position:relative;\"><a href=\"#6-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A0%95%EB%B3%B4%EC%9D%B4%EB%8B%A4\" aria-label=\"6 데이터는 다양한 정보이다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 데이터는 다양한 정보이다</h1>\n<ul>\n<li>알고리즘 = 데이터 + 처리</li>\n<li>데이터: 다양한 정보</li>\n</ul>\n<br/>\n<ul>\n<li>예시 1: 고기감자 요리\n<ul>\n<li>데이터: 고기감자 재료</li>\n<li>처리: 요리 방법</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>예시 2: 최대공약수 구하기\n<ul>\n<li>데이터(필요한 정보)\n<ul>\n<li>최대 공약수를 구하는 2개의 정수 값</li>\n<li>구한 최대 공약수(정수 값)</li>\n</ul>\n</li>\n<li>처리: 최대공약수를 구하는 방법 순서</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>예시 3: 정보의 순서 정하기\n<ul>\n<li>데이터(필요한 정보)\n<ul>\n<li>정렬할 값이 담긴 열</li>\n<li>정렬 값의 개수</li>\n<li>정렬된 결과가 담긴 열</li>\n</ul>\n</li>\n<li>처리: 정보의 순서를 정하는 방법/순서</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h1 id=\"7-모든-데이터에는-타입이-있다\" style=\"position:relative;\"><a href=\"#7-%EB%AA%A8%EB%93%A0-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%97%90%EB%8A%94-%ED%83%80%EC%9E%85%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"7 모든 데이터에는 타입이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 모든 데이터에는 타입이 있다</h1>\n<ul>\n<li>데이터 타입: 다양한 정보(데이터)를 그룹화한 것</li>\n<li>많이 사용되는 기본 데이터 타입(5가지)\n<ul>\n<li><strong>정수 타입(int)</strong>: 정수(소수점이 없는 값)를 처리하기 위한 데이터 타입</li>\n<li><strong>실수 타입(float)</strong>: 실수(소수점을 포함한 값)를 처리하기 위한 데이터 타입</li>\n<li><strong>문자 타입</strong>: 문자를 처리하기 위한 데이터 타입</li>\n<li><strong>문자열 타입(string)</strong>: 문자열을 처리하기 위한 데이터 타입</li>\n<li><strong>논리 타입(boolean)</strong>: ‘참’, ‘거짓’을 다루기 위한 데이터 타입</li>\n</ul>\n</li>\n</ul>\n<br/>","frontmatter":{"date":"May 14, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220514-algorithm-book-with-pic/"}},"prev":{"id":"584ced70-c15e-5ad1-be06-54eed4cd36e0","html":"<h1 id=\"4-디플로이먼트deployment-생성-및-이미지-업데이트\" style=\"position:relative;\"><a href=\"#4-%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-label=\"4 디플로이먼트deployment 생성 및 이미지 업데이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 디플로이먼트(Deployment) 생성 및 이미지 업데이트</h1>\n<h2 id=\"문제-요건\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[문제 요건]</h2>\n<ul>\n<li><code class=\"language-text\">default</code> 네임스페이스에 <code class=\"language-text\">nginx:1.16</code> 이미지를 사용하는 신규 디플로이먼트 <code class=\"language-text\">nginx-deploy</code>를 생성해야한다. 레플리카 수는 1.</li>\n<li>그 뒤, 디플로이먼트의 버전을 롤링 업데이트(Rolling Update)로 <code class=\"language-text\">1.17</code>로 업데이트</li>\n<li>채점기준\n<ul>\n<li>이미지: nginx:1.16</li>\n<li>작업: 디플로이먼트의 버전을 1.17로 업그레이드</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[내 풀이]</h2>\n<ul>\n<li>쿠버네티스 공식 문서의 kubectl cheatsheet 페이지 참조해 디플로이먼트 리소스 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~<span class=\"token comment\"># kubectl create deployment nginx-deploy --image=nginx:1.16 --replicas=1</span>\ndeployment.apps/nginx-deploy created\nNAME           READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES         SELECTOR\ngold-nginx     <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           20m   nginx        nginx:latest   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>gold-nginx\nnginx-deploy   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           37s   nginx        nginx:1.16     <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy</code></pre></div>\n<br/>\n<ul>\n<li>같은 페이지의 리소스 업데이트 탭을 참조해 이미지 업데이트\n<ul>\n<li>Tip: 이미지를 업데이트할 때에는 <code class=\"language-text\">kubectl set image &lt;리소스종류>/&lt;리소스 이름> &lt;컨테이너명>=&lt;이미지:버전></code> 명령어를 사용하면 이미지가 롤링업데이트 된다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~<span class=\"token comment\"># kubectl set image deployment/nginx-deploy nginx=nginx:1.17</span>\ndeployment.apps/nginx-deploy image updated\nroot@controlplane:~<span class=\"token comment\"># k get deployments.apps -o wide</span>\nNAME           READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES         SELECTOR\ngold-nginx     <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           24m     nginx        nginx:latest   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>gold-nginx\nnginx-deploy   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           4m10s   nginx        nginx:1.17     <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"참고-url\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-url\" aria-label=\"참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[참고 URL]</h2>\n<ul>\n<li>이미지 업데이트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/#리소스-업데이트</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 15, 2022","title":"쿠버네티스(Kubernetes) CKA Lightning Lab 4 - 디플로이먼트(Deployment) 생성 및 이미지 업데이트","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220515-kubernetes-cka-lightning-lab4/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220514-python-day27/","nextSlug":"/220514-algorithm-book-with-pic/","prevSlug":"/220515-kubernetes-cka-lightning-lab4/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}