{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"e93fb860-d97c-5231-8f0e-f8710dd2d1a3","excerpt":"제 4장: 기본적인 알고리즘(6) 46. 두 변수의 값을 교환할 때는 임시 변수를 사용한다. 변수 X와 Y의 값을 교환 하려면, 아래 순서대로 하면 교환할 수 없다. 변수 Y에 변수 X 값 대입 변수 X에 변수 Y 값 대입(이미 변수 X의 값은 Y값으로 덮어씌워짐) 임시변수를 이용해 값을 임시로 저장해야한다. 1단계: 변수 W에 변수 Y 값 대입 2단계: 변수 Y에 변수 X 값 대입 3단계: 변수 X에 변수 W 값 대입 47. 두 수의 최대공약수는 유클리드 호제법으로 구한다 최대공약수: 0이 아닌 정수들의 공통된 약수 중 가장 큰 수 유클리드 호제법으로 구하면 된다. 호제법: 2개의 수가 서로 나누는 것 정수 X와 Y(X ≥ Y)가 주어졌을 때 X를 Y로 나눈 나머지를 R이라고 하면, X와 Y의 최대공양수는 Y와 R의 최대공약수와 같다. 그러나 X와 0이 남았을 경우 최대공약수는 X로 한다. 정수 X와 Y(X ≥ Y)의 최대공약수를 변수 GCD에 구하는 알고리즘 1단계: 변수 R에…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(6)","date":"August 10, 2022"},"fields":{"slug":"/220810-algorithm-book-with-pic/"}}},{"node":{"id":"519587bd-45c9-53e5-9d62-7e6021233841","excerpt":"제 4장: 기본적인 알고리즘(5) 44. 시간의 크고 작음을 비교하려면 단위를 초 단위로 통일한다 시간의 크고작음을 계산할 때에는 시간, 분, 초 순서대로 비교하는 알고리즘으로 구할 수도 있지만 초 단위로 시간을 통일시켜 비교하는 것이 더 좋다(컴퓨터는 연산에 특화 되었기 때문) 시 분 초를 초단위로 변환하는 계산식 H시 M분 S초 = H3600 + M60 + S 예: 6시 32분 12초(A) 7 7시 10분 52초(B) 63600 + 3260 + 12 = 32532 (A) 73600 + 1060 + 52 =25832 (B) 45. 시간차를 구할 때에는 초 단위로 바꾸어 뺄셈하고, 다시 시간으로 바꾼다 시간을 초단위로 바꾸는 식 H시 M분 s초 = H3600 + M60 + S 초 단위 값인 TIME을 H시 M분 S초로 변환 1단계: TIME을 3600으로 나눈 몫의 정수 부분 =H 2단계: TIME을 3600으로 나눈 나머지 값이 R 3단계: R을 60으로 나눈 몫이 M 4단계: …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(5)","date":"August 09, 2022"},"fields":{"slug":"/220809-algorithm-book-with-pic/"}}},{"node":{"id":"6514388b-e82f-5341-ba99-d06b880055f1","excerpt":"1. 배경상황 현재 프로젝트가 Java로 구성되어있어 자바 메모리 구조에 대해서는 이전에 개인적으로 공부한 적이 있다. 하지만 최근 새로 착수한 프로젝트가 static의 과도한 사용으로 메모리 이슈가 발생하고 있는 프로젝트라 static의 개념을 새로 학습하고, Java 메모리 구조에 대해 다시 정리해보려 한다. 2. Static(정적)이란? 영문을 그대로 직역하면 고정된이라는 뜻을 가지고 있는데, 실제로 static은 프로그램 시작 시 메모리에 고정적으로 할당되어, 프로그램이 종료될 때 해제된다.  이라는 키워드를 사용해 정적 변수(static variable) 과 정적 메서드(static method) 를 생성할 수 있다. 이 둘을 합쳐 정적 멤버(static member), 혹은 클래스 멤버(class member) 라고 부른다. 이렇게 생성된 정적 변수, 정적 메서드의 경우 클래스가 메모리에 올라갈 때 자동으로 생성된다. 즉, 인스턴스(객체) 생성 없이 바로 사용이 가능하다…","frontmatter":{"categories":"프로그래밍","title":"Java의 static(정적)이란?","date":"August 08, 2022"},"fields":{"slug":"/220808-programming-java-static/"}}},{"node":{"id":"0c820bc9-e72c-5739-855f-28252493dcdf","excerpt":"gatsby(정적 웹사이트 생성기)에서 맘에 드는 테마를 발견해 gatsby로 이관하였다.\n기존 포스팅은 아직 이관중.","frontmatter":{"categories":"etc","title":"블로그 리뉴얼(jekyll 에서 gatsby로)","date":"August 08, 2022"},"fields":{"slug":"/220808-etc-renew-blog/"}}},{"node":{"id":"c035e5dd-0be8-5792-9959-264edf4db075","excerpt":"제 4장: 기본적인 알고리즘(4) 42. 배열 데이터의 최소 값을 구하려면 최소 값을 저장할 변수를 준비한다 최소값을 구하는 알고리즘은 최대값을 구하는 알고리즘과 유사하나 두 가지가 다르다 최소 값을 저장하는 변수의 초기 값 배열 요소의 비교 논리 최소 값을 구하는 순서 1단계: 최소 값을 저장하는 변수 MIN을 대상 데이터들의 최대 값보다 큰 값으로 초기화한다. 2단계: 첨자를 저장하는 변수 I를 0으로 초기화한다. 3단계: I가 N 미만이라면 4~5단계를 반복한다. 4단계: JUM[I] < MIN이라면, MIN에 JUM[I]를 대입한다. 5단계: I를 1 증가시킨다.  43. 배열 데이터에 등수를 매기려면 순위를 저장할 또 다른 배열을 준비한다. 등수를 구하는 방법 1단계: 배열 RANK의 모든 요소를 1로 초기화한다. 2단계: 첨자를 저장하는 변수 I에 0을 저장한다. 3단계: I이 N미만이라면 4~8단계를 반복한다. 4단계: 첨자를 저장하는 변수 J를 0으로 초기화한다. 5…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(4)","date":"August 07, 2022"},"fields":{"slug":"/220807-algorithm-book-with-pic/"}}},{"node":{"id":"5276f620-5efe-5994-aebf-6248590f81ae","excerpt":"제 4장: 기본적인 알고리즘(3) 40. 배열 데이터의 평균 값은 반복 처리를 통해 합계와 개수를 구한 후 계산한다 배열의 끝에 저장된 보초 값으로 배열 데이터 개수를 관리하는 배열의 평균값 계산 배열의 합계와 배열의 개수를 구한 뒤 평균 계산 예시: 어떤 학급의 기말점수 (0~100)가 저장된 배열 JUM(배열 끝 보초값 —1)의 평균값은? 평균 = 총점 / 학급 인원 수 학급 인원 수 = COUNT (유효한 요소의 개수를 세는 변수) 총점 = SUM (배열 요소의 합계 값을 저장하는 변수) 1단계: 변수 COUNT와 합계를 저장하는 변수 SUM을 0으로 초기화한다. 2단계: 배열 JUM의 첨자를 저장하는 변수 I를 0으로 초기화한다. 3단계: JUM[I]이 보초 값(-1)을 가리키지 않는 동안, 다음의 4~5 단계를 반복한다. 4단계: Count에 1을 더하고 SUM에 SUM + JUM[I]를 저장한다. 5단계: I에 1을 더한다. 6단계: 평균 값을 저장하는 변수 AVE에 S…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(3)","date":"August 06, 2022"},"fields":{"slug":"/220806-algorithm-book-with-pic/"}}},{"node":{"id":"777e46e5-3691-567a-a539-5aa0788ae072","excerpt":"제 4장: 기본적인 알고리즘(2) 38. 배열 데이터의 합을 계산하려면 더한 값을 저장할 변수를 준비한다 여러 데이터의 합을 구하는 처리 ⇒ 배열 합계 알고리즘 예시 시험점수의 총 합 계산 일일 입장객의 수를 통해 해당 월 전체 입장객 수 구하기 각 지점의 매출액을 합해 전 지점 매출액 구하기 데이터 N개의 합을 구하는 계산식 DATA[0] + DATA[1] + … + DATA[N-1] 다음과 같은 반복처리를 통해 구할 수 있다. 1단계: 합계를 저장하는 변수 SUM 을 0으로 초기화 2단계: 합계에 더하는 배열 요소를 가리키는 첨자를 저장하는 변수 I를 0으로 초기화 3단계: I가 N 미만이라면 다음 4~5단계를 반복한다 4단계: SUM + DATA[I]를 계산하여 그 값을 SUM에 대입한다 5단계: I의 값에 1을 더한다  39. 배열 안 요소의 개수를 구하려면 카운터를 준비한다 배열 데이터의 요소 개수 미리 고정 값으로 정함 다른 변수로 관리 배열 마지막 요소의 끝에 보초 값…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(2)","date":"August 05, 2022"},"fields":{"slug":"/220805-algorithm-book-with-pic/"}}},{"node":{"id":"124907a4-11c5-5781-a21a-ae0725b8d13f","excerpt":"36. 1~N의 합을 구하려면 반복 처리한다. 1~N의 합은 다음 계산식으로 구할 수 있다. 1 + 2 + 3 + … + (N-1) + N 다음과 같이 반복처리를 통해 구할 수 있다. 1단계: 합계를 저장하는 변수 SUM을 0으로 초기화한다. 2단계: 합계에 더할 값을 저장하는 변수 VALUE에 1을 저장한다. 3단계: VALUE에 N 이하인 동안에 다음 4~5단계를 반복한다. 4단계: SUM + VALUE를 계산해 그 값을 SUM에 대입한다. 5단계: VALUE값을 1 증가시킨다. 37. 수열의 값을 유지하려면 배열을 사용한다 다양한 수열의 값을 유지하려면 배열을 사용하는 것이 가장 간단하다. 예: 피보나치 수열을 배열에 저장하고 유지하자 피보나치 수열: n번째(n ≥ 0)의 값을 Fn이라고 했을 때, 아래 조건을 만족하는 수열. F0=0 F1=1 Fn+2 = Fn + Fn+1 (n≥0) 1번째 요소부터 N개(n ≥ 2)의 피보나치 수열을 배열 F에 저장하는 알고리즘은 아래와 같…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(1)","date":"August 04, 2022"},"fields":{"slug":"/220804-algorithm-book-with-pic/"}}},{"node":{"id":"461b000e-6650-5607-9853-4eb382e99399","excerpt":"1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (7) 35. 정점과 간선으로 항목들의 관계를 그림으로 표현한 것이 그래프 그래프: 2개 이상의 항목이 어떤 관계를 맺고 있는지 주목하고 그 관계를 그림으로 표현한 것. 정점(노드): 표현하는 항목 간선(Edge): 각 항목들의 관계를 표현하는 선 그래프의 간선에는 방향성이라는 특성을 부여할 수 있다 ⇒ 방향있는 그래프 (ex. 일방통행) 방향성이 없는 간선 ⇒ 방향없는 그래프 간선에 가중치(비용)이 있는 그래프. ⇒ 가중 그래프 칼럼. BASE를 0으로? BASE를 1로? 1번째 요소 번호를 1로 정한 프로그래밍 언어 컴퓨터 개발 초창기의 프로그래밍에 자주 사용되던 언어들: Fortran, Pascal, Basic(초기형) 1번째 요소를 0으로 정한 프로그래밍 언어 현재 주류 언어들 C, C++, Java, C#, VisualBasic(BASIC)","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 4장 - 자료구조 (7)","date":"August 03, 2022"},"fields":{"slug":"/220803-algorithm-book-with-pic/"}}},{"node":{"id":"a6e51229-04e4-592c-810e-81fca7b7f50f","excerpt":"1. 배경 상황 쿠버네티스 기반 컨테이너 마이그레이션 프로젝트에서 Pod 내의 파일을 local로 다운받아달라는 요청이 들어왔다. 이전 담당 시스템에서도 비슷한 요청(로그 파일을 다운받아달라는 요청)이 있었으나 그 때 당시 알아보았을 때에는 다운로드가 되지 않아 다른 방법을 취했었는데, 이번에 요청을 받고 알아보니 당시와는 환경이 달라 아주 간단하게 파드(Pod)에서 로컬(local)로 파일을 다운로드 받을 수 있었다. 참고로 이전 담당시스템에서 local 복사가 불가했던 이유는 시스템에서 내가 kubectl을 사용할 수 없었기 떄문(kubectl을 사용할 수 있는 권한이 없었기 때문)이었다. 이 때에는 로컬 다운로드 대신 해당 파일을 파드에 마운트해 둔 NAS로 옮겨 운영팀에서 직접 NAS에 접속해 확인 및 다운로드를 하실 수 있도록 처리 했었다. 2. 쿠버네티스 Pod - Local 환경간 파일 복사 쿠버네티스 파드에서 local로 파일을 복사하려면  명령어를 사용해주면 된다(…","frontmatter":{"categories":"데브옵스","title":"쿠버네티스(Kubernetes) Pod to Local 파일 복사하는 방법","date":"August 02, 2022"},"fields":{"slug":"/220802-kubernetes-pod-to-local/"}}},{"node":{"id":"b455ba9a-d964-553f-96fb-67825394dbf1","excerpt":"1. 배경 상황 오픈소스 컨트리뷰션 아카데미에서 쿠버네티스 한글화 프로젝트를 진행중인데, 커밋들이 섞여 올라가서 중간 커밋을 삭제해야하는 상황이 발생했다. 조금 더 구체적으로 설명하자면, 내가 한글화 작업을 진행할 때에는 task별로 이슈를 생성하고(혹은 이미 생성된 이슈에 코멘트를 달아 task를 할당 받고), 이슈별로 PR을 생성해 올리고 있다. 그리고 이슈별로 로컬 브랜치를 생성해 작업 내역들을 분리해 관리하고 있는데… 작업 도중에 외출하고 다녀와서 다른 브랜치로 전환해 작업하다보니  다른 이슈에 대한 작업 커밋을 같이 섞어 올려버렸다🤦 (PR을 생성하기 전에는 항상 git log와 git status를 생활화 하도록 하자…) 2. 해결 방법 순간 PR을 얼른 삭제하고 git reset으로 커밋내역을 싹 감아올린 다음에 새로 작업해서 올릴까 했지만 아무리 생각해도 너무 비효율적인 방법인 듯 해 구글링을 해보니 중간 커밋 내역만 삭제하는 방법이 있었다. 먼저  로 interac…","frontmatter":{"categories":"데브옵스","title":"깃헙(github) 중간 커밋 삭제하기(git rebase -i / git drop)","date":"August 01, 2022"},"fields":{"slug":"/220801-git-rebase-drop/"}}},{"node":{"id":"5a8cf3c6-c4db-5778-b797-162bf07fd1bf","excerpt":"1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (6) 33. 부모 노드의 값이 자식 노드의 값보다 항상 적은 이진 트리는 힙(Heap) 힙(Heap): 각 노드의 값이 다음 조건을 충족하도록 관리되는 이진트리 부모 노드의 값은 항상 하위 노드 값보다 작다(또는 부모 노드의 값은 항상 하위 노드 값보다 크다) 첫번째 경우 자식 노드의 값은 둘 중 어느쪽이 크더라도 상관 없음. 위 조건에 따라 관리되는 힙은 뿌리 부분에 모든 값 중 가장 작은 값(또는 가장 큰 값)이 배치됨. 최소 값(또는 최대 값)을 효율적으로 구하는 용도에 적합. 힙을 구현할 때 일반적으로 배열을 사용. 배열 요소 번호 1번 = 힙의 뿌리요소. 깊이가 작은 쪽 → 큰 쪽 노드의 왼쪽 → 오른쪽  34. 해시 테이블은 배열과 리스트를 조합한 자료 구조 해시 테이블(Hash Table): 아래 2개 자료구조가 조합된 것 N개의 요소를 가진 루트 배열이라는 이름의  배열 루트 배열의 각 요소가 가리키는 리스트 먼저 …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 자료구조 (6)","date":"July 31, 2022"},"fields":{"slug":"/220731-algorithm-book-with-pic/"}}},{"node":{"id":"f5933495-b7f4-58dc-aad3-5c99c4f104b8","excerpt":"1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (5) 31. 마지막 요소까지 이동하면 1번째 요소로 되돌아오는 링 버퍼 1차원 배열의 요소들ㅇ르 처음부터 마지막까지 순서대로 조회하려면 배열 요소를 조회할 때 첨자를 1씩 더해나가면 된다. 링 버퍼: 1차원 배열의 1번째 요소와 마지막 요소를 합쳐 배열 마지막 요소의 다음에도 요소가 존재한다고 만드는 자료구조 예 요소가 10개인 BUFFER라는 1차원 배열 ⇒ BUFFER[9]의 다음 요소를 BUFFER[0]으로 설정  32. 부모 하나에 자식 둘이 딸린 구조는 이진트리 이진트리: 다음 요소를 가리키는 포인터를 2개 가진 단방향 리스트 노드: 이진트리의 구성요소 부모 노드: 자식 노드를 2개 이상 가질 수 없다. 자식 노드: 하위에 자식노드가 있을 경우 부모노드가 된다. 뿌리/루트 노드: 부모노드가 없는 노드 잎/리프 노드: 자식 노드가 없는 노드 깊이: 뿌리에서 특정 노드로 도달하기까지 경로의 길이(루트 노드 = 0 기준)","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 자료구조 (5)","date":"July 30, 2022"},"fields":{"slug":"/220730-algorithm-book-with-pic/"}}},{"node":{"id":"bc0ae98b-2553-53c3-bea8-98a893445eb3","excerpt":"오픈소스 컨트리뷰션 아카데미 쿠버네티스 한글화 프로젝트 3주차 Action Item 중 하나인 diff_l10n_branches.py 스크립트 실행해보기를 진행하고 기록으로 남겨보려 한다. diff_l10n_branches.py 스크립트는 쿠버네티스 한글화 프로젝트에서 마일스톤(약 3주 주기로 한글화 전용 개발 브랜치에서 k8s 메인 브랜치로 병합하는 주기)별로 기존에 번역된 문서 중 업데이트가 필요한 문서를 리포트형식으로 뽑아주는 스크립트이다. 따라서 마일스톤이 바뀔때마다 이 스크립트를 사용해 리포트를 뽑은 뒤, 이슈를 생성하여 컨트리뷰터들이 자율적으로 일감을 맡아 업데이트를 진행하게 된다.  1. 사전 준비  저장소를 개인 저장소로 fork한 뒤, fork한 저장소를 로컬에 clone해 놓는다(참고 링크). python3를 설치(macOS의 경우 brew로 다운로드)한다. 스크립트 실행에 필요한 모듈을 다운로드한다(참고 링크). website > scripts 하위에 위치한  …","frontmatter":{"categories":"OSSCA","title":"오픈소스 컨트리뷰션 아카데미(쿠버네티스 한글화) - diff_l10n_branches.py 스크립트 실행해보기","date":"July 29, 2022"},"fields":{"slug":"/220729-ossca-kubernetes-git-diff/"}}},{"node":{"id":"0dbd4ea1-d967-5033-a2f0-be987664ceca","excerpt":"1. 왜 아마존은 파워포인트를 사용하지 않는가? 이전 제프 베조스가 컨설턴트를 고용한 뒤 프레젠테이션을 들었을 때, 복잡한 그림이 시선을 어지럽히기만 할 뿐 구체적 내용과 무엇을 제안하려는지는 명확히 알 수 없었던 경험에서 유래 되었다. 파워포인트로 만든 자료는 내용의 요점을 불렛 포인트로 나열했을 뿐으로, 발표자에 질문을 던져야 비로소 상세 내용을 구두로 설명하는 경우가 많다. 따라서 때로는 시간이 지난 후 자료를 읽었을 때 내용을 기억해 내기 어려울 때도 많기 때문에 아마존에서는 업무 문서를 작성할 때 A4용지 한 장 분량의 “1 Pager”와 “6 Pager”로 정리한다. 또한 문서를 이용해 새로운 아이디어를 제안하는 자리에서는 참석한 사람들 모두 15~20분 정도 읽는 시간을 가진다. 또한 문서를 읽은 후에는 페이지별 궁금한 점을 묻고 답하며 논의를 발전시킨다.  2. 업무 문서를 작성하는 5개 원칙 업무의 효율화 필요 정보를 참석자 전원에 미리 제공해 회의 시간을 단축하고…","frontmatter":{"categories":"etc","title":"아마존(Amazon)의 문서 작업 방식, 6 Pager란?","date":"July 28, 2022"},"fields":{"slug":"/220728-etc-amazon-6pager/"}}},{"node":{"id":"b7b70ea3-8872-5f44-b49c-770f60abbd46","excerpt":"1. Django 관리자 소개 💡Django 철학 직원 혹은 고객이 컨텐츠를 수정하기 위한 관리자 사이트를 생성하는 것은 지루한 작업이다. 따라서 Django에서는 모델에 대한 관리용 인터페이스를 자동으로 생성한다. Django는 Lawrence Journal-World 신문사의 프로그래머가 처음 개발했다. 이런 태생적 이유로 “컨텐츠 게시자”와 “공개” 사이트의 구분이 명확하다. 사이트 관리자는 뉴스 기사, 사건, 스포츠 경기 결과 등을 시스템에 추가한다. 이렇게 추가한 컨텐츠는 “공개”사이트에 노출된다. Django는 사이트 관리자가 컨텐츠를 편집하는 통합 인터페이스를 생성하는 문제를 해결한다. 관리자 사이트는 사이트 방문자가 아닌 사이트 관리자를 위한 것이다.  1. 관리자 생성하기 관리자 사이트에 로그인 할 수 있는 사용자를 생성한다.  2. 개발 서버 시작 관리자 사이트는 기본으로 활성화 되어 있다. 서버가 동작하고 있지 않다면 다음 명령으로 실행해준다. 웹 브라우저를 열…","frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(3)관리자 및 관리자 사이트 생성","date":"July 27, 2022"},"fields":{"slug":"/220727-programming-python-django-tutorial3/"}}},{"node":{"id":"24e06a85-7e42-51a2-94ac-ed60de158d13","excerpt":"1. 데이터베이스 설치 settings.py를 열어보자. settings.py는 Django 설정을 모듈 변수로 표현한 보통의 Python 모듈이다. Django에서는 기본적으로 SQLite를 사용하도록 구성되어있으며(Python에서 기본으로 제공되어 별도 설치 불필요), 이번 실습에서는 SQLite를 활용하여 데이터베이스를 구성하도록 한다. 만약 다른 데이터베이스를 사용하고 싶은 경우 DATABASES의 키 값을 적절히 변경해준다(상세 설명은 공식문서를 참고한다).  1. settings.py설정 settings.py의 TIME_ZONE 설정값을 수정해 현재 작업하고 있는 시간대를 맞춰준다. settings.py의 INSTALLED_APPS는 현재 Django 인스턴스에서 활성화된 모든 Django 어플리케이션들의 이름이 들어있다. 앱들은 다수의 프로젝트에서 사용될 수 있고, 다른 프로젝트에서 쉽게 사용될 수 있도록 패키징하여 배포할 수 있다. INSTALLED_APPS에 기본적…","frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(2)데이터베이스 설치, API 실습","date":"July 26, 2022"},"fields":{"slug":"/220726-programming-python-django-tutorial2/"}}},{"node":{"id":"0bb5b921-258d-515f-8368-c5cbfb938460","excerpt":"1. 배경 상황 Django 실습 내용을 Github 저장소에 업로드해서 소스코드를 관리하려고 새롭게 깃허브 저장소를 생성하고 코드를 올렸었다. 그런데 올리자마자 메일 알람이 울리는 것;;; 내용을 확인했더니 GitGuardian이라는 곳에서 온 “Django Secret Key exposed on GitHub”이라는 보안 알람 메일이었다. 깜짝 놀라서 소스코드를 뜯어봤더니 settings.py에 SECRET_KEY가 대놓고 들어있어서 얼른 github에 생성했던 저장소를 삭제했다(실습 시작한지 진짜 얼마 안되어서 다행이었음). 이 SECRET_KEY는 Django의 보안 관련 기능에 사용하는 값으로, 다음과 같은 경우에 사용된다. 가 아닌 다른 세션 백엔드를 사용하는 경우 혹은 기본 get_session_auth_hash()를 사용하는 모든 sessions. CookieStorage 혹은 FallbackStorage를 사용하는 모든 messages. 모든 PasswordReset…","frontmatter":{"categories":"프로그래밍","title":"Python Django settings.py의 SECRET_KEY 변경 및 분리하기","date":"July 25, 2022"},"fields":{"slug":"/220725-programming-python-django-tutorial2 copy/"}}},{"node":{"id":"6065efab-2d62-5dc8-bd37-551b0b37291c","excerpt":"“한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의의 Django 파트를 수강하고 있는데, 생각보다 설명이 생략된 부분이 많아 코드 따라치기만 하게 되는듯해 Django 공식문서의 튜토리얼을 따라해 이해도를 높인 다음 다시 들으려한다. 이 글은 Django 문서의 첫 번째 장고 앱 작성하기 튜토리얼을 참고해 실습한 내용을 정리한 것이다.  1. 산출물 Polls라는 이름의 간단한 설문조사 애플리케이션을 제작 Public: 사람들이 설문 내용을 보고 직접 투표할 수 있는 개방된 사이트 Private: 관리자가 설문을 추가, 변경, 삭제할 수 있는 관리용 사이트  2. 사전 작업  를 설치한다(Django 4.0버전 기준. Python 3.8이상 버전 설치 권장). Django가 설치가 잘 되었는지 확인하기 위해 아래의 명령어를 실행한다. 설치가 되지 않았다면 “No module named django”와 같은 에러가 발생한다.  3. 프로젝트 생성 프로젝트를 저장할 …","frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(1)프로젝트/앱 생성하고 view 작성하기","date":"July 24, 2022"},"fields":{"slug":"/220724-programming-python-django-tutorial1/"}}},{"node":{"id":"ff846ecb-d635-520a-ac5a-6ef3c9284767","excerpt":"1. 배경 상황 며칠 전 에 대해 알아보는 포스팅을 올린 적이 있는데, 관련해서 를 적용했음에도 불구하고 커밋 내역에 해당 파일이 계속 남아잇는 문제가 발생해 해결 방법을 적어두려 한다.  2. 해결 방법 에 파일을 추가했음에도 불구하고 파일이 계속해서 커밋 목록에 남아 있는 것은 에 파일을 추가하기 전 stage에 올라갔던 파일들이 캐시가 남아있어 커밋 목록에 뜨게 되는 것이라고 한다. 따라서 해당 파일이 들어 있는 디렉터리로 이동한 후, 아래와 같이 캐시를 삭제해주는 명령어를 입력해주면 된다.  ; 현재 디렉터리를 지정 이렇게 캐시를 지운 뒤, git add와 git commit으로 다시 커밋을 생성해주면 이제 가 제대로 적용되는 것을 확인할 수 있다.","frontmatter":{"categories":"데브옵스","title":"Git에서 .gitignore가 적용이 되지 않는 에러 해결 방법","date":"July 23, 2022"},"fields":{"slug":"/220723-git-cannot-apply-gitignore/"}}},{"node":{"id":"a089eff5-0daa-5948-8e22-aeae309fa73f","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :) 1. UserData 추가 Django는 프로젝트 생성시에 user 데이터베이스를 생성하기때문에 User 데이터베이스를 수정하기는 쉽지 않다. AbstractUser: 현재 사용하고 있는 유저를 추상화해서 PayPlan을 넣겠다라는 것. 두 가지 방법이 있음 class Users → 한 테이블에 쌓임 class UserDetail → 두 테이블에 쌓임 AbstrctUser로 유저에 추가정보를 넣게 될 경우 settings.py에서 파일 내용을 아래와 같이 수정해야한다.  위에  을 추가해 shortener의 Users 클래스를 사용할 것을 명시해주어야 한다(인증을 위해서 어떤 데이터/테이블을 사용할 것인지를 지정해주는 것). 패스트캠퍼스 강의 등록하기: https://bit.ly/3L3avNW #패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시…","frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 71일차","date":"July 22, 2022"},"fields":{"slug":"/220722-python-day71/"}}},{"node":{"id":"35042548-9482-5c69-bc87-3c3fe48c75c3","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :)  04. Django Database Modeling (2) 1. Database Modeling 지난 시간에 이어 PayPlan에 대해 모델링을 진행할 것 class로 models라는 모듈의 Model을 상속받아온다. 컬럼 이름 및 데이터 타입 정의(예: name → 컬럼 이름, CharField → 데이터 타입) price의 경우 미국 등의 경우 integer를 사용할 수 없으나 한국 원화의 경우 integer를 사용해도 무방. 실제로 코드에 적용해보자. SHRINKERS > shortner > models.py 파일을 아래와 같이 수정해준다. class를 추가해 준 뒤에는 잠시 주석처리 해둔다. Terminal > New Terminal로 새 터미널 창을 연 다음 아래 명령어를 실행해준다. 위 명령어를 통해 Django 프레임워크가 필요로 하는 데이터 베이스를 생성한…","frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 70일차","date":"July 21, 2022"},"fields":{"slug":"/220721-python-day70/"}}},{"node":{"id":"b6772987-26b2-56e6-95a5-794630d9b30b","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :)  03. Django Database Modeling(1) 1. DB 모델링이란? 어떤 Item에 속성데이터(의 포맷)를 사전에 정의하는 것 예: Jobs 이라는 Table에 각 Job의 정보를 정의 산업 연봉 근무지 수정일 생성일 2. Django Modeling Django에서 id는 기본 값(Primary Key: PK) 정의하지 않아도 자동 정의 (Django의 특수 기능) id외의 다른 컬럼을 PK로 사용하고 싶다면 primary key = true 해서 컬럼을 생성 & id 컬럼 생성되지 않음 외래 키(Foreign Key)를 사용하면 뒤에 xxxx_id를 자동 생성 예: Job에 위치를 추가하고 싶은데 위치가 다른 테이블에 있는 경우, location으로 정의해주면 location_id로 데이터 컬럼이 생성됨 3. Django DB 컬럼 타입 Django 3.…","frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 69일차","date":"July 20, 2022"},"fields":{"slug":"/220720-python-day69/"}}},{"node":{"id":"98168d94-0dc3-52d4-8394-c0fdd6d28044","excerpt":"는 지금까지 업무에서 종종 사용하고 있었는데, 집에서 Django 실습 진행하다가 를 사용할 일이 생겨 다시금 개념과 사용 방법을 정리해두려 한다.  1. .gitignore란? 프로젝트 내에 remote 저장소에 올리고 싶지 않은 파일이 있을 경우 Git에서 제외할 수 있는 설정 파일이다. 일반적으로 IDE tool과 관련된 설정파일(예를 들면 이클립스의  나  파일), 백업파일이나 로그, 컴파일/빌드가 완료된 파일, 시크릿 정보(AWS root 계정 접속 key나 Django secret key 등)을 제외할 때 사용한다.  2. .gitignore 사용법 .gitignore 파일은 항상 최상위 디렉터리에 존재해야 한다고 한다. .gitignore 파일을 생성 후, 제외할 파일명을 지정해주면 되는데, 여러 옵션을 사용할 수 있다. 위와 같이 제외할 파일을 지정한 뒤에는 GitHub과 같은 원격 저장소에 소스코드와 함께  를 push 해주면 적용된다.","frontmatter":{"categories":"데브옵스","title":"Git의 .gitignore란? (+사용방법)","date":"July 20, 2022"},"fields":{"slug":"/220720-git-gitignor/"}}},{"node":{"id":"ab3fa962-b120-5ff3-8b53-57c5b5bf98a0","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :) 02. Django 프로젝트 시작 1. PEP8 Coding Convention (1) Coding Convention 여러 사람이 협업을 해도 모두가 읽기 편한 코드를 작성하기 위한 기본 규칙 한 줄의 문자열은 79자 DocString은 72자 snake_case(소문자_소문자) 사용 모듈 레벨 상수는 모두 대문자 ClassName은 Caplitalized Word(단어의 앞 철자만 대문자) 한줄로 된 if, try … except, for, while 구문은 사용하지 않는다. 하지만 Local Rule이 더 중요하다. (2) Django 에서의 Coding Convention 한 줄의 문자열은 119자 추천 DocString 은 72자  2. Zen of Python (1) PEP20 - Zen of Python Beautiful is better than ugly. …","frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 68일차","date":"July 19, 2022"},"fields":{"slug":"/220719-python-day68/"}}},{"node":{"id":"d75909d8-b20a-524a-ae6a-048d41f54980","excerpt":"1. 배경 상황 패스트캠퍼스의 한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online 강의 중 Django 파트의 데이터베이스 모델 생성 실습을 따라하다가 아래와 같은 에러가 발생했다.  2. ‘No changes detected’ 에러 해결 방법 구글링을 해보니  뒤에 앱 이름을 명시해주면 해결 된다고 한다. 강의에서는 따로 앱 이름이 명시되지 않아 다른 사람들이 위 명령어를 성공했을 때 터미널에 발생하는 메시지와, 강의에서 보이는 명령어 성공 메시지를 대조해서 아래와 같이 앱 이름을 추측하여 명령어를 다시 실행해보았다. 이제는  라는 에러가 발생한다.  3. ‘No installed app with label’ 에러 해결 방법 에러메시지의 뜻을 풀이하면, ‘설치된 앱 중에 ‘shortener’라는 레이블을 달고 있는 앱이 없다’ 라는 뜻이다. 그렇다면 설치된 앱에 대한 정보는 어디에 저장되어있을까?  디렉터리의  섹션을 참고하면 된다. 내 프로젝트에서 해당 섹션에 적혀져있는…","frontmatter":{"categories":"프로그래밍","title":"Python Django makemigrations No changes detected & No installed app with label 원인 및 해결","date":"July 19, 2022"},"fields":{"slug":"/220718-python-makemigration-error/"}}},{"node":{"id":"a63bfc26-7eaf-55c2-a612-a0d3f5c1259d","excerpt":"지난 달 말 쯤 패스트캠퍼스에서 진행하던 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 캐시백 챌린지가 끝났다. 하지만 강의는 아직 들을 것들이 많이 남아서…^^ 캐시백 리워드는 없지만 셀프(?)로 1일 1포스팅 챌린지를 재개해보려 한다.  01. Django 웹 프레임워크의 이해 1. Why Django? 파이썬 웹 프레임워크 순위 2위(1위 Flask, 3위 FastAPI) Django의 철학 Batteries Included: 필요한 것이 무엇이건 Django안에, 커뮤니티 안에 있다는 뜻 다양한 사용이 가능: 문서, SNS, 뉴스, 블로그 등 안전하다: ID/PW, 세션 관리, XSS, SQL Injection, Click Hijacking Shared-nothing Architecture: 확장성(의존성이 없음) ex. Very Maintainable - DRY(Don’t Repeat Yourself) - 불필요한 중복 코드 제거  2. Referenc…","frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 67일차","date":"July 18, 2022"},"fields":{"slug":"/220718-python-day67/"}}},{"node":{"id":"0ea92a84-5ede-530b-af72-57c6d8bf8188","excerpt":"참고: 이 포스팅은 유투브에 올라온 Kubernetes 오픈소스 컨트리뷰션 방법 소개 (한글화 기여를 통해 쿠버네티스에 참여하기, CNCG2020 발표) 및 [Youtube]초간단 쿠버네티스 문서 한글화 시작 가이드 영상, Kubernetes Contributor Cheatsheat, 쿠버네티스 문서 한글화 가이드 문서를 참조하여 직접PR을 올린 경험을 토대로 작성 된 자료입니다. 혹시 잘못된 부분이 있을 경우에는 메일(jinnypark9393@gmail.com)로 알려주시면 반영하도록 하겠습니다 😊  쿠버네티스 공식문서 한글화에 기여하는 방법 시리즈 쿠버네티스 공식문서 한글화에 기여하는 방법(1)사전준비 & 이슈 생성하기 쿠버네티스 공식문서 한글화에 기여하는 방법(2)소스코드 복사 & 번역하기 쿠버네티스 공식문서 한글화에 기여하는 방법(3)PR(Pull Request)생성 & CLA 서명 (작성중) 쿠버네티스 공식문서 한글화에 기여하는 방법(4)리뷰 내용 반영 & 승인 완료 (작…","frontmatter":{"categories":"OSSCA","title":"오픈소스 컨트리뷰션 아카데미(쿠버네티스 한글화) - 쿠버네티스 공식문서 한글화에 기여하는 방법(2)소스코드 복사 & 번역하기","date":"July 17, 2022"},"fields":{"slug":"/220717-ossca-kubernetes-docs-localization2/"}}},{"node":{"id":"4e6447ea-f6b8-57f4-a411-c0fdb52f9d47","excerpt":"그림으로 배우는 알고리즘 제 3장: 자료구조 (4) 29. N번째 요소의 참조가 빠른 것은 배열, 느린 것은 리스트 구조 N번째 요소 조회 예: 나열된 데이터에서 5번째 요소를 조회 배열 요소 번호를 사용해 바로 찾아낼 수 있다. ARRAY[5] 어떠한 요소를 조회하더라도 모든 시간적 비용은 동일하다. 리스트: 1번째 데이터부터 차례대로 끄능ㄹ 따라가야한다. 1번째 요소를 조회한다. 1번째 요소의 끈을 따라 2번째 요소를 조회한다. 2번째 요소의 끈을 따라 3번째 요소를 조회한다. 3번째 요소의 끈을 따라 4번째 요소를 조회한다. 4번째 요소의 끈을 따라 5번째 요소를 조회한다. ⇒ 요소의 수가 많을 수록 느려진다. 30. 데이터의 삽입/삭제가 빠른 것은 리스트, 느린 것은 배열 데이터 삽입 새로운 데이터를 순서대로 나열된 데이터 열의 특정 위치에 삽입 배열: 삽입 위치 다음에 존재하는 모든 데이터를 뒤로 이동시켜야 한다(예: 삽입 데이터 뒤에 1,000개 데이터 존재 시 데이터 …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 기본적인 알고리즘(4)","date":"July 16, 2022"},"fields":{"slug":"/220716-algorithm-book-with-pic/"}}},{"node":{"id":"316014cd-ea07-58bc-b345-4b3177a0da56","excerpt":"제 4장: 기본적인 알고리즘(3) 40. 배열 데이터의 평균 값은 반복 처리를 통해 합계와 개수를 구한 후 계산한다 배열의 끝에 저장된 보초 값으로 배열 데이터 개수를 관리하는 배열의 평균값 계산 배열의 합계와 배열의 개수를 구한 뒤 평균 계산 예시: 어떤 학급의 기말점수 (0~100)가 저장된 배열 JUM(배열 끝 보초값 —1)의 평균값은? 평균 = 총점 / 학급 인원 수 학급 인원 수 = COUNT (유효한 요소의 개수를 세는 변수) 총점 = SUM (배열 요소의 합계 값을 저장하는 변수) 1단계: 변수 COUNT와 합계를 저장하는 변수 SUM을 0으로 초기화한다. 2단계: 배열 JUM의 첨자를 저장하는 변수 I를 0으로 초기화한다. 3단계: JUM[I]이 보초 값(-1)을 가리키지 않는 동안, 다음의 4~5 단계를 반복한다. 4단계: Count에 1을 더하고 SUM에 SUM + JUM[I]를 저장한다. 5단계: I에 1을 더한다. 6단계: 평균 값을 저장하는 변수 AVE에 S…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 기본적인 알고리즘(3)","date":"July 15, 2022"},"fields":{"slug":"/220715-algorithm-book-with-pic/"}}},{"node":{"id":"52a0186f-bc0a-5201-a5ac-13aaf7ef75bc","excerpt":"제 4장: 기본적인 알고리즘(2) 38. 배열 데이터의 합을 계산하려면 더한 값을 저장할 변수를 준비한다 여러 데이터의 합을 구하는 처리 ⇒ 배열 합계 알고리즘 예시 시험점수의 총 합 계산 일일 입장객의 수를 통해 해당 월 전체 입장객 수 구하기 각 지점의 매출액을 합해 전 지점 매출액 구하기 데이터 N개의 합을 구하는 계산식 DATA[0] + DATA[1] + … + DATA[N-1] 다음과 같은 반복처리를 통해 구할 수 있다. 1단계: 합계를 저장하는 변수 SUM 을 0으로 초기화 2단계: 합계에 더하는 배열 요소를 가리키는 첨자를 저장하는 변수 I를 0으로 초기화 3단계: I가 N 미만이라면 다음 4~5단계를 반복한다 4단계: SUM + DATA[I]를 계산하여 그 값을 SUM에 대입한다 5단계: I의 값에 1을 더한다 39. 배열 안 요소의 개수를 구하려면 카운터를 준비한다 배열 데이터의 요소 개수 미리 고정 값으로 정함 다른 변수로 관리 배열 마지막 요소의 끝에 보초 값 …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 기본적인 알고리즘(2)","date":"July 14, 2022"},"fields":{"slug":"/220714-algorithm-book-with-pic/"}}},{"node":{"id":"7da6507f-761d-5f51-9f21-38a4a4670772","excerpt":"제 4장: 기본적인 알고리즘(1) 36. 1~N의 합을 구하려면 반복 처리한다. 1~N의 합은 다음 계산식으로 구할 수 있다. 1 + 2 + 3 + … + (N-1) + N 다음과 같이 반복처리를 통해 구할 수 있다. 1단계: 합계를 저장하는 변수 SUM을 0으로 초기화한다. 2단계: 합계에 더할 값을 저장하는 변수 VALUE에 1을 저장한다. 3단계: VALUE에 N 이하인 동안에 다음 4~5단계를 반복한다. 4단계: SUM + VALUE를 계산해 그 값을 SUM에 대입한다. 5단계: VALUE값을 1 증가시킨다. 37. 수열의 값을 유지하려면 배열을 사용한다 다양한 수열의 값을 유지하려면 배열을 사용하는 것이 가장 간단하다. 예: 피보나치 수열을 배열에 저장하고 유지하자 피보나치 수열: n번째(n ≥ 0)의 값을 Fn이라고 했을 때, 아래 조건을 만족하는 수열. F0=0 F1=1 Fn+2 = Fn + Fn+1 (n≥0) 1번째 요소부터 N개(n ≥ 2)의 피보나치 수열을 배열 …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제 3장 - 기본적인 알고리즘(1)","date":"July 13, 2022"},"fields":{"slug":"/220713-algorithm-book-with-pic/"}}},{"node":{"id":"e6a7be9e-63c2-532d-9ee2-7fcda482a295","excerpt":"1. IP주소란? IP(Internet Protocol)주소: 글로벌 단위에서 장치간의 통신이 가능하도록 도와주는 논리적 주소이다. 때때로 변할 수 있는 값이다. 소프트웨어 설정을 통해 장치에 할당된다. 비신뢰성과 비연결성이 특징으로, 전송 과정에서 패킷이 손상되거나 순서가 섞일 수 있으므로 TCP와 같은 상위 프로토콜을 이용해야한다.  2. MAC 주소란? MAC(Media Access Control) 주소: 기기(Device)마다 할당된 물리적인 주소이다. MAC주소는 이더넷 통신을 하기위해 사용되며, 다른 MAC주소와 겹치지 않는다. 변하지 않는 값이다. ARP(Address Resolution Protocol) 프로토콜을 이용해 IP주소를 MAC주소와 매칭한다. 총 48비트로 구성되며 :로 구분한다.  3. IP주소가 필요한 이유 현재는 세계에 장비가 매우 많기 때문에 MAC 주소로만 통신하기가 어렵다. 예를 들어, 한국의 A컴퓨터에서 미국에 있는 B컴퓨터로 가기 위해서 나…","frontmatter":{"categories":"CS","title":"IP(Internet Protocol)주소란?","date":"July 12, 2022"},"fields":{"slug":"/220712-cs-ip-address/"}}},{"node":{"id":"79aefd53-8275-5427-a223-7d9ee2a36049","excerpt":"기술면접에서 접했던 질문 중 ‘캐시에 대해 설명해달라’는 내용이 있었는데, 너무 짧게 대답한 듯 하여 다시 공부하고자 포스팅을 작성하게 되었다. 참고로 캐시 개념은 쿠키, 세션과 많이 연관지어 설명이 되어있어서 캐시 뿐만 아니라 HTTP의 특성과, 쿠키, 세션도 캐시와 함께 알아보도록 하겠다.  1. HTTP의 특징 HTTP 프로토콜은 Stateless와 Connectionless라는 두 가지 특성을 가졌다. (1) Stateless 클라이언트의 상태 정보를 가지지 않는 처리 방식이다. 클라이언트와 첫번째 통신에서 데이터를 주고 받았다 해도, 두번째 통신에서 이전 데이터를 유지하지 않는다. (2) Connectionless 클라이언트가 서버에 요청(request)을 했을 때, 그 요청에 맞는 응답(Response)를 보낸 후 연결을 끊는 처리 방식이다. 다만, HTTP/1.1 버전에서 연결을 유지하고, 재활용하는 기능이 Default로 추가되었다(keep-alive 값으로 변경 가…","frontmatter":{"categories":"CS","title":"쿠키(Cookie), 세션(Session), 캐시(Cache)란?","date":"July 11, 2022"},"fields":{"slug":"/220711-cs-api/"}}},{"node":{"id":"389d21a3-0a5d-55aa-bd51-f5feb8772d36","excerpt":"기술면접에서 접했던 질문 중 ‘캐시에 대해 설명해달라’는 내용이 있었는데, 너무 짧게 대답한 듯 하여 다시 공부하고자 포스팅을 작성하게 되었다. 참고로 캐시 개념은 쿠키, 세션과 많이 연관지어 설명이 되어있어서 캐시 뿐만 아니라 HTTP의 특성과, 쿠키, 세션도 캐시와 함께 알아보도록 하겠다.  1. HTTP의 특징 HTTP 프로토콜은 Stateless와 Connectionless라는 두 가지 특성을 가졌다. (1) Stateless 클라이언트의 상태 정보를 가지지 않는 처리 방식이다. 클라이언트와 첫번째 통신에서 데이터를 주고 받았다 해도, 두번째 통신에서 이전 데이터를 유지하지 않는다. (2) Connectionless 클라이언트가 서버에 요청(request)을 했을 때, 그 요청에 맞는 응답(Response)를 보낸 후 연결을 끊는 처리 방식이다. 다만, HTTP/1.1 버전에서 연결을 유지하고, 재활용하는 기능이 Default로 추가되었다(keep-alive 값으로 변경 가…","frontmatter":{"categories":"CS","title":"쿠키(Cookie), 세션(Session), 캐시(Cache)란?","date":"July 11, 2022"},"fields":{"slug":"/220711-cs-cookie-session-cache/"}}},{"node":{"id":"6dbc8f98-ed8b-5199-a518-7ab8afbbd33f","excerpt":"참고: 이 포스팅은 유투브에 올라온 Kubernetes 오픈소스 컨트리뷰션 방법 소개 (한글화 기여를 통해 쿠버네티스에 참여하기, CNCG2020 발표) 및 [Youtube]초간단 쿠버네티스 문서 한글화 시작 가이드 영상, Kubernetes Contributor Cheatsheat, 쿠버네티스 문서 한글화 가이드 문서를 참조하여 직접PR을 올린 경험을 토대로 작성 된 자료입니다. 혹시 잘못된 부분이 있을 경우에는 메일(jinnypark9393@gmail.com)로 알려주시면 반영하도록 하겠습니다 😊 참고로 쿠버네티스 공식 문서에 공헌하는 방법은 한글화가 되지 않은 영문 페이지를 한국어로 번역 한국어 페이지에서 오타 또는 틀린 내용의 수정 영문 페이지에서 오타 또는 틀린 내용의 수정 등 여러 방법이 있지만, 나는 첫 번째 방법인 한글화가 되지 않은 영문 페이지를 한국어로 번역하는 방법에 대해 설명하도록 하겠다.  쿠버네티스 공식문서 한글화에 기여하는 방법 시리즈 쿠버네티스 공식문서…","frontmatter":{"categories":"OSSCA","title":"오픈소스 컨트리뷰션 아카데미(쿠버네티스 한글화) - 쿠버네티스 공식문서 한글화에 기여하는 방법(1)사전준비 & 이슈 생성하기","date":"July 10, 2022"},"fields":{"slug":"/220710-ossca-kubernetes-docs-localization1/"}}},{"node":{"id":"06b1f5b5-2196-5fe8-8423-67607858be6b","excerpt":"올해 7월 9일(토)부터 2022년도 오픈소스 컨트리뷰션 아카데미 중 “Kubernetes 한글화 컨트리뷰션 및 커뮤니티 참여” 프로젝트에 참가하게 되었다. 그 중 첫번째 과제는 kubernetes.slack.com 가입한 뒤 쿠버네티스 한글화 프로젝트와 관련된  ,  ,  세 채널에 참여하는 것, 그리고 두 번째 과제가 README를 읽고 를 빌드해보는 것이다. 위의 Readme 문서를 살펴보면 로컬/컨테이너 환경에서 빌드하는 방법에 대해 설명되어있는데, 나는 로컬 빌드로 진행해보았다.  1. Hugo란? 쿠버네티스의 공식문서는 Hugo(확장 버전)라는 정적 사이트 생성기(Static Site Generator)를 이용해 만들어졌다. Hugo는 Jekyll, Hexo등과 마찬가지로 정적 웹사이트를 쉽게 만들 수 있게 해주는 생성기로, Go로 쓰여졌다(깃허브 블로그에 가장 많이 사용되는 Jekyll은 Ruby로 쓰여). 찾아보니 Hugo는 다른 정적 사이트 생성기에 비해 반응속도가…","frontmatter":{"categories":"OSSCA","title":"오픈소스 컨트리뷰션 아카데미(쿠버네티스 한글화) - Hugo를 사용하여 로컬에서 웹사이트 실행하기(MacOS)","date":"July 09, 2022"},"fields":{"slug":"/220709-ossca-kubernetes-hugo-local-build/"}}},{"node":{"id":"61ac791a-2627-56a4-9b42-0dbdd1aea7b3","excerpt":"1. 모놀리틱 아키텍처 vs 마이크로서비스 아키텍처 (1) 모놀리틱 아키텍처(Monolithic Architecture) 애플리케이션의 모든 구성 요소가 한 프로젝트에 통합되어있다. 기능별로 독립적이지 않다(예: 한 프로젝트 내에 기능을 폴더로 구분) (2) 마이크로서비스 아키텍처(Microservice Architecture) 하나의 큰 애플리케이션을 작은 애플리케이션으로 쪼개 변경과 조합이 가능하도록 만든 것. 기능별로 독립적인 서비스를 구성한다(예: 기능별 도커 컨테이너 생성) 마틴 파울러와 제임스 루이스에 의하면 마이크로 서비스는 아래와 같다. In short, the microservice architectural style is an approach to developing a single application as a suite of small services, each running in its own process and communicating with light…","frontmatter":{"categories":"데브옵스","title":"마이크로서비스(Microservice)란?","date":"July 08, 2022"},"fields":{"slug":"/220708-devops-microservice/"}}},{"node":{"id":"e76ad179-ad05-53ab-a168-29960527c5c1","excerpt":"1. API란? API(Application Programming Interface): 요청과 응답을 사용하여 두 애플리케이션이 서로 통신하는 방법을 정의한 것이다. API 아키텍처는 클라이언트와 서버로 설명된다. 클라이언트: 요청을 보내는 애플리케이션 서버: 요청을 받는 애플리케이션 예를 들어, 기상청의 시스템에는 일일 기상 데이터가 들어있는데, 휴대폰의 날씨 앱은 API를 이용해 이 시스템과 커뮤니케이션하고 휴대폰에 매일 최신 날씨 정보를 표시한다. API 문서에는 개발자가 요청과 응답을 어떻게 구성하는지에 대한 방법이 들어있다. 2. API의 종류 (1) SOAP API 단순 객체 접근 프로토콜을 사용 XML을 사용하여 메시지를 교환 과거에 많이 사용되었던 API 유연성이 떨어진다. (2) RPC API 원격 프로시저 호출 API이다. 클라이언트가 서버에서 함수/프로시저를 완료하면 서버가 출력을 클라이언트로 다시 전송한다. (3) Websocket API JSON 객체를 사용…","frontmatter":{"categories":"CS","title":"API란? (정의, 종류, 장단점)","date":"July 08, 2022"},"fields":{"slug":"/220707-cs-api/"}}},{"node":{"id":"b8dc8809-1b89-5160-b3a8-239a6349d024","excerpt":"1. 데이터베이스 인덱스(Database Index)란? 데이터베이스 테이블에 대한 검색 성능의 속도를 높여주는 자료구조 책에 있는 목차와 같은 개념으로, 인덱스에서 내가 원하는 데이터를 먼저 찾고 저장되어있는 물리적 주소로 찾아가게 된다. 👍 인덱스를 사용하는 이유 조건검색 Where 절의 효율성 향상 테이블 레코드는 순서 없이 저장되어 Where 절의 조건에 맞는 데이터를 찾을 때 처음부터 끝까지 다 읽게 된다(Full Table Scan) 인덱스 테이블은 데이터가 정렬되어 저장되어있어 Where 조건에 맞는 데이터를 빠르게 찾을 수 있다. 정렬 Order by 절의 효율성 향상 Order by는 부하가 많이 걸리는 작업(1차적으로 메모리에서 정렬 발생 & 메모리보다 작업이 큰 경우 디스크 I/O발생) 인덱스를 사용하면 이미 정렬이 되어있어 Order by에 의한 sort과정을 피할 수 있다. Min / Max의 효율적 처리 레코드의 시작값 & 끝 값 한 건만 가져오면 되기 때…","frontmatter":{"categories":"CS","title":"데이터베이스(Database) 인덱스(Index) 자료구조","date":"July 08, 2022"},"fields":{"slug":"/220708-cs-database-index/"}}},{"node":{"id":"1fc2cf5c-509b-532e-9d14-6d3998a5f61a","excerpt":"DAS, NAS, SAN은 모두 대표적인 스토리지의 종류이며, 각 스토리지는 연결 방식에 차이가 있다. 이번 포스팅에서는 DAS, NAS, SAN의 개념과 차이점에 대해 알아보자. 0. 스토리지(Storage)란? 컴퓨터의 데이터를 저장하는 역할을 수행한다. 컴퓨터 내부의 하드디스크와 유사한 역할을 수행한다고 생각하면 된다.  1. DAS(Data Attached Storage) 서버와 스토리지가 물리적으로 직접 연결되는 방식. 네트워크상의 다른 서버는 저장된 데이터에 액세스가 불가하다. 컴퓨터에 연결하는 외장 하드와 비슷한 개념이라고 생각하면 된다. 2022-07-06-Storage-DAS-NAS-SAN1 서버와 스토리지가 FC(Fiber Channel) cable로 직접 연결된다. 장점 속도가 빠르다(서버에 물리적으로 직접 연결하기 때문). 확장이 쉽다(구축이 쉽다). 단점 연결 수에 한계가 있다.  2. NAS(Network Attached Storage) DAS가 직접 연결…","frontmatter":{"categories":"CS","title":"DAS, NAS, SAN이란? (정의, 차이점)","date":"July 06, 2022"},"fields":{"slug":"/220706-cs-das-nas-san/"}}},{"node":{"id":"df5491e1-bee7-54e2-b84e-5f0d4b5d0d7c","excerpt":"1. “zsh: command not found: virtualenv” 에러 배경 상황 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의의 Django 환경 세팅 부분을 따라하다가 가상환경 설정 부분에서 에러가 발생했다. 찾아보니 가장 간단한 방법으로는 virtualenv를 삭제했다가 다시 깔아보라는 내용이 있어 시도해보았다. 2. “zsh: command not found: pip” 그런데 pip 명령어도 찾을 수 없다는 에러가 발생했다. 2. “zsh: command not found: pip” 해결 방법 1분 전에 pip로 Django를 깔았는데 이럴 수가 있나? 싶어서 Django 설치 때와 동일하게 pip 뒤에 버전명을 붙여 실행하니 해결되었다. 실행결과를 보니 virtualenv 자체가 설치가 안 된 모양. virtualenv가 실행이 되지 않은 게 당연했다. 2. “zsh: command not found: virtualenv” 해결 방법  를 이용해…","frontmatter":{"categories":"프로그래밍","title":"Python zsh: command not found: pip / zsh: command not found: virtualenv 에러 해결","date":"July 05, 2022"},"fields":{"slug":"/220705-python-pip-virtualenv/"}}},{"node":{"id":"c02f90e1-e2ae-5136-b709-eb3276e10abe","excerpt":"1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (7) 35. 정점과 간선으로 항목들의 관계를 그림으로 표현한 것이 그래프 그래프: 2개 이상의 항목이 어떤 관계를 맺고 있는지 주목하고 그 관계를 그림으로 표현한 것. 정점(노드): 표현하는 항목 간선(Edge): 각 항목들의 관계를 표현하는 선 그래프의 간선에는 방향성이라는 특성을 부여할 수 있다 ⇒ 방향있는 그래프 (ex. 일방통행) 방향성이 없는 간선 ⇒ 방향없는 그래프 간선에 가중치(비용)이 있는 그래프. ⇒ 가중 그래프  칼럼. BASE를 0으로? BASE를 1로? 1번째 요소 번호를 1로 정한 프로그래밍 언어 컴퓨터 개발 초창기의 프로그래밍에 자주 사용되던 언어들: Fortran, Pascal, Basic(초기형) 1번째 요소를 0으로 정한 프로그래밍 언어 현재 주류 언어들 C, C++, Java, C#, VisualBasic(BASIC)","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(7)","date":"July 04, 2022"},"fields":{"slug":"/220704-algorithm-book-with-pic/"}}},{"node":{"id":"f99d9ef3-8995-5c9f-b589-2d4943ccf990","excerpt":"1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (6) 33. 부모 노드의 값이 자식 노드의 값보다 항상 적은 이진 트리는 힙(Heap) 힙(Heap): 각 노드의 값이 다음 조건을 충족하도록 관리되는 이진트리 부모 노드의 값은 항상 하위 노드 값보다 작다(또는 부모 노드의 값은 항상 하위 노드 값보다 크다) 첫번째 경우 자식 노드의 값은 둘 중 어느쪽이 크더라도 상관 없음. 위 조건에 따라 관리되는 힙은 뿌리 부분에 모든 값 중 가장 작은 값(또는 가장 큰 값)이 배치됨. 최소 값(또는 최대 값)을 효율적으로 구하는 용도에 적합. 힙을 구현할 때 일반적으로 배열을 사용. 배열 요소 번호 1번 = 힙의 뿌리요소. 깊이가 작은 쪽 → 큰 쪽 노드의 왼쪽 → 오른쪽  34. 해시 테이블은 배열과 리스트를 조합한 자료 구조 해시 테이블(Hash Table): 아래 2개 자료구조가 조합된 것 N개의 요소를 가진 루트 배열이라는 이름의  배열 루트 배열의 각 요소가 가리키는 리스트 먼저 …","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(6)","date":"July 03, 2022"},"fields":{"slug":"/220703-algorithm-book-with-pic/"}}},{"node":{"id":"ba9bfb49-a752-5391-b236-9cd1ef1de1b3","excerpt":"[Algorithm]그림으로 배우는 알고리즘 제 3장: 자료구조 (5) 1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (5) 31. 마지막 요소까지 이동하면 1번째 요소로 되돌아오는 링 버퍼 1차원 배열의 요소들ㅇ르 처음부터 마지막까지 순서대로 조회하려면 배열 요소를 조회할 때 첨자를 1씩 더해나가면 된다. 링 버퍼: 1차원 배열의 1번째 요소와 마지막 요소를 합쳐 배열 마지막 요소의 다음에도 요소가 존재한다고 만드는 자료구조 예 요소가 10개인 BUFFER라는 1차원 배열 ⇒ BUFFER[9]의 다음 요소를 BUFFER[0]으로 설정 32. 부모 하나에 자식 둘이 딸린 구조는 이진트리 이진트리: 다음 요소를 가리키는 포인터를 2개 가진 단방향 리스트 노드: 이진트리의 구성요소 부모 노드: 자식 노드를 2개 이상 가질 수 없다. 자식 노드: 하위에 자식노드가 있을 경우 부모노드가 된다. 뿌리/루트 노드: 부모노드가 없는 노드 잎/리프 노드: 자식 노드가 없는 노드 깊이: 뿌리에…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(5)","date":"July 02, 2022"},"fields":{"slug":"/220702-algorithm-book-with-pic/"}}},{"node":{"id":"465bca39-efbc-5509-8965-09b28ece7f41","excerpt":"1. RAID란? RAID(Redundant Array of Independent Disks): 여러 물리 디스크를 하나로 모아 논리적 유닛으로 만든 것(=하나의 논리적인 드라이브) 사용하는 이유? 원래는 값싼 디스크 여러 개를 묶어 용량을 증가시키는 데에 사용 현재는 내고장성, 고가용성, 성능, 또는 이 세 가지를 조합해 기업 내 데이터가 손실되지 않도록 하는 데에 사용  2. RAID의 종류 RAID의 구성 방식은 RAID 0, 1, 01, 2, 3, 4, 5 등 다수 존재하나 가장 많이 사용하는 구성 방식은 아래 다섯 가지이다. 1. RAID 0 (Stripping) 데이터를 두 개 이상의 디스크에 동일하게 분할해 저장 각 디스크 용량의 합만큼 전체로 용량을 사용 가능 장애 발생 시 해당 부분의 디스크 복구 불가 ⇒ 기업 사용에 권장하지 않음 2. RAID 1 (Mirroring) 데이터를 2개 디스크에 동시 저장하는 방식이다. 성능이 느린 편이다. 가용성 측면에서 안정적으로…","frontmatter":{"categories":"CS","title":"RAID란? (정의 및 종류)","date":"July 01, 2022"},"fields":{"slug":"/220701-cs-storage-raid/"}}},{"node":{"id":"b665a335-10a1-5a07-b8ed-d1d9fe954d41","excerpt":"1. OSI 7 Layer란? Open System Interconnection Reference Model의 약어이다. ISO(국제 표준화 기구)에서 개발한 모델로, 컴퓨터 네트워크 프로토콜 디자인과 통신 계층을 나누어 설명한다. 통신 장치를 구분하고 계층이라는 형태로 독립시킨다. 각 계층에서의 변경은 다른 계층에 영향을 주지 않는다. 2. OSI 7 Layer 계층별 설명 계층 이름 프로토콜 예시 7 응용 계층(Application Layer) HTTP, FTP, DNS, SNMP, Telnet 6 표현 계층(Presentation Layer) SSL, TLS 5 세션 계층(Session Layer) NetBIOS, PPTP 4 전송 계층(Transport Layer) TCP, UDP 3 네트워크 계층(Network Layer) IP, ARP, ICMP, IPSec 2 데이터 링크 계층(Data Link Layer) PPP, ARP, Ethernet 1 물리 계층(Physica…","frontmatter":{"categories":"CS","title":"OSI 7 Layer, TCP/IP란?","date":"June 30, 2022"},"fields":{"slug":"/220630-cs-osi-7-layer/"}}},{"node":{"id":"e2885aab-de6a-5b01-81c3-570bf793c69b","excerpt":"오늘은 패스트캠퍼스에서 진행하는 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 듣기 챌린지 최종 미션의 날. 중간미션을 한지 정말 얼마 되지 않은 느낌인데 벌써 66일을 마무리하게 되었다(지난 중간 미션에서도 같은 말 한거같은데…ㅋㅋㅋ). 이번 최종 미션에서는 공백을 제외하고 총 4000자라는 긴 분량을(학부때도 보통 레포트 2000자 분량인데 4000자라니… 논문인가요^^;;) 작성하라고 하기도 했고, 마침 상반기를 마무리하는 시기이기도 해서 2022년도 상반기 회고록도 겸사겸사 같이 써보기로.  📚 챌린지를 하며 배운 것들 오늘까지 들은 강의를 확인해보니 Part 1은 완강, Part 2는 Ch06의 6강 정규표현식 실습문제까지 수강했었고, 2022-06-29-Python-Photo1 그리고 Part 3은 Ch03의 02까지 수강했다. 2022-06-29-Python-Photo1 사실 Part 3은 이전에 제로베이스 프론트엔드 강의를 들을 때 다뤘던 내용들…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 최종미션(및 주니어 데브옵스 엔지니어의 22년 상반기 회고)","date":"June 29, 2022"},"fields":{"slug":"/220629-python-final/"}}},{"node":{"id":"bde9e9eb-92d2-5eff-8960-0b27de8586ea","excerpt":"1. 데이터베이스 트랜잭션(Database transaction)이란? 데이터베이스 트랜잭션(Database Transaction): 데이터베이스의 여러 작업들을 하나로 묶은 단위이다. All-or-Nothing: 한 덩어리의 작업(트랜잭션)은 모두 실행되거나, 실행되지 않는다.  🤔 트랜잭션이 필요한 이유 예를 들어 은행 A에서 은행 B로 돈을 보낸다고 가정한다. 이 때 A에서 출금 후, B로 송금하려할 때 시스템에 장애가 발생해 시스템이 멈추게 된다면 어떻게 될까? A에서 돈은 출금되었지만, B로 송금되지 않고 증발하는 큰 문제가 발생할 수 있다. 트랜잭션은 이런 문제가 발생하지 않도록 해주는 역할을 한다. 대부분은 데이터베이스에서는 송금이 되다가 마는 상황이 발생하지 않도록 여러 방법을 제공하지만, 공통으로 제공하는 가장 기본적인 방법은 트랜잭션을 통해 데이터의 유효성을 보장하는 것이다.  2. ACID란? 데이터베이스 트랜잭션들이 안정적으로 수행되는 것을 보장하기 위한 네 …","frontmatter":{"categories":"CS","title":"데이터베이스 트랜잭션(Database Transaction)과 ACID란?","date":"June 28, 2022"},"fields":{"slug":"/220628-cs-db-transaction-acid/"}}},{"node":{"id":"81dd8b59-cba4-59ff-b081-75805fe85c11","excerpt":"1. S3(Simple Storage Service)란? Amazon S3(Simple Storage Service)란?: 업계 최고의 확장성, 데이터 가용성, 보안 및 성능을 제공하는 객체(object) 스토리지 서비스 사용 예시: 데이터 레이크, 웹 사이트, 모바일 애플리케이션, 백업 및 복원, 아카이브, 엔터프라이즈 애플리케이션, IoT 디바이스, 빅 데이터 분석 등 원하는 양의 데이터를 저장하고 보호할 수 있다. S3 오브젝트는 key로 접근하게 된다. key: prefix + filename (예: /abc.jpg) delimeter(/)로 file system을 흉내낸다. (예: /photos/2022/Jul/abc.jpg) Prefix당 요청 제한이 있다(3,500 PUT, COPY, POST, DELETE, 5,500 GET/HEAD). 사용 패턴에 따라 다양한 스토리지 클래스를 제공한다. 스토리지 클래스 목적 내구성(설계상) 가용성(설계상) 가용영역 최소 스토리지 …","frontmatter":{"categories":"클라우드","title":"AWS S3(Simple Storage Service) 및 S3 Glacier란? (Block Storage, Object Storage, File Storage의 차이점)","date":"June 27, 2022"},"fields":{"slug":"/220627-cloud-aws-s3/"}}},{"node":{"id":"62c4e749-abaa-55ac-a38b-481545d7c3e9","excerpt":"1. AWS CodeCommit GIt 기반의 repository를 클라우드 기반으로  제공하는 서비스 애플리케이션을 개발하면서 관리할 소스코드를 안전하게 저장, 제어할 수 있는 기능을 제공 완전 관리형 서비스로 사용자가 자체 소스코드 제어 시스템을 운영하거나 인프라 규모 조정을 걱정할 필요 없이 코드부터 바이너리까지 모든 사항을 저장 비용은 최초 5명의 활성 사용자의 경우 프리티어, 이상일 경우 사용자당 과금 최초 5명의 활성사용자 비용: 0.00 USD 계정당 리포지토리 1,000개, 요청 시 최대 25,000개 매달 50GB의 스토리지 매달 10,000건의 Git 요청 최초 5명 이후 추가되는 활성 사 계정당 리포지토리 1,000개, 요청 시 최대 25,000개 활성 사용자당 50GB의 스토리지 활성 사용자당 10,000건의 Git 요청 CodeCommit에 해당하는 외부 툴로는 Github, Gitlab 등이 존재  2. AWS CodeBuild 애플리케이션 개발에 필요한 …","frontmatter":{"categories":"클라우드","title":"AWS의 CI/CD 툴: AWS CodeCommit, CodeBuild, CodeDeploy, CodePipeline","date":"June 26, 2022"},"fields":{"slug":"/220626-cloud-aws-cicd-tools/"}}},{"node":{"id":"45e4fc96-9b0c-5512-b2e6-43ac19cb257f","excerpt":"[Algorithm]그림으로 배우는 알고리즘 제 3장: 자료구조 (4) 그림으로 배우는 알고리즘 제 3장: 자료구조 (4) 29. N번째 요소의 참조가 빠른 것은 배열, 느린 것은 리스트 구조 N번째 요소 조회 예: 나열된 데이터에서 5번째 요소를 조회 배열 요소 번호를 사용해 바로 찾아낼 수 있다. ARRAY[5] 어떠한 요소를 조회하더라도 모든 시간적 비용은 동일하다. 리스트: 1번째 데이터부터 차례대로 끄능ㄹ 따라가야한다. 1번째 요소를 조회한다. 1번째 요소의 끈을 따라 2번째 요소를 조회한다. 2번째 요소의 끈을 따라 3번째 요소를 조회한다. 3번째 요소의 끈을 따라 4번째 요소를 조회한다. 4번째 요소의 끈을 따라 5번째 요소를 조회한다. ⇒ 요소의 수가 많을 수록 느려진다. 30. 데이터의 삽입/삭제가 빠른 것은 리스트, 느린 것은 배열 데이터 삽입 새로운 데이터를 순서대로 나열된 데이터 열의 특정 위치에 삽입 배열: 삽입 위치 다음에 존재하는 모든 데이터를 뒤로 이동…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(4)","date":"June 25, 2022"},"fields":{"slug":"/220625-algorithm-book-with-pic/"}}},{"node":{"id":"97a2e4f4-178c-5ff6-b40f-12f318ccec16","excerpt":"1. AWS의 Well-Architected Framework란? AWS서비스를 사용해 구성한 아키텍처들을 평가하는 프레임워크로, AWS에서 시스템 구축을 진행하며 쌓아온 노하우를 살려 AWS의 고객 혹은 파트너사에서 아키텍처를 평가할 수 있는 모범 사례(Best Practice), 그리고 아키텍처가 모범사례에 얼마나 잘 맞는지 평가할 수 있도록 만들었다. 이 Well-Architected Framework를 이용하면 시스템을 구축하면서 내리게 되는 결정의 단점을 이해할 수 있다. 참고로 AWS에서 주관하는 시험 문제들도 이 Well-Architected Framework에 따라 답이 결정되므로 자격증 시험을 준비하는 사람들도 꼭 알아야 한다. Well-architected에서 평가되는 항목은 운영 우수성, 보안, 안정성, 성능 효율성, 비용 최적화로 총 5가지의 기둥(Pillar)로 구성되며, 최신 Well-Architected Framework 자료를 보려면 이 링크를 참조하자…","frontmatter":{"categories":"클라우드","title":"AWS의 Well-Architected Framework란?","date":"June 24, 2022"},"fields":{"slug":"/220624-cloud-aws-well-architected-framework/"}}},{"node":{"id":"3ea3cb71-362f-5d3d-be95-baa46f374d57","excerpt":"아마존의 기업문화로 유명한 Leadership Principle(줄여서 LP). 면접 과정에서도 4명의 면접관이 각 1시간씩 연달아 진행하기로 악명높은(?) Loop면접에서도 이 LP와 지원자가 얼마나 일치하는지를 본다고 한다. 이전까지는 14개의 원칙이었으나 최근 기업들에게도 환경을 포함한 사회적 책임의 중요성이 대두되어 그런지 관련 항목이 추가되어 총 16개의 원칙으로 변경되었다. 참고로 LP는 원문과 국문을 병기하였는데, 둘 모두 공식 사이트에 정의된 내용 그대로 가져왔다.  1. Amazon Leadership Principle(아마존 리더십 원칙)이란? 01. Customer Obsession(고객 집착) Leaders start with the customer and work backwards. They work vigorously to earn and keep customer trust. Although leaders pay attention to competitors…","frontmatter":{"categories":"etc","title":"Amazon Leadership Principle(LP)이란?","date":"June 23, 2022"},"fields":{"slug":"/220623-etc-aws-leadership-principle/"}}},{"node":{"id":"cf8c2750-82fa-5caa-ad8c-38e6807efb05","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬 re 모듈 사용 방법(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-22-Python-Photo1 2022-06-22-Python-Photo2  05. 파이썬 re 모듈 사용 방법(2) 실습: 전화번호 형식을 검사하는 정규표현식  1. group(index)  로 전화번호 형식을 표현할 수 있다. 하지만 마지막 행의 경우 마지막 번호가 다섯자리(전화번호가 아님)임에도 불구하고 매칭이되었다.  로 걸러낼 수 있다. 파이썬에 적용하면 아래와 같다. 실행 결과 마지막 번호를 그룹으로 묶어준다. 실행 결과 group으로 묶지 않거나 group(0)으로 지정한 경우 전체 매칭 값이 나온다.  2. 그룹으로 만든 매칭 결과 가져오기  ⇒ ,를 제외한 번호값들 가져오는 정규표현식  …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 66일차","date":"June 22, 2022"},"fields":{"slug":"/220622-python-day66/"}}},{"node":{"id":"d59edfb8-6835-555f-a8ea-b69eadf72ccb","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬에서의 re모듈 사용방법(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-21-Python-Photo1 2022-06-21-Python-Photo2  04. 파이썬 re 모듈 사용 방법(1) 1. re 모듈의 메서드 종류 기능 찾는 경우 없는 경우 match 문자열 처음부터 검색 match object 1개 None search 문자열 전체를 검색 match object 1개 None (regex, 문자열) 형태로 표현 종류 기능 찾는 경우 없는 경우 findall 문자열 전체를 검색 문자열 리스트 빈 리스트 finditer 문자열 전체를 검색 match object iterator None findall ⇒ (’a’, ‘a’) 형태로 표현 finditer ⇒ iterato…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 65일차","date":"June 21, 2022"},"fields":{"slug":"/220621-python-day65/"}}},{"node":{"id":"8b18ba57-66d5-5c7d-9c70-b208f9ab2a19","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬에서의 정규표현식 사용방법(2)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-20-Python-Photo1 2022-06-20-Python-Photo2  01. 정규표현식 소개 정규표현식: 문자열에서 특정 패턴을 찾고 싶을 때 조건문, 반복문 들을 복잡하게 사용해야할 때 사용 유효성 검사: if문을 사용하면 여러 줄에 걸쳐 작업해야하나 정규표현식은 아주 빠르게 할 수 있다.정 정규 표현식의 장점 문자열 추출, 유효성 검사에서 유용하게 쓰일 수 있다. 거의 모든 언어에서 지원(범용성이 높다) 정규 표현식의 단점 가독성이 좋지 못하다. 유지보수가 힘들다(내가 짠 코드를 남이 이해하기 어렵고, 남이 짠 코드를 내가 이해하기 어렵다). 예:   03. 정규표현식 사용방법(2) 1. …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 64일차","date":"June 20, 2022"},"fields":{"slug":"/220620-python-day64/"}}},{"node":{"id":"6782406f-aeb7-58e4-bdef-b274c5f6da20","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬에서의 정규표현식 사용방법(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-19-Python-Photo1 2022-06-19-Python-Photo2  01. 정규표현식 소개 정규표현식: 문자열에서 특정 패턴을 찾고 싶을 때 조건문, 반복문 들을 복잡하게 사용해야할 때 사용 유효성 검사: if문을 사용하면 여러 줄에 걸쳐 작업해야하나 정규표현식은 아주 빠르게 할 수 있다.정 정규 표현식의 장점 문자열 추출, 유효성 검사에서 유용하게 쓰일 수 있다. 거의 모든 언어에서 지원(범용성이 높다) 정규 표현식의 단점 가독성이 좋지 못하다. 유지보수가 힘들다(내가 짠 코드를 남이 이해하기 어렵고, 남이 짠 코드를 내가 이해하기 어렵다). 예:   02. 정규표현식 사용방법(1) 1. …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 63일차","date":"June 19, 2022"},"fields":{"slug":"/220619-python-day63/"}}},{"node":{"id":"58b6b898-40d1-5cc9-9811-2ae6d23abdd6","excerpt":"1. 배경 상황 올해 2022년 오픈소스 컨트리뷰션 아카데미에 쿠버네티스 한글화 프로젝트가 추가되었다는 소식을 듣고 헐레벌떡 신청했다. 신청하고나니 될지 안될지는 모르지만 컨트리뷰션 아카데미 가이드에 기재된 내용을 보고 예습 겸 PR을 올려보면 좋을 듯 해 쿠버네티스 공식문서의 한글화 가이드와 유투브 영상을 보고 따라서 PR을 올려보았다(두근두근). 하지만… 2022-06-19-Github_Git_Rebase_Squash1.png 내가 번역한 문서에 링크되어있는 YAML파일들이 한국어 버전에 존재하지 않아 빌드에러가 발생했다. 다행히 리뷰어님께서 친절히 해결 방법을 알려주셔서 검색해보니, git squash라는 명령어가 따로 존재하는 건 아니고, interactive rebase의 옵션 중 하나가 squash였다.  2. git rebase -i로 여러 개의 커밋을 한개로 합치는 방법 위에서도 말했듯, 여러 개의 커밋 내역을 한개로 합치려면  (여기서 i는 interactive의 …","frontmatter":{"categories":"데브옵스","title":"Github/Git 여러 개의 커밋을 한개로 합치기(git rebase -i HEAD~3/git squash)","date":"June 19, 2022"},"fields":{"slug":"/220619-git-rebase-squash/"}}},{"node":{"id":"ab7ed1d0-0fe8-5da9-b0b3-8695a89c1d3b","excerpt":"최근 AWS 서비스 아키텍처를 그려야 할 일이 생겨 노션에 간단하게 정리하다 AWS 아이콘 모음과 아키텍처를 그릴 때 유용한 사이트, 정보 포스팅을 작성해보았다. 1. AWS 서비스 아이콘 이미지 모음 AWS는 아키텍처 다이어그램을 그리기 위한 아이콘 이미지 모음을 공식 웹사이트에서 제공한다(아래 웹사이트 링크에서 서드파티 툴들도 소개하고 있는데 대부분 AWS에서 제공하는 아이콘 이미지로 아키텍처를 그리는 듯). AWS Architecture Icons: https://aws.amazon.com/ko/architecture/icons/ AWS는 서비스가 수시로 업데이트되고 추가되는 만큼, 아이콘들도 주기적으로 업데이트 되기 때문에 기존에 다운로드 받아놓았다 하더라도 그릴 때마다 새로 받아서 그리는 것을 추천한다. 참고로 아이콘들은 다크모드/일반모드 배경 및 pptx,ppt,svg,png 등 다양한 포맷으로 제공되고 있으니 본인이 원하는 스타일의 파일을 다운로드 받으면 된다. 참고로…","frontmatter":{"categories":"클라우드","title":"서비스 아이콘 모음 및 아키텍처/다이어그램 작성에 유용한 자료","date":"June 19, 2022"},"fields":{"slug":"/220619-cloud-aws-icon-and-architecture-references/"}}},{"node":{"id":"75ae6d33-a721-51ec-9c30-955f997a9f3d","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬에서의 SQLite 사용법을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-18-Python-Photo1 2022-06-18-Python-Photo2  06. SQL 파이썬에서 SQLite3 사용방법 1. 파이썬 SQLite3 사용 순서 Database 파일 열기 커서(Cursor) 생성 커서(Cursor)란? 사용자와 DBMS(SQLite)를 연결하는 역할. 사용자의 SQL문을 DBMS에 전송해주고, DBMS에서의 data 결과값을 저장해두었다 사용자가 필요할 때 제공. SQL 명령 실행 커밋(Commit) 또는 롤백(Rollback) 커밋(Commit): 변경사항/SQL명령문에 대한 승인 롤백(Rollback): 변경사항/SQL명령문에 대한 취소 데이터베이스 닫기  2. 실습…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 62일차","date":"June 18, 2022"},"fields":{"slug":"/220618-python-day62/"}}},{"node":{"id":"104a0fab-5103-5b84-834c-759624e455d1","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 SQL GROUP BY, JOIN을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-17-Python-Photo1 2022-06-17-Python-Photo2  04. SQL GROUP BY, JOIN 1. user 테이블 수정 이전 실습에서 생성한 테이블을 아래와 같이 변경해보자. email passwd gender age appple@naver.com apple123 female 20 grape@naver.com grape123 male 41 peach@naver.com peach123 female 27 startcoding@naver.com startcoding123 male 30 내 풀이 강의 풀이 DROP으로 테이블 삭제 UI를 통해 테이블 수정(Browse Data에서 수정할…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 61일차","date":"June 17, 2022"},"fields":{"slug":"/220617-python-day61/"}}},{"node":{"id":"e66b1d50-5d87-5b46-ab04-b0942ffd6a25","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 데이터베이스 소개, SQL DML을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-16-Python-Photo1 2022-06-16-Python-Photo2  03. SQL DML(INSERT, SELECT, UPDATE, DELETE) CRUD(크루드) 1. SQL INSERT 데이터(행) 추가 명령 (중요!) 2. SQL SELECT 데이터 조회 명령 (제일 중요!!!!) 특히 마지막 쿼리문은 자주 사용하니 알아둘 것. 조건 추가: WHERE 추가하기(조회 조건) like로 상세조건 설정 가능:  는 startcoding으로 시작하는 항목만 검색 id가 1~10 사이인 것만 가져올 것. user테이블에서 address가 seoul, busan, daegu가 들어간 것만 출력  오름…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 60일차","date":"June 16, 2022"},"fields":{"slug":"/220616-python-day60/"}}},{"node":{"id":"eaf28a92-78b0-5f4c-83c5-0a0fdcdcc410","excerpt":"1. 배경 상황 컨테이너 전환 프로젝트 진행 중 운영 파드들에는 리소스 사용량이 증가하면 스케일아웃(scale-out)을 하도록 HPA를 설정해두었었는데, HPA에서 일부 파드의 현재 메트릭을 수집하지 못해  상태로 떠있게 되었다. 이렇게 될 경우 실제 사용 HPA에서 설정해 둔 리소스의 임계값을 넘게 되어도 오토 스케일링이 작동하지 않게되는 문제가 발생한다. HPA(Horizontal Pod Autoscaler): 리소스 사용량에 따라 쿠버네티스의 워크로드 리소스(디플로이먼트 혹은 스테이트풀셋)를 스케일 아웃(scale-out)하는 오브젝트. 참고로 daemonset은 HPA설정이 불가하다.  2. 해결 방법 경험 상 HPA의 현재 메트릭이  상태로 빠지는 건 아래의 두 가지 경우 중 하나였다. 1. Deployment, ReplicationController, Statefulset의 replica가 0인 경우 HPA는 쿠버네티스의 metrics-server로부터 받은 현재 리소…","frontmatter":{"categories":"데브옵스","title":"쿠버네티스(Kubernetes) HPA “failed to get memory utilization: missing request for memory” / Pod의 current metric = Unknown 에러 해결","date":"June 16, 2022"},"fields":{"slug":"/220616-kubernetes-hpa-unknown-error/"}}},{"node":{"id":"3129bdaf-041a-5f56-885c-1070806638fc","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 데이터베이스 소개, SQL DDL을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-15-Python-Photo1 2022-06-15-Python-Photo2  01. 데이터베이스 소개 1. 데이터베이스 개념 데이터베이스(database): 구조화 된 데이터의 집합(예: 엑셀) 데이터베이스의 기능 데이터 삽입 데이터 조회 데이터 수정 데이터 삭제  2. 데이터베이스의 구성요소 데이터베이스(database): 테이블(table)의 집합 테이블(table): 행(row)의 집합 행(row): 한 단위의 데이터 기록(record) 열(column): 데이터의 항목(field)  3. DBMS(Database Management System) 데이터를 관리해주는 시스템 대표 예: MySQL, …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 59일차","date":"June 15, 2022"},"fields":{"slug":"/220615-python-day59/"}}},{"node":{"id":"c7e0ce65-91c2-5ada-9ad9-65767ec8cd01","excerpt":"참고: 쿠버네티스 한글화에 참여하려고 번역했던 문서이나 중복으로 업로드 하지 않음. [Kubernetes]번역 - 파드 디버그 원문: https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/ 이 가이드는 쿠버네티스에 배포되었으나 제대로 동작하지 않는 애플리케이션을 디버깅하는 유저들을 돕기 위한 것이다. 이 문서는 클러스터를 디버깅하고 싶어하는 사람들을 위한 가이드가 아니다. 클러스터 디버깅을 위해서는 이 가이드를 확인하자. 문제를 진단 트러블슈팅의 첫 단계는 분류이다. 무엇이 문제일까? 파드일까? 레플리케이션 컨트롤러일까? 아니면 서비스일까? 파드 디버그 레플리케이션 컨트롤러 디버그 서비스 디버그 파드 디버그 파드를 디버깅할 떄의 첫 단계는 파드를 살펴보는 것이다. 파드의 현재 상태와 최근 이벤트들을 다음 명령어로 확인하자. 파드 내 컨테이너들의 상태를 확인한다. 모두 인가? 최근에 재시작이 있었는가? 파드의 상태에…","frontmatter":{"categories":"데브옵스","title":"쿠버네티스 공식문서 번역 - 파드 디버그(Debug Pods)","date":"June 15, 2022"},"fields":{"slug":"/220615-kubernetes-debug-pods/"}}},{"node":{"id":"df25cd41-a06a-5293-af38-a7acf3c0400b","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 클래스 실습문제를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-14-Python-Photo1 2022-06-14-Python-Photo2  05. 클래스 실습문제 실습문제 4.5.1 Player 클래스를 구현해 보자. 속성: 닉네임, 미네랄, 가스, 유닛리스트 예시 유닛 리스트의 프로브, 질럿은 Unit 클래스로 만든 객체. 위와 같은 클래스간의 관계를 has-a 라고 한다. has-a: Player has-a Unit (클래스가 다른 객체를 가지고 있는 형태) Player가 여러 Unit을 갖고있음 ⇒ 1 : N 관계 is-a: Weapon is-a Item (서로 상속 시 발생: Weapon < Item) 유닛 정보 메서드: 생산하기 강의 해설  이번 포스팅에서는 강의의 파트 2…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 58일차","date":"June 14, 2022"},"fields":{"slug":"/220614-python-day58/"}}},{"node":{"id":"7610da08-caa5-5f19-8ca5-272132e5fae2","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 상속을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-13-Python-Photo1 2022-06-13-Python-Photo2  04. 상속 1. 상속의 개념 클래스들의 공통된 속성과 메서드를 뽑아내 부모 클래스를 만든다. 이를 자식 클래스에서 상속받아 사용한다. 2022-06-13-Python-Photo3  2. 상속의 장점 코드의 중복을 제거할 수 있다. 유지보수가 편리해진다. 공통 구현 ⇒ 부모클래스만 수정하면 된다. 상세 구현 ⇒ 자식클래스만 수정하면 된다.  3. 상속 구현하기 Weapon 클래스 구현 2022-06-13-Python-Photo4 Item 클래스로부터  속성,  ,  메서드를 상속받았다. Weapon 클래스에는  속성,  메서드가 추가되었다. HealingI…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 57일차","date":"June 13, 2022"},"fields":{"slug":"/220613-python-day57/"}}},{"node":{"id":"37f50730-37db-5491-bfdf-1353120fb17c","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 여러가지 메서드를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-12-Python-Photo1 2022-06-12-Python-Photo2  03. 여러가지 메서드 1. 인스턴스 메서드 인스턴스 속성에 접근할 수 있는 메서드 항상 첫번째 파라미터로 self를 갖는다. hit 메서드 구현하기 데미지를 받으면 체력과 방어막이 깎이는 hit 메서드를 구현해 보자. 데미지가 방어막보다 작거나 같으면 방어막만 깎인다. 데미지가 방어막보다 크고 체력보다 작으면 체력과 방어막이 깎인다. 데미지가 체력보다 크면 체력을 0으로 만든다. 내 풀이 출력 결과 제대로 동작하지 않음 강의 해설 방어막과 체력을 분리해서 생각해보자. 실행 결과 2. 클래스 메서드 클래스 속성에 접근하기 위해 사용한다. 클래스를…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 56일차","date":"June 12, 2022"},"fields":{"slug":"/220612-python-day56/"}}},{"node":{"id":"ca83668b-714b-58fe-b667-7fcafb6dd726","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 여러가지 속성을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-11-Python-Photo1 2022-06-11-Python-Photo2  02. 여러가지 속성 1. 인스턴스 속성 객체마다 다르게 가지는 속성  라고 되어있는 부분이 인스턴스 속성을 가리키는 부분 인스턴스 속성 사용법 클래스 안:  클래스 밖:   2. 클래스 속성 모든 객체가 공유하는 속성 생성된 유닛 개수를 세는 속성을 생성해보자 ⇒ 클래스 속성 생성자 바깥에 속성 정의 + 생성자 마지막 속성 뒤에 Unit.count 작성 클래스 속성 사용법: 클래스 안:  클래스 밖:   3. 비공개 속성 클래스 안에서만 접근 가능한 속성 hp라는 속성을 클래스 외부에서 접근할 수 없도록 만들 때 사용  로 변경 불가  4. 실습…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 55일차","date":"June 11, 2022"},"fields":{"slug":"/220611-python-day55/"}}},{"node":{"id":"9fbc4b51-dac0-5507-bb55-707dac7dbce3","excerpt":"💡  마크다운에서 토글(Toggle) 버튼 / Expander control(접기/펼치기 기능)을 만드려면 HTML의 Details 태그를 활용하자. 최근 기술 면접 관련한 자료를 깃헙 코드 저장소에 하나씩 업로드 하고 있는데, 다른 레포지토리를 보니 예상 질문/답변을 작성할 때 토글버튼을 이용하면 깔끔하게 정리할 수 있어 내 레포지토리에도 적용하기위해 찾아보았다. 결론적으로는, 마크다운(Markdown) 문법 자체를 이용해 토글(Toggle) 버튼 / Expander Control(접기/펼치기) 기능을 만드는 건 불가능하고, 그 대신 html의 details 태그를 이용해 만들 수 있다고 한다. 1. 를 이용한 Toggle/Expander Control 예시  : jekyll에서 html사이에 있는 markdown 문법을 인식시키기 위한 코드  2. 출력 예시 펼쳤을 때 보이는 내용입니다. 펼쳤을 때 보이는 내용입니다.","frontmatter":{"categories":"데브옵스","title":"Github Pages/Blog 마크다운에서 토글(Toggle) 버튼 / Expander control(접기/펼치기 기능) 만들기","date":"June 11, 2022"},"fields":{"slug":"/220611-github-add-toggle-button/"}}},{"node":{"id":"f1fe6607-f650-584a-b9ed-9c7e77540420","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의  클래스와 객체를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-10-Python-Photo1 2022-06-10-Python-Photo2  01. 클래스와 객체 1. 절차 지향 vs 객체 지향 1. 절차 지향 프로그래밍 기능들을 어떤 순서로 처리할 것인가에 초점을 맞춘다. 프로그래밍 규모가 작은 경우 유용 2. 객체 지향 프로그래밍 객체가 중심, 객체를 정의하고 객체간 상호작용에 초점을 맞춘다. 프로그래밍 규모가 큰 경우 유용  2. 클래스와 객체 개념 1. 클래스 객체를 만들기 위한 설계도 2. 객체 설계도로부터 만들어낸 제품  3. 클래스 만들기 2022-06-10-Python-Photo3 클래스: ‘Unit’ 속성: 이름, 체력, 공격력, 방어막 메서드: 위치로 이동하기, 공격…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 54일차","date":"June 10, 2022"},"fields":{"slug":"/220610-python-day54/"}}},{"node":{"id":"b6a3be73-f995-5de2-bd0f-65abbd04ff42","excerpt":"💡  NGINX에서 HTTPS 자동 리다이렉션 설정은 annotation에서(기본값=off), Contour에서 HTTPS 자동 리다이렉션 설정은 spec 하위에서(기본값=on) 설정한다 1. 발생 상황 현재 컨테이너 이관 프로젝트를 진행 중인데, 프로젝트 초기에 http 기반으로 되어있는 담당 시스템이 이관 후에는 http로 접속해도 https로 리다이렉션 되는 현상이 발생했다. http로 보낸 요청이 https로 변경되어 전송되어 컨테이너에서 요청을 제대로 인식하지 못해 http를 https로 변경하는 옵션을 찾아서 disable 시켜야하는 상황이었다. 현재 프로젝트가 VMware의 Tanzu Kubernetes Cluster라는 솔루션 기반에서 동작하고 있어 같은 VMware에서 시작한 오픈소스들을 많이 사용하고 있었는데, 그래서 Ingress Controller도 일반적으로 사용하는 NGINX가 아닌 Contour라는 솔루션을 사용하고 있었다.  2. 설정 방법 - Cont…","frontmatter":{"categories":"데브옵스","title":"NGINX/Contour에서 HTTP ⇒ HTTPS 자동 리다이렉션 옵션 끄기(auto-redirect)","date":"June 10, 2022"},"fields":{"slug":"/220610-nginx-https-auto-redirect-off/"}}},{"node":{"id":"adfadd19-57a6-58d1-9d80-1125b577bd02","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 map, filter 실습을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-09-Python-Photo1 2022-06-09-Python-Photo2  05. map, filter 함수 실습 1. map 함수 map 함수를 사용해보자. 실행 결과: map 객체가 생성되었다. 다시 리스트로 만드려면 list()로 map을 감싸주면 된다. 실행 결과  1. 예제: 리스트 모든 요소의 공백 제거 먼저 for문을 이용해서 구현해보자. 참고: 데이터에 앞뒤 공백이 붙는 경우는 크롤링을 할 때 자주 만날 수 있다. 실행 결과 map 함수를 사용해 구현해보자. 실행 결과 마지막으로 lambda 함수를 이용해 구현해보자. 실행 결과  2. filter 함수 filter 함수의 사용법을 알아보자. 실…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 53일차","date":"June 09, 2022"},"fields":{"slug":"/220609-python-day53/"}}},{"node":{"id":"91a4eaf2-e748-5aa5-9884-e89bd01589fe","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 map, filter함수를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-08-Python-Photo1 2022-06-08-Python-Photo2  04. map, filter 함수 1. map 함수 map 함수 사용 방법 순서가 있는 자료형: 리스트(), 튜플(), 딕셔너리(), range 객체 함수 = int (데이터를 정수형으로 바꿔주는 함수) 2022-06-08-Python-Photo3 리스트의 각각의 데이터가 int 함수를 거쳐 그 결과를 map 오브젝트로 만들어낸다. map 함수를 리스트로 감싸주면 리스트로 결과를 받을 수 있다. Map 함수를 이용한 간단한 예제: 리스트 모든 요소의 공백 제거 for문 사용했을 때 map 사용했을 때 (1) strip_all 이라는 함수…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 52일차","date":"June 08, 2022"},"fields":{"slug":"/220608-python-day52/"}}},{"node":{"id":"0e92450e-cc5e-59e7-a6c8-5a2f10e7944d","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 람다함수를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-07-Python-Photo1 2022-06-07-Python-Photo2  03. 람다 함수(lamda) 1. 람다 함수란? 이름을 지을 필요도 없을 간단한 형태의 함수 다른 함수의 인자(argument)로 넣을 수 있다. 코드가 간결해지고, 메모리가 절약된다. 2. 람다 함수 사용 방법 기존 함수와 람다 함수의 정의 방법을 살펴보자. 기존 함수와 람다 함수의 호출 방법을 살펴보자. 람다 함수 자체를 괄호로 감싸서 사용 변수에 람다함수를 할당해 사용 기존 함수와 람다 함수에서 if문을 사용하는 방식을 비교해보자. if문을 적용한 함수를 호출해보자.  3. 실습 실행 결과 람다 함수 안에서 if문을 사용해보자. 실행 결과  이번…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 51일차","date":"June 07, 2022"},"fields":{"slug":"/220607-python-day51/"}}},{"node":{"id":"8cfd3e36-fd13-5605-a5ca-5ba33371a805","excerpt":"1. 배경 현재 컨테이너 전환을 진행하고 있는 담당 시스템이 Microsoft Azure에서 운영되고있는데, 인프라팀에서 쿠버네티스 파드(Pod)와 연결된 NAS(쿠버네티스 리소스로 말하면 Persistent Volume과 Persistent Volume Claim) 정보를 변경해달라는 요청을 받았다. NAS를 기존 CIFS타입에서 NFS 타입으로 변경하셨다고 하는데, 둘 다 처음 듣는 용어라 생소해서 정리해보았다. 참고로 NAS 타입으로 스토리지를 바꾼 건 기존 Azure files(AWS의 EFS에 해당)에서 대/소문자 구분이 되지 않아 NetApp Files(NFS type)으로 변경한 것이라고 한다. Azure files에서 디렉토리/파일명의 대/소문자 구분이 되지 않아(case-insensitive) 윈도우 기반으로만 구동되는 것인 줄 알았는데 NFS/SMB로 윈도우/리눅스 시스템에 모두 마운트할 수 있는 것을 보면 그렇지는 않은 듯(자세한 것은 다시 조사 할 것). 2.…","frontmatter":{"categories":"CS","title":"NAS/CIFS/NFS 개념","date":"June 07, 2022"},"fields":{"slug":"/220607-cs-nfs/"}}},{"node":{"id":"5f8e9a2b-9d38-50d1-b4bf-66ba3018e119","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 다양한 매개변수(1),(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-06-Python-Photo1 2022-06-06-Python-Photo2  01. 다양한 매개변수 (1) 1. 위치 매개변수(positional parameter) 가장 기본적인 매개변수 함수 호출 시 순서대로 데이터(인자)를 넘겨줘야 한다. 다른 매개변수와 함께 쓸때는 항상 맨 앞에(중요!) 써야 한다. 2. 기본 매개변수(default parameter) 매개변수의 기본적인(default) 값 함수를 정의할 때 매개변수의 기본 값을 지정할 수 있다. title: 위치 매개변수 content: 기본 매개변수(내용이 없는 경우에는 내용없음이 기본 값으로 들어간다.) 3. 키워드 매개변수(keyword par…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 50일차","date":"June 06, 2022"},"fields":{"slug":"/220606-python-day50/"}}},{"node":{"id":"7269bbff-a6e0-5d4a-ae7c-0f8019899892","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 리스트 내포, 실습문제, 할당과 복사, 문자열 실습문제를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-05-Python-Photo1 2022-06-05-Python-Photo2  04. 리스트 내포 1. 리스트 내포란? for문, if문 등을 지정하여 리스트를 간편하게 만드는 것.  1. 리스트 내포 - for 문 사용하기 예시 1 range(5) 로 0~4까지의 값이 들어가는데, []로 감쌌기 때문에 리스트 형태로 결과가 생성된다. 예시 2 nums에 리스트가 할당되어있다. nums의 값들을 2배하라는 리스트 내포문을 작성 후 double_nums에 할당한다. 각 값에 2가 곱해진 리스트가 반환된다.  2. 리스트 내포 - if 문 사용하기 보는 순서: for 문 ⇒ if 문 ⇒ …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 49일차","date":"June 05, 2022"},"fields":{"slug":"/220605-python-day49/"}}},{"node":{"id":"e50f990a-6b4a-5908-8ec1-4eebc855e3e5","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 리스트 다루기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-04-Python-Photo1 2022-06-04-Python-Photo2  03. 리스트 다루기 1. 리스트 메서드 1. 리스트에 데이터 추가하는 방법  를 사용해 리스트에 데이터를 추가할 수 있다. grape라는 새로운 데이터가 리스트에 추가된 것을 알 수 있다.  2. 리스트에 리스트 추가하는 방법 마찬가지로  를 사용해 리스트에 리스트를 추가할 수 있다. fruits 리스트 안에  라는 리스트가 추가 된 것을 알 수 있다(중첩).  3. 리스트 데이터 삭제 방법  메서드를 사용하면 마지막 데이터를 삭제할 수 있다. 위의 예시에서는 ‘mango’라는 데이터가 삭제된 것을 알 수 있다.  4. 리스트 데이터 삭제 방법(…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 48일차","date":"June 04, 2022"},"fields":{"slug":"/220604-python-day48/"}}},{"node":{"id":"d5421179-a880-507c-aec3-cb62b6ca8b35","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 강의 소개, 문자열 다루기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-03-Python-Photo1 2022-06-03-Python-Photo2  02. 문자열 포매팅 문자열 포매팅: 문자열을 편리하게 만드는 방법. 문자열을 여러 데이터를 조합해 만드는 방법 1. 문자열 포매팅이 없다면? 사용하기 불편하다(형변환도 필요함). 실행 결과  2. 문자열 포매팅 사용시 실행 결과 형변환도 필요 없음. 3. format 메서드 데이터가 인덱스에서 지정한 자리에 들어가게 된다. 값을 여러 개 넣으려면? 인덱스를 생략하려면? 인덱스를 생략하면 순서대로 들어가게 된다.  4. f-string  5. 실습 실행 결과 인덱스 값을 바꾸면 바꾼대로 출력된다. 실행결과 인덱스값을 비워두면 차례대로 …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 47일차","date":"June 03, 2022"},"fields":{"slug":"/220603-python-day47/"}}},{"node":{"id":"568fa115-2c93-57da-8556-610acc629575","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 강의 소개, 문자열 다루기를 듣고 정리해보았다(파트 3의 CSS 챕터는 파트 2 수강 후에 다시 들을 것. 현재 병행해서 듣고 있는 DevOps강의가 Django 베이스라서 문법 + Django 프레임워크 기준으로 빠르게 진도를 나가야 할 듯 해서 수강 순서를 다시 바꾸었다). 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-02-Python-Photo1 2022-06-02-Python-Photo2  1. 강의 소개 환경설정(MacOS) 챕터 01의 1,2강은 강의소개/Windows의 환경설정 내용이므로 생략하였다. 파이썬 기본 챕터와 마찬가지로 가상환경을 만들어준다(MacOS기준). 1. 프로젝트 폴더 생성 Documents 폴더 하위에 python_advanced라는 폴더를 새로 생성한다. VScode…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 46일차","date":"June 02, 2022"},"fields":{"slug":"/220602-python-day46/"}}},{"node":{"id":"647a7c87-099f-57aa-9bd8-ae3ce5e720c4","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 CSS 기본 문법을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-01-Python-Photo1 2022-06-01-Python-Photo2  06. 주요 요소 정리 - 구조 태그  : 블록(상자) 요소. 특별한 의미가 없는 구분을 위한 요소. (Division)  : 블록(상자) 요소. 제목을 의미하는 요소. (Heading) h1~h6번까지 값을 가질 수 있다. 숫자가 작을수록 더 중요한 제목을 정의  : 블록(상자) 요소. 문장을 의미하는 요소. (Paragraph)  : 인라인(글자) 요소. 이미지를 삽입하는 요소(Image)  ⇒ 삽입할 이미지의 경로 (필수 속성)  ⇒ 삽입할 이미지의 이름 (필수 속성). 대체 텍스트(이미지가 정상 출력되지 않았을 때 출력된다…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 45일차","date":"June 01, 2022"},"fields":{"slug":"/220601-python-day45/"}}},{"node":{"id":"0fcc7bd3-e306-555d-bc22-0dc4720100a9","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 구조 태그. 주석과 전역속성을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-31-Python-Photo1 2022-05-31-Python-Photo2  06. 주요 요소 정리 - 구조 태그  : 블록(상자) 요소. 특별한 의미가 없는 구분을 위한 요소. (Division)  : 블록(상자) 요소. 제목을 의미하는 요소. (Heading) h1~h6번까지 값을 가질 수 있다. 숫자가 작을수록 더 중요한 제목을 정의  : 블록(상자) 요소. 문장을 의미하는 요소. (Paragraph)  : 인라인(글자) 요소. 이미지를 삽입하는 요소(Image)  ⇒ 삽입할 이미지의 경로 (필수 속성)  ⇒ 삽입할 이미지의 이름 (필수 속성). 대체 텍스트(이미지가 정상 출력되지 않았을 …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 44일차","date":"May 31, 2022"},"fields":{"slug":"/220531-python-day44/"}}},{"node":{"id":"db1d3c38-ab6f-57bd-8567-fee08fe3d4bd","excerpt":"제 3장: 자료구조 25. 계산대 앞에 줄을 서듯 대기하는 자료구조가 대기 행렬(큐) 큐(queue)/대기행렬: 먼저 입력한 데이터가 먼저 출력되는 특징을 가진 자료구조. 예: 슈퍼에서 계산하기 위해 기다리는 대기자, ATM기에 줄 서서 기다리는 사람들 대기열의 1번째 사람부터 용무를 보게 된다. 중간에 끼어들거나 & 순서를 어기고 새치기 (X) 먼저 입력한 데이터가 먼저 출력되는 데이터 관리 방법: FIFO(First In, First Out), LILO(Last In, Last Out) 26. 끈으로 엮어 데이터를 관리하는 것이 리스트 1차원 배열 데이터들은 차례대로 빈틈없이 나열된다. 데이터의 순서가 고정되어있다. 데이터 개수 관리: 다른 변수 사용 리스트 데이터들은 모두 떨어져 있지만, 끈으로 묶여 있다. 데이터의 순서가 고정되어있지 않아 데이터의 위치에 구애받지 않는다. 데이터 개수 관리: 다음 데이터에 연결된 끈이 있는지 여부 27. 한쪽 방향에서 데이터를 찾아가는 단방…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(3)","date":"May 30, 2022"},"fields":{"slug":"/220530-algorithm-book-with-pic/"}}},{"node":{"id":"d7de9cf1-dce2-5199-83d9-5e6cc527e737","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 주요 요소, 정보 태그를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-30-Python-Photo1 2022-05-30-Python-Photo2  04. 주요 요소 ‘html’이라는 폴더를 생성해 vscode에서 실습을 해보자. Tip: 폴더명을 작성할때는 가능하면 영문/숫자로만 작성하자  파일을 생성하자. index ⇒ 브라우저에서 사이트에 접속할 때 최우선으로 오픈하는 파일 느낌표  키 + 탭 키 ⇒ 기본적은 html 양식이 입력됨 html이라는 요소 하위에 head, body라는 자식요소가 들어있다. head라는 요소에는 meta, title이라는 요소로 구성되어있다. meta ⇒ 빈태그 head, body요소 안에 내용을 작성해 html파일을 완성해보자.  05…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 43일차","date":"May 30, 2022"},"fields":{"slug":"/220530-python-day43/"}}},{"node":{"id":"aacb2dea-a513-5982-8612-e7d4417221ff","excerpt":"제 3장: 자료구조 22. 다양한 구조의 자료구조들 다섯 가지 배열: 데이터를 빈틈없이 나열한 자료구조(일차원, 이차원, 삼차원 배열 등이 있다) 리스트: 데이터를 순서대로 나열한 자료구조. 데이터들이 화살표로 서로 연결되어있어 떨어진 장소에 위치해도 된다(배열과의 차이점) 스택: 책을 쌓아 올리듯 데이터를 관리하는 구조. 데이터를 넣는 순서와 반대 순서로 데이터를 꺼낸다. 큐(대기 행렬): 계산대에 줄을 서는 것과 비슷하다. 데이터를 넣은 순서대로 데이터를 꺼낸다. 트리: 나무가지가 두개, 세개로 갈라지고 갈라진 끝에서 또 두개 세개로 갈라지듯 퍼져나가는 자료구조 24. 책처럼 쌓이는 자료구조가 스택 스택(Stack): ‘쌓다’ 라는 뜻. 데이터를 쌓아 관리하는 방식. 예: 책상위에 책을 쌓아놓았을 때, 중간에 있는 책을 빼기 위해서는 위에 쌓인 책을 한권 한구너 차례로 뺀 뒤에 원하는 책을 빼야한다. 푸시 데이터를 넣는(쌓는) 작업 팝 데이터를 꺼내는 작업 LIFO(Last I…","frontmatter":{"categories":"알고리즘","title":"그림으로 배우는 알고리즘 제3장 - 자료구조(2)","date":"May 29, 2022"},"fields":{"slug":"/220529-algorithm-book-with-pic/"}}},{"node":{"id":"10791fc9-9fc9-566a-b16a-2d6f48f8e858","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 글자와 상자를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-29-Python-Photo1 2022-05-29-Python-Photo2  03. 글자와 상자 글자와 상자: 요소가 화면에 출력되는 특정. 크게 2가지로 구분된다. 인라인(Inline) 요소: 글자를 만들기 위한 요소들 블록(Block) 요소: 상자(레이아웃)를 만들기 위한 요소들 참고: 글자를 제외한 모든 요소들을 **레이아웃(layout)**이라고 부른다.  1. 인라인(Inline) 요소 : 대표적인 인라인 요소. 본질적으로 아무것도 나타내지 않는, 콘텐츠 영역을 설정하는 용도. 출력 결과 요소가 수평으로 쌓이게 된다. 인라인 요소는 포함한 콘텐츠 크기만큼 자동으로 줄어들게 된다(가로세로 상관없이).  …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 42일차","date":"May 29, 2022"},"fields":{"slug":"/220529-python-day42/"}}},{"node":{"id":"ff475a93-0dd1-5998-a5d3-7cb566e531c2","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 HTML 기본문법, 요소의 관계 이해를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-28-Python-Photo1 2022-05-28-Python-Photo2  01. HTML 기본 문법 HTML의 요소, 태그에 대해 알아보자. 위의 HTML 을 풀어 쓰면 아래와 같다. 위의 내용전체를 **요소(element)**라고 부른다.  : 시작(열린) 태그(Tag)  : 종료(닫힌) 태그(Tag)  : 요소의 내용(Contents) 이번에는 HTML요소의 다른 예시를 살펴보자.  : Attribute  : Value  : HTML 기능의 확장 HTML에서 종료태그가 없는 태그를 볼 수도 있다. 빈(Empty) 태그라고 부른다. 빈(Empty) 태그는 아래 두 가지 방식으로 입…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 41일차","date":"May 28, 2022"},"fields":{"slug":"/220528-python-day41/"}}},{"node":{"id":"47e4a572-c73f-5a3d-b28f-f2a54e0d59bd","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 3의 챕터 1. 강의 개요를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-27-Python-Photo1 2022-05-27-Python-Photo2  1. HTML, CSS 그리고 JS HTML(Hyper Text Markup Language): 페이지의 제목, 문단, 표, 이미지, 동영상 등 웹의 구조를 담당. CSS(Cascading Style Sheets): 실제 화면에 표시되는 방법(색상, 크기, 폰트, 레이아웃 등)을 지정해 콘텐츠를 꾸며주는 시각적인 표현(정적) 담당 JS(JavaScript): 콘텐츠를 바꾸고 움직이는 등 페이지를 동작시키는 동적 처리를 담당 (프로그래밍 언어) 2. 웹앱의 동작 원리 웹앱(Web Application) = 웹사이트(Website…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 40일차","date":"May 27, 2022"},"fields":{"slug":"/220527-python-day40/"}}},{"node":{"id":"71e258a7-ab7d-581e-a45f-965a7309b327","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 12-6. 블로그 게시글 수정, 삭제, 저장하기 기능 구현을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-26-Python-Photo1 2022-05-26-Python-Photo2  06. 게시글 수정, 삭제, 저장하기 게시글 로딩하기 (완료) 메뉴 출력하기 (완료) 게시글 쓰기 (완료) 게시글 목록 확인하기 (완료) 게시글 상세 확인하기 (완료) 게시글 수정하기 게시글 삭제하기 게시글 저장하기  2. 게시글 수정, 삭제, 저장하기 1. 게시글 수정 사용자가 새로 제목, 본문을 입력한다. set_post 메서드로 Post 객체를 수정해준다.  2. 게시글 삭제 post_list 에서 해당 Post 객체를 삭제해준다.  3. 게시글 저장하기 post_list에 저장된 내용을 …","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 39일차","date":"May 26, 2022"},"fields":{"slug":"/220526-python-day39/"}}},{"node":{"id":"4c1b7167-efea-5892-a4ee-022f33c6a59c","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 12-5. 블로그 게시글 목록, 상세 구현을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-25-Python-Photo1 2022-05-25-Python-Photo2  5. 블로그 게시글 목록, 상세 1. 프로그램 기능 구현하기 게시글 목록 구현 결과 예시 post_list 객체를 get 메서드로 가져와 출력하면 된다. 글 번호를 선택하는 기능 글 번호 선택 없는 글 번호 ⇒ 무한 반복 -1 입력 시 ⇒ 메뉴로 복귀(break) 올바른 글 번호 ⇒ 게시글 상세(난이도 있음)  2. 코드 구현 1. 게시글 목록 구현하기 게시글 목록을 구현해보자. 실행 결과 게시글 목록 보기를 구현한다. 글 번호를 설정하면 게시글 상세보기를 할 수 있도록 구현한다. 글 번호 선택 시 해당 번호가…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 38일차","date":"May 25, 2022"},"fields":{"slug":"/220525-python-day38/"}}},{"node":{"id":"62207d43-714c-55b0-a7c9-cd25e0e0c8d3","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 12-4. 메뉴 출력하기, 글쓰기를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-24-Python-Photo1 2022-05-24-Python-Photo2  4-1. 블로그 메뉴 출력하기 1. 프로젝트 설계 프로그램 기능 설계 게시글 로딩하기 (완료) 메뉴 출력하기 (이번 강의에서 다룰 내용) 게시글 쓰기 (이번 강의에서 다룰 내용) 게시글 목록 확인하기 게시글 상세 확인하기 게시글 수정하기 게시글 삭제하기 게시글 저장하기  2. 메뉴 출력하기 결과물 예시 메뉴를 출력하기 까지만 진행할 것(메뉴별 기능 구현은 뒤의 강의에서 다룰 예정) 숫자 1,2,3외의 숫자를 입력할 경우 ⇒ 다시 메뉴 출력 문자 입력 시 ⇒ 예외처리가 필요 해당 기능 구현은 실습문제 5.3.2와 유사하다…","frontmatter":{"categories":"프로그래밍","title":"Python - 패스트캠퍼스 캐시백 챌린지 37일차","date":"May 24, 2022"},"fields":{"slug":"/220524-python-day37/"}}},{"node":{"id":"1cda5d5d-bffc-5d66-aee4-416c569306b6","excerpt":"💡 MacOS 환경에서 VMware로 Ubuntu를 설치하려면 “VMware Fusion”을 설치해야 한다. 이번 포스팅에서는 VMware Fusion에서 Ubuntu 20.04 버전을 설치해보도록 하겠다. 코딩 강의를 수강하거나 스터디 할 때 실습 환경을 맞춰주기 위해서 우분투를 설치했었는데, 이번에는 Jekyll을 설치하기 위해 우분투 환경을 만들어주게 되었다. 만약 나와 같이 MacOS(Catalina 이상 버전)에서 Jekyll 설치에 실패했던 사람은 Ubuntu 20.04 버전에서 설치 해보는 걸 추천한다. (참고로 Ubuntu 18.04 버전에서는 Jekyll 설치는 가능했었으나 테마 적용에서 버전 이슈가 발생했다.) 그럼 VMware Fusion과 Ubuntu가 무엇인지에 대해 간단하게 살펴본 뒤 두 소프트웨어를 설치해보도록 하자. 1. VMware Fusion이란? VMware Fusion은 VMware사에서 제공하는 MacOS 컴퓨터용 가상머신 소프트웨어이다. 무료…","frontmatter":{"categories":"데브옵스","title":"VMware Fusion에서 Ubuntu 20.04 설치하기","date":"April 16, 2022"},"fields":{"slug":"/220417-etc-vmware-ubuntu/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"박진이","bio":{"role":"데브옵스 엔지니어","description":["사람에 가치를 두는","능동적으로 일하는","이로운 것을 만드는"],"thumbnail":"memoji.gif"},"social":{"github":"https://github.com/jinnypark9393","linkedIn":"https://www.linkedin.com/in/%EC%A7%84%EC%9D%B4-%EB%B0%95-07569118b/","email":"jinnypark9393@gmail.com"}}}}},"pageContext":{}},"staticQueryHashes":["1073350324","1956554647","2938748437","3350743975"]}