{"componentChunkName":"component---src-templates-blog-template-js","path":"/220515-python-day28/","result":{"data":{"cur":{"id":"366902e9-a607-50ce-ba15-6dd7c787909c","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 9-3. 패키지를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-15-Python-Photo/2022-05-15-Python-Photo1.jpg\" alt=\"2022-05-15-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-15-Python-Photo/2022-05-15-Python-Photo2.jpg\" alt=\"2022-05-15-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"03-패키지\" style=\"position:relative;\"><a href=\"#03-%ED%8C%A8%ED%82%A4%EC%A7%80\" aria-label=\"03 패키지 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 패키지</h1>\n<h2 id=\"1-패키지의-개념\" style=\"position:relative;\"><a href=\"#1-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 패키지의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 패키지의 개념</h2>\n<ul>\n<li>관련있는 모듈을 <strong>하나의 폴더</strong>로 구성해 놓은 것.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-패키지-만들고-사용하기\" style=\"position:relative;\"><a href=\"#2-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%A7%8C%EB%93%A4%EA%B3%A0-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 패키지 만들고 사용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 패키지 만들고, 사용하기</h2>\n<ul>\n<li>디렉토리(=폴더) 구조</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">-</span> startcoding <span class=\"token operator\">/</span> \n    unit <span class=\"token operator\">/</span>\n        __init__<span class=\"token punctuation\">.</span>py\n        character<span class=\"token punctuation\">.</span>py\n        item<span class=\"token punctuation\">.</span>py\n        monster<span class=\"token punctuation\">.</span>py\n    main<span class=\"token punctuation\">.</span>py</code></pre></div>\n<br/>\n<ul>\n<li>VScode로 이동해 Chapter9 폴더 밑에 startcoding, startcoding 하위에 unit 폴더를 생성 및 위 디렉토리 구조대로 파일생성\n<ul>\n<li>Tip: unit 폴더 생성 시 <code class=\"language-text\">startcoding/unit</code> 이라는 컴팩트폴더 형식으로 폴더가 표시되는데, 이를 해제하려면 <code class=\"language-text\">File > Preference > Settings</code> (MacOS의 경우 <code class=\"language-text\">Code > Preference > Settings</code> ) 에 들어가 <code class=\"language-text\">compact</code> 라고 검색한 뒤, <code class=\"language-text\">Explorer: Compact Folders</code> 라는 항목의 체크박스를 해제해주면 폴더가 트리형식으로 표시된다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>디렉토리 및 파일 생성이 완료되면 이런 형태가 된다.</p>\n<p><img src=\"/assets/images/2022-05-15-Python-Photo/2022-05-15-Python-Photo3.png\" alt=\"2022-05-15-Python-Photo3\"></p>\n</li>\n</ul>\n<br/>\n<ul>\n<li>unit 패키지 안의 모듈부터 작성해보자. 먼저 <code class=\"language-text\">character.py</code>를 아주 간단하게 Print 문으로만 구성해 작성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a character module\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>item, monster 모듈도 동일 요령으로 작성하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a item module\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"this is a monster module\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>이렇게 작성한 위 모듈들을 main.py에서 불러오자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. import 패키지.모듈</span>\n<span class=\"token keyword\">import</span> unit<span class=\"token punctuation\">.</span>character</code></pre></div>\n<br/>\n<ul>\n<li>\n<p>“unit.character” is not accessed: Import “unit.character” could not be resolved Pylance(reportMissingImports) 라는 에러메시지가 발생</p>\n<ul>\n<li>\n<p>startcoding이라는 새로운 폴더를 만들었기 때문</p>\n</li>\n<li>\n<p><code class=\"language-text\">File > Preference > Settings</code> (MacOS의 경우 <code class=\"language-text\">Code > Preference > Settings</code> ) 에서 아래 빨간색 박스로 표시한 아이콘을 클릭</p>\n<p><img src=\"/assets/images/2022-05-15-Python-Photo/2022-05-15-Python-Photo4.png\" alt=\"2022-05-15-Python-Photo4\"></p>\n</li>\n</ul>\n  <br/>\n<ul>\n<li>settings.json 파일에서 “python.analysis.extraPaths” 에 startcoding으로 향하는 경로를 추가한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"python.pythonPath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/anaconda3/bin/python\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"editor.unicodeHighlight.allowedCharacters\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\" \"</span><span class=\"token punctuation\">:</span> true\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"python.analysis.extraPaths\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"./myvenv/Chapter9\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"./myvenv/Chapter9/startcoding\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"liveSassCompile.settings.formats\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">\"format\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"expanded\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"extensionName\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\".css\"</span><span class=\"token punctuation\">,</span>\n            <span class=\"token string\">\"savePath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/assets/css/\"</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pasteImage.basePath\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"${currentFileDir}/images/\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"pasteImage.prefix\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"./\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"liveServer.settings.donotShowInfoMsg\"</span><span class=\"token punctuation\">:</span> true<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"editor.fontSize\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">15</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"window.zoomLevel\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"explorer.compactFolders\"</span><span class=\"token punctuation\">:</span> false\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"1-import-패키지모듈-방식\" style=\"position:relative;\"><a href=\"#1-import-%ED%8C%A8%ED%82%A4%EC%A7%80%EB%AA%A8%EB%93%88-%EB%B0%A9%EC%8B%9D\" aria-label=\"1 import 패키지모듈 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. import 패키지.모듈 방식</h3>\n<ul>\n<li>이어서 main.py 에서 import 를 이용해 character 모듈을 호출해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. import 패키지.모듈</span>\n<span class=\"token keyword\">import</span> unit<span class=\"token punctuation\">.</span>character\nunit<span class=\"token punctuation\">.</span>character<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과: unit.character의 test 함수가 잘 실행되는 것을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span>startcoding<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>py\nthis <span class=\"token keyword\">is</span> a character module</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-from-패키지-import-모듈-방식-사용빈도-높음\" style=\"position:relative;\"><a href=\"#2-from-%ED%8C%A8%ED%82%A4%EC%A7%80-import-%EB%AA%A8%EB%93%88-%EB%B0%A9%EC%8B%9D-%EC%82%AC%EC%9A%A9%EB%B9%88%EB%8F%84-%EB%86%92%EC%9D%8C\" aria-label=\"2 from 패키지 import 모듈 방식 사용빈도 높음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. from 패키지 import 모듈 방식 (사용빈도 높음)</h3>\n<ul>\n<li>이번에는 from 패키지 import 모듈 구문을 이용해 모듈을 불러와보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2. from 패키지 import 모듈</span>\n<span class=\"token keyword\">from</span> unit <span class=\"token keyword\">import</span> item\nitem<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span>startcoding<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>py\nthis <span class=\"token keyword\">is</span> a item module</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"3-from-패키지-import--방식\" style=\"position:relative;\"><a href=\"#3-from-%ED%8C%A8%ED%82%A4%EC%A7%80-import--%EB%B0%A9%EC%8B%9D\" aria-label=\"3 from 패키지 import  방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. from 패키지 import * 방식</h3>\n<ul>\n<li>from 패키지 import * 방식을 이용해 패키지의 모든 모듈을 불러올 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 3. import 패키지 import *</span>\n<span class=\"token comment\"># : 패키지 안의 모든 모듈 가져오기</span>\n<span class=\"token keyword\">from</span> unit <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\ncharacter<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">*</code> (Asterisk): ‘모든’ 이라는 뜻</li>\n<li>character 모듈을 불러올 수 없음 ⇒ <code class=\"language-text\">__init__</code> 파일을 수정해야한다.</li>\n</ul>\n<br/>\n<ul>\n<li>init 모듈을 수정해주자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> <span class=\"token punctuation\">.</span> <span class=\"token keyword\">import</span> character<span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">,</span> monster</code></pre></div>\n<ul>\n<li><code class=\"language-text\">.</code> : 현재 위치를 뜻한다.</li>\n<li>현재위치의 character, item, monster 모듈을 init 모듈에 import 한다 라는 뜻.</li>\n</ul>\n<br/>\n<ul>\n<li>다시 main.py 로 돌아가 character, item, monster 모듈의 함수들을 불러와보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 3. import 패키지 import *</span>\n<span class=\"token comment\"># : 패키지 안의 모든 모듈 가져오기</span>\n<span class=\"token keyword\">from</span> unit <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\ncharacter<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nitem<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmonster<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과: 각 모듈의 test 함수가 잘 실행됨을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span>startcoding<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>py\nthis <span class=\"token keyword\">is</span> a character module\nthis <span class=\"token keyword\">is</span> a item module\nthis <span class=\"token keyword\">is</span> a monster module</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"4-import-패키지-방식\" style=\"position:relative;\"><a href=\"#4-import-%ED%8C%A8%ED%82%A4%EC%A7%80-%EB%B0%A9%EC%8B%9D\" aria-label=\"4 import 패키지 방식 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. import 패키지 방식</h3>\n<ul>\n<li>import 패키지 방식을 사용해 패키지 전체를 불러와 사용할 수 있다.</li>\n<li>참고: 이 방식도 3 방식의 init 모듈 수정 절차가 필요하다.</li>\n<li>main.py 에서 import unit 으로 unit 패키지 전체를 불러온 뒤, 각 모듈의 함수를 호출한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 4. import 패키지</span>\n<span class=\"token comment\"># : 패키지 자체를 import </span>\n<span class=\"token keyword\">import</span> unit\nunit<span class=\"token punctuation\">.</span>character<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nunit<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nunit<span class=\"token punctuation\">.</span>monster<span class=\"token punctuation\">.</span>test<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행결과: 각 모듈의 함수가 잘 동작함을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyth\non_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>py\nthon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter9<span class=\"token operator\">/</span>startcoding<span class=\"token operator\">/</span>main<span class=\"token punctuation\">.</span>py\nthis <span class=\"token keyword\">is</span> a character module\nthis <span class=\"token keyword\">is</span> a item module\nthis <span class=\"token keyword\">is</span> a monster module</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 패키지에 대해 알아보았다. 다음 포스팅에서는 파일입출력 기본에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 9-3. 패키지를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-15-Python-Photo1 2022-05-15-Python-Photo2  03. 패키지 1. 패키지의 개념 관련있는 모듈을 하나의 폴더로 구성해 놓은 것.  2. 패키지 만들고, 사용하기 디렉토리(=폴더) 구조 VScode로 이동해 Chapter9 폴더 밑에 startcoding, startcoding 하위에 unit 폴더를 생성 및 위 디렉토리 구조대로 파일생성 Tip: unit 폴더 생성 시  이라는 컴팩트폴더 형식으로 폴더가 표시되는데, 이를 해제하려면  (MacOS의 경우  ) 에 들어가  라고 검색한 뒤,  라는 항목의 체크박스를 해제해주면 폴더가 트리형식으로 표시된다. 디렉토리 및 파일 생성이 완료…","frontmatter":{"date":"May 15, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 28일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220515-python-day28/"}},"next":{"id":"0dac801f-5927-5456-b22d-dca6958cb6a7","html":"<h1 id=\"3-kubeconfig-트러블-슈팅\" style=\"position:relative;\"><a href=\"#3-kubeconfig-%ED%8A%B8%EB%9F%AC%EB%B8%94-%EC%8A%88%ED%8C%85\" aria-label=\"3 kubeconfig 트러블 슈팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. KubeConfig 트러블 슈팅</h1>\n<h2 id=\"문제-요건\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[문제 요건]</h2>\n<ul>\n<li><code class=\"language-text\">/root/CKA</code> 경로에 <code class=\"language-text\">admin.kubeconfig</code> kubeconfig 파일이 생성되었으나 무언가 잘못되었다. 트러블 슈팅 후 고칠 것</li>\n<li>채점 기준\n<ul>\n<li>/root/CKA/admin.kubeconfig 고치기</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[내 풀이]</h2>\n<ul>\n<li>kubeconfig 파일을 살펴보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~<span class=\"token comment\"># cd /root/CKA</span>\nroot@controlplane:~/CKA<span class=\"token comment\"># ls -al</span>\ntotal <span class=\"token number\">16</span>\ndrwxr-xr-x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">15</span> 04:49 <span class=\"token builtin class-name\">.</span>\ndrwx------ <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">15</span> 04:44 <span class=\"token punctuation\">..</span>\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">5564</span> May <span class=\"token number\">15</span> 04:49 admin.kubeconfig\nroot@controlplane:~/CKA<span class=\"token comment\"># cat admin.kubeconfig </span>\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: <span class=\"token punctuation\">[</span>encrypted ca<span class=\"token punctuation\">]</span>\n    server: https://controlplane:4380\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: <span class=\"token punctuation\">[</span>encrypted-certification<span class=\"token punctuation\">]</span>\n    client-key-data: <span class=\"token punctuation\">[</span>encrypted-key<span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~/CKA<span class=\"token comment\"># k config view</span>\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: DATA+OMITTED\n    server: https://controlplane:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: REDACTED\n    client-key-data: REDACTED</code></pre></div>\n<br/>","frontmatter":{"date":"May 15, 2022","title":"쿠버네티스(Kubernetes) CKA Lightning Lab 3 - KubeConfig 관련 이슈 트러블 슈팅","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220515-kubernetes-cka-lightning-lab3/"}},"prev":{"id":"584ced70-c15e-5ad1-be06-54eed4cd36e0","html":"<h1 id=\"4-디플로이먼트deployment-생성-및-이미지-업데이트\" style=\"position:relative;\"><a href=\"#4-%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\" aria-label=\"4 디플로이먼트deployment 생성 및 이미지 업데이트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 디플로이먼트(Deployment) 생성 및 이미지 업데이트</h1>\n<h2 id=\"문제-요건\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[문제 요건]</h2>\n<ul>\n<li><code class=\"language-text\">default</code> 네임스페이스에 <code class=\"language-text\">nginx:1.16</code> 이미지를 사용하는 신규 디플로이먼트 <code class=\"language-text\">nginx-deploy</code>를 생성해야한다. 레플리카 수는 1.</li>\n<li>그 뒤, 디플로이먼트의 버전을 롤링 업데이트(Rolling Update)로 <code class=\"language-text\">1.17</code>로 업데이트</li>\n<li>채점기준\n<ul>\n<li>이미지: nginx:1.16</li>\n<li>작업: 디플로이먼트의 버전을 1.17로 업그레이드</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"내-풀이\" style=\"position:relative;\"><a href=\"#%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[내 풀이]</h2>\n<ul>\n<li>쿠버네티스 공식 문서의 kubectl cheatsheet 페이지 참조해 디플로이먼트 리소스 생성</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~<span class=\"token comment\"># kubectl create deployment nginx-deploy --image=nginx:1.16 --replicas=1</span>\ndeployment.apps/nginx-deploy created\nNAME           READY   UP-TO-DATE   AVAILABLE   AGE   CONTAINERS   IMAGES         SELECTOR\ngold-nginx     <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           20m   nginx        nginx:latest   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>gold-nginx\nnginx-deploy   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           37s   nginx        nginx:1.16     <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy</code></pre></div>\n<br/>\n<ul>\n<li>같은 페이지의 리소스 업데이트 탭을 참조해 이미지 업데이트\n<ul>\n<li>Tip: 이미지를 업데이트할 때에는 <code class=\"language-text\">kubectl set image &lt;리소스종류>/&lt;리소스 이름> &lt;컨테이너명>=&lt;이미지:버전></code> 명령어를 사용하면 이미지가 롤링업데이트 된다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane:~<span class=\"token comment\"># kubectl set image deployment/nginx-deploy nginx=nginx:1.17</span>\ndeployment.apps/nginx-deploy image updated\nroot@controlplane:~<span class=\"token comment\"># k get deployments.apps -o wide</span>\nNAME           READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES         SELECTOR\ngold-nginx     <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           24m     nginx        nginx:latest   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>gold-nginx\nnginx-deploy   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           4m10s   nginx        nginx:1.17     <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"참고-url\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0-url\" aria-label=\"참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[참고 URL]</h2>\n<ul>\n<li>이미지 업데이트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/#%EB%A6%AC%EC%86%8C%EC%8A%A4-%EC%97%85%EB%8D%B0%EC%9D%B4%ED%8A%B8\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/#리소스-업데이트</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 15, 2022","title":"쿠버네티스(Kubernetes) CKA Lightning Lab 4 - 디플로이먼트(Deployment) 생성 및 이미지 업데이트","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220515-kubernetes-cka-lightning-lab4/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220515-python-day28/","nextSlug":"/220515-kubernetes-cka-lightning-lab3/","prevSlug":"/220515-kubernetes-cka-lightning-lab4/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}