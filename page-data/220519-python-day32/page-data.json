{"componentChunkName":"component---src-templates-blog-template-js","path":"/220519-python-day32/","result":{"data":{"cur":{"id":"d92ec119-7f3a-528b-9043-c7bfb6776e01","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo1.jpg\" alt=\"2022-05-19-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo2.jpg\" alt=\"2022-05-19-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"01-에러와-예외처리\" style=\"position:relative;\"><a href=\"#01-%EC%97%90%EB%9F%AC%EC%99%80-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\" aria-label=\"01 에러와 예외처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 에러와 예외처리</h1>\n<h2 id=\"1-예외처리가-필요한-이유\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 예외처리가 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예외처리가 필요한 이유</h2>\n<ul>\n<li>사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다.</li>\n<li>예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력</li>\n<li>프로그램 실행 중 발생하는 에러를 미연에 방지</li>\n</ul>\n<br/>\n<h2 id=\"2-try-except-구문\" style=\"position:relative;\"><a href=\"#2-try-except-%EA%B5%AC%EB%AC%B8\" aria-label=\"2 try except 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. try-except 구문</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    예외가 발생할 수 있는 코드\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    예외 발생 시 실행할 코드\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    예외 발생하지 않은 경우 실행할 코드\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    항상 실행할 코드</code></pre></div>\n<ul>\n<li>else: 자주 사용하지 않음</li>\n<li>finally: 어떠한 자원을 반환할 때 사용</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 정상적으로 숫자를 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\n<span class=\"token number\">9.090909090909092</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 문자열을 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nValueError<span class=\"token punctuation\">:</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 숫자를 0으로 나눈 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nZeroDivisionError<span class=\"token punctuation\">:</span> division by zero</code></pre></div>\n<br/>\n<ul>\n<li>try except 문으로 예외처리를 해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>주의: try ~ except를 사용하면 프로그램이 도중에 종료되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램이 종료되었나요?\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>위의 코드에서, 예외처리를 하지 않은 경우 마지막 print문은 출력되지 않는다.</li>\n</ul>\n<br/>\n<ul>\n<li>예외처리시 발생하는 에러를 미리 지정하기도 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>문자열을 입력했을 때의 표시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>숫자를 0으로 나눴을때 메시지를 출력한다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\n나누기 <span class=\"token number\">0</span>은 불가능합니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>에러 뒤에 as e 를 붙여주고 print문에도 e를 추가하면 에러메시지를 추가로 확인할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>else와 finally를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하지 않았을 때 실행되는 코드\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 파일 담기</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하던지, 발생하지 않았던지 실행되는 코드\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span>\n예외가 발생하던지<span class=\"token punctuation\">,</span> 발생하지 않았던지 실행되는 코드 </code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 에러와 예외처리에 대해 알아보았다. 다음 포스팅에서는 에러와 에러를 만들어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-19-Python-Photo1 2022-05-19-Python-Photo2  01. 에러와 예외처리 1. 예외처리가 필요한 이유 사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다. 예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력 프로그램 실행 중 발생하는 에러를 미연에 방지 2. try-except 구문 else: 자주 사용하지 않음 finally: 어떠한 자원을 반환할 때 사용  3. 실습 프로그램 실행 후, 정상적으로 숫자를 입력한 결과 프로그램 실행 후, 문자열을 입력한 결과 프로그램 실행 후, 숫자를 0으로 나눈 결과 try except 문으로 예외처…","frontmatter":{"date":"May 19, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 32일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220519-python-day32/"}},"next":{"id":"7ab31b96-73eb-50ca-b703-d6493c92229c","html":"<h1 id=\"1-모의고사-34---시큐리티-폴리시security-policy가-적용된-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-34---%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%8F%B4%EB%A6%AC%EC%8B%9Csecurity-policy%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 34   시큐리티 폴리시security policy가 적용된 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.4 - 시큐리티 폴리시(Security Policy)가 적용된 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a Pod called <code class=\"language-text\">non-root-pod</code> , image: <code class=\"language-text\">redis:alpine</code>runAsUser: 1000 fsGroup: 2000</p>\n<ul>\n<li>Pod non-root-pod fsGroup configured</li>\n<li>Pod non-root-pod runAsUser configured</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<br/>\n<h3 id=\"2-시큐리티-폴리시security-policy가-적용된-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-%EC%8B%9C%ED%81%90%EB%A6%AC%ED%8B%B0-%ED%8F%B4%EB%A6%AC%EC%8B%9Csecurity-policy%EA%B0%80-%EC%A0%81%EC%9A%A9%EB%90%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 시큐리티 폴리시security policy가 적용된 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 시큐리티 폴리시(Security Policy)가 적용된 파드(POD) 생성</h3>\n<ul>\n<li>명령형 커맨드로 파드의 매니페스트 파일을 만들어 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run non-root-pod --image<span class=\"token operator\">=</span>redis:alpine --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> non-root-pod.yaml</code></pre></div>\n<br/>\n<ul>\n<li>생성한 매니페스트 파일을 문제 요건에 맞게 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi non<span class=\"token operator\">-</span>root<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n    <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> non<span class=\"token operator\">-</span>root<span class=\"token operator\">-</span>pod\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> non<span class=\"token operator\">-</span>root<span class=\"token operator\">-</span>pod\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> image<span class=\"token operator\">:</span> redis<span class=\"token operator\">:</span>alpine\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> non<span class=\"token operator\">-</span>root<span class=\"token operator\">-</span>pod\n  <span class=\"token literal-property property\">securityContext</span><span class=\"token operator\">:</span>\n    <span class=\"token literal-property property\">runAsUser</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n    <span class=\"token literal-property property\">fsGroup</span><span class=\"token operator\">:</span> <span class=\"token number\">2000</span>\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f non-root-pod.yaml \npod/non-root-pod created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 컨테이너가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod non-root-pod \nName:         non-root-pod\nNamespace:    default\nPriority:     <span class=\"token number\">0</span>\nNode:         node01/10.29.76.9\nStart Time:   Wed, <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:57:18 +0000\nLabels:       <span class=\"token assign-left variable\">run</span><span class=\"token operator\">=</span>non-root-pod\nAnnotations:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nStatus:       Running\nIP:           <span class=\"token number\">10.50</span>.192.3\nIPs:\n  IP:  <span class=\"token number\">10.50</span>.192.3\nContainers:\n  non-root-pod:\n    Container ID:   docker://eb29b88b097e1687c99d134b2ae2742a0128e0ba574d3505c8d2f8aeb7820058\n    Image:          redis:alpine\n    Image ID:       docker-pullable://redis@sha256:541e6d75df5dfb08e8859929bab06da265673808a6f2285abe6b7c76c1c98c6e\n    Port:           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:      <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    State:          Running\n      Started:      Wed, <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:57:29 +0000\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-mq4qs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  default-token-mq4qs:\n    Type:        Secret <span class=\"token punctuation\">(</span>a volume populated by a Secret<span class=\"token punctuation\">)</span>\n    SecretName:  default-token-mq4qs\n    Optional:    <span class=\"token boolean\">false</span>\nQoS Class:       BestEffort\nNode-Selectors:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:     node.kubernetes.io/not-ready:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\n                 node.kubernetes.io/unreachable:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  13s   default-scheduler  Successfully assigned default/non-root-pod to node01\n  Normal  Pulling    9s    kubelet            Pulling image <span class=\"token string\">\"redis:alpine\"</span>\n  Normal  Pulled     5s    kubelet            Successfully pulled image <span class=\"token string\">\"redis:alpine\"</span> <span class=\"token keyword\">in</span> <span class=\"token number\">3</span>.895443062s\n  Normal  Created    4s    kubelet            Created container non-root-pod\n  Normal  Started    2s    kubelet            Started container non-root-pod</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>Configure a Security Context: <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod\">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.4 - 시큐리티 폴리시(Security Policy)가 적용된 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-04/"}},"prev":{"id":"df3a445a-9654-51d9-98d0-4e48e96b5415","html":"<h1 id=\"1-모의고사-35---네트워크-폴리시network-policy-적용하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-35---%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8F%B4%EB%A6%AC%EC%8B%9Cnetwork-policy-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 35   네트워크 폴리시network policy 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.5 - 네트워크 폴리시(Network Policy) 적용하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>We have deployed a new pod called <code class=\"language-text\">np-test-1</code> and a service called <code class=\"language-text\">np-test-service</code>. Incoming connections to this service are not working. Troubleshoot and fix it.Create NetworkPolicy, by the name <code class=\"language-text\">ingress-to-nptest</code> that allows incoming connections to the service over port <code class=\"language-text\">80</code>.</p>\n<p>Important: Don’t delete any current objects deployed.</p>\n<ul>\n<li>Important: Don’t Alter Existing Objects!</li>\n<li>NetworkPolicy: Applied to All sources (Incoming traffic from all pods)?</li>\n<li>NetWorkPolicy: Correct Port?</li>\n<li>NetWorkPolicy: Applied to correct Pod?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-네트워크-폴리시network-policy-적용\" style=\"position:relative;\"><a href=\"#2-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8F%B4%EB%A6%AC%EC%8B%9Cnetwork-policy-%EC%A0%81%EC%9A%A9\" aria-label=\"2 네트워크 폴리시network policy 적용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 네트워크 폴리시(Network Policy) 적용</h3>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 문제에서 제시한 파드와 서비스가 제대로 생성되어 실행되고 있는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pod,service\nNAME            READY   STATUS    RESTARTS   AGE\npod/np-test-1   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          36s\npod/pvviwer     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6m16s\n\nNAME                      TYPE        CLUSTER-IP      EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>   AGE\nservice/kubernetes        ClusterIP   <span class=\"token number\">10.96</span>.0.1       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span>/TCP   17m\nservice/np-test-service   ClusterIP   <span class=\"token number\">10.110</span>.84.136   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">80</span>/TCP    37s</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">run</code> 명령어로 테스트용 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k run curl <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>alpine<span class=\"token operator\">/</span>curl <span class=\"token operator\">--</span>rm <span class=\"token operator\">-</span>it <span class=\"token operator\">--</span> sh\nIf you don't see a command prompt<span class=\"token punctuation\">,</span> <span class=\"token keyword\">try</span> pressing enter<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">/</span> # curl np<span class=\"token operator\">-</span>test<span class=\"token operator\">-</span>service</code></pre></div>\n<ul>\n<li><code class=\"language-text\">curl</code> 명령어에 반응이 없는 상태.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">vi</code> 명령어로 네트워크 폴리시 매니페스트 파일을 생성해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> np.yaml\n\n---\n\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ingress-to-nptest\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      run: np-test-1\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - ipBlock:\n        cidr: <span class=\"token number\">0.0</span>.0.0/0\n    ports:\n    - protocol: TCP\n      port: <span class=\"token number\">80</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 네트워크 폴리시를 생성해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f np.yaml \nnetworkpolicy.networking.k8s.io/ingress-to-nptest created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 네트워크 폴리시가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe networkpolicies.networking.k8s.io ingress-to-nptest \nName:         ingress-to-nptest\nNamespace:    default\nCreated on:   <span class=\"token number\">2022</span>-05-19 <span class=\"token number\">12</span>:30:41 +0000 UTC\nLabels:       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nAnnotations:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nSpec:\n  PodSelector:     <span class=\"token assign-left variable\">run</span><span class=\"token operator\">=</span>np-test-1\n  Allowing ingress traffic:\n    To Port: <span class=\"token number\">80</span>/TCP\n    From:\n      IPBlock:\n        CIDR: <span class=\"token number\">0.0</span>.0.0/0\n        Except: \n  Not affecting egress traffic\n  Policy Types: Ingress</code></pre></div>\n<br/>\n<ul>\n<li>생성해두었던 테스트용 파드의 쉘을 실행해 <code class=\"language-text\">curl</code> 명령어로 파드에 트래픽을 전송할 수 있는지 확인한다.\n<ul>\n<li>확인이 완료된 후, <code class=\"language-text\">exit</code> 명령어로 컨테이너 내의 쉘에서 빠져나올 수 있다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ✖ k <span class=\"token builtin class-name\">exec</span> <span class=\"token function\">curl</span> -it -- <span class=\"token function\">sh</span>\n/ <span class=\"token comment\"># curl np-test-service</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>DOCTYPE html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>html<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>title<span class=\"token operator\">></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/title<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n    body <span class=\"token punctuation\">{</span>\n        width: 35em<span class=\"token punctuation\">;</span>\n        margin: <span class=\"token number\">0</span> auto<span class=\"token punctuation\">;</span>\n        font-family: Tahoma, Verdana, Arial, sans-serif<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span>/style<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/head<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>Welcome to nginx<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span>/h<span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span>\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>For online documentation and support please refer to\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.org/\"</span><span class=\"token operator\">></span>nginx.org<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>br/<span class=\"token operator\">></span>\nCommercial support is available at\n<span class=\"token operator\">&lt;</span>a <span class=\"token assign-left variable\">href</span><span class=\"token operator\">=</span><span class=\"token string\">\"http://nginx.com/\"</span><span class=\"token operator\">></span>nginx.com<span class=\"token operator\">&lt;</span>/a<span class=\"token operator\">></span>.<span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>em<span class=\"token operator\">></span>Thank you <span class=\"token keyword\">for</span> using nginx.<span class=\"token operator\">&lt;</span>/em<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>/p<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/body<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span>/html<span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>네트워크 정책(Network Policy): <a href=\"https://kubernetes.io/ko/docs/concepts/services-networking/network-policies/\">https://kubernetes.io/ko/docs/concepts/services-networking/network-policies/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.5 - 네트워크 폴리시(Security Policy) 적용하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-05/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220519-python-day32/","nextSlug":"/220519-kubernetes-cka-mock-exam-3-04/","prevSlug":"/220519-kubernetes-cka-mock-exam-3-05/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}