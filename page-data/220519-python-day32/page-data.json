{"componentChunkName":"component---src-templates-blog-template-js","path":"/220519-python-day32/","result":{"data":{"cur":{"id":"d92ec119-7f3a-528b-9043-c7bfb6776e01","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo1.jpg\" alt=\"2022-05-19-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo2.jpg\" alt=\"2022-05-19-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"01-에러와-예외처리\" style=\"position:relative;\"><a href=\"#01-%EC%97%90%EB%9F%AC%EC%99%80-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\" aria-label=\"01 에러와 예외처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 에러와 예외처리</h1>\n<h2 id=\"1-예외처리가-필요한-이유\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 예외처리가 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예외처리가 필요한 이유</h2>\n<ul>\n<li>사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다.</li>\n<li>예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력</li>\n<li>프로그램 실행 중 발생하는 에러를 미연에 방지</li>\n</ul>\n<br/>\n<h2 id=\"2-try-except-구문\" style=\"position:relative;\"><a href=\"#2-try-except-%EA%B5%AC%EB%AC%B8\" aria-label=\"2 try except 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. try-except 구문</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    예외가 발생할 수 있는 코드\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    예외 발생 시 실행할 코드\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    예외 발생하지 않은 경우 실행할 코드\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    항상 실행할 코드</code></pre></div>\n<ul>\n<li>else: 자주 사용하지 않음</li>\n<li>finally: 어떠한 자원을 반환할 때 사용</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 정상적으로 숫자를 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\n<span class=\"token number\">9.090909090909092</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 문자열을 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nValueError<span class=\"token punctuation\">:</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 숫자를 0으로 나눈 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nZeroDivisionError<span class=\"token punctuation\">:</span> division by zero</code></pre></div>\n<br/>\n<ul>\n<li>try except 문으로 예외처리를 해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>주의: try ~ except를 사용하면 프로그램이 도중에 종료되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램이 종료되었나요?\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>위의 코드에서, 예외처리를 하지 않은 경우 마지막 print문은 출력되지 않는다.</li>\n</ul>\n<br/>\n<ul>\n<li>예외처리시 발생하는 에러를 미리 지정하기도 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>문자열을 입력했을 때의 표시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>숫자를 0으로 나눴을때 메시지를 출력한다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\n나누기 <span class=\"token number\">0</span>은 불가능합니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>에러 뒤에 as e 를 붙여주고 print문에도 e를 추가하면 에러메시지를 추가로 확인할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>else와 finally를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하지 않았을 때 실행되는 코드\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 파일 담기</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하던지, 발생하지 않았던지 실행되는 코드\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span>\n예외가 발생하던지<span class=\"token punctuation\">,</span> 발생하지 않았던지 실행되는 코드 </code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 에러와 예외처리에 대해 알아보았다. 다음 포스팅에서는 에러와 에러를 만들어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-19-Python-Photo1 2022-05-19-Python-Photo2  01. 에러와 예외처리 1. 예외처리가 필요한 이유 사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다. 예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력 프로그램 실행 중 발생하는 에러를 미연에 방지 2. try-except 구문 else: 자주 사용하지 않음 finally: 어떠한 자원을 반환할 때 사용  3. 실습 프로그램 실행 후, 정상적으로 숫자를 입력한 결과 프로그램 실행 후, 문자열을 입력한 결과 프로그램 실행 후, 숫자를 0으로 나눈 결과 try except 문으로 예외처…","frontmatter":{"date":"May 19, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 32일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220519-python-day32/"}},"next":{"id":"333dce84-d10d-5672-a178-d58eebb746eb","html":"<h1 id=\"모의고사-37---레이블label이-여러-개인-파드-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-37---%EB%A0%88%EC%9D%B4%EB%B8%94label%EC%9D%B4-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%B8-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 37   레이블label이 여러 개인 파드 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 3.7 - 레이블(Label)이 여러 개인 파드 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a pod called <code class=\"language-text\">hr-pod</code> in <code class=\"language-text\">hr</code> namespace belonging to the <code class=\"language-text\">production</code> <code class=\"language-text\">environment</code> and <code class=\"language-text\">frontend</code> <code class=\"language-text\">tier</code> .image: <code class=\"language-text\">redis:alpine</code></p>\n<p>Use appropriate labels and create all the required objects if it does not exist in the system already.</p>\n<ul>\n<li>hr-pod labeled with <code class=\"language-text\">environment=production</code>?</li>\n<li>hr-pod labeled with <code class=\"language-text\">tier=frontend</code>?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-레이블label이-여러-개인-파드-생성\" style=\"position:relative;\"><a href=\"#2-%EB%A0%88%EC%9D%B4%EB%B8%94label%EC%9D%B4-%EC%97%AC%EB%9F%AC-%EA%B0%9C%EC%9D%B8-%ED%8C%8C%EB%93%9C-%EC%83%9D%EC%84%B1\" aria-label=\"2 레이블label이 여러 개인 파드 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 레이블(Label)이 여러 개인 파드 생성</h3>\n<ul>\n<li>명령형 커맨드로 파드 생성하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run hr-pod --image<span class=\"token operator\">=</span>redis:alpine -l <span class=\"token assign-left variable\">environment</span><span class=\"token operator\">=</span>production,tier<span class=\"token operator\">=</span>frontend -n hr\nError from server <span class=\"token punctuation\">(</span>NotFound<span class=\"token punctuation\">)</span>: namespaces <span class=\"token string\">\"hr\"</span> not found</code></pre></div>\n<ul>\n<li><code class=\"language-text\">hr</code> 네임스페이스가 없다는 에러 발생</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">hr</code> 네임스페이스를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ✖ k create ns hr\nnamespace<span class=\"token operator\">/</span>hr created</code></pre></div>\n<br/>\n<ul>\n<li>다시 명령형 커맨드로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run hr-pod --image<span class=\"token operator\">=</span>redis:alpine -l <span class=\"token assign-left variable\">environment</span><span class=\"token operator\">=</span>production,tier<span class=\"token operator\">=</span>frontend -n hr\npod/hr-pod created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 파드가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod -n hr hr-pod\nName:         hr-pod\nNamespace:    hr\nPriority:     <span class=\"token number\">0</span>\nNode:         controlplane/10.29.76.6\nStart Time:   Wed, <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:18:29 +0000\nLabels:       <span class=\"token assign-left variable\">environment</span><span class=\"token operator\">=</span>production\n              <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>frontend\nAnnotations:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nStatus:       Running\nIP:           <span class=\"token number\">10.50</span>.0.5\nIPs:\n  IP:  <span class=\"token number\">10.50</span>.0.5\nContainers:\n  hr-pod:\n    Container ID:   docker://c8d29845cfdb73e6612d50615954132bec278cb2ea074af4a10f3de1066e3991\n    Image:          redis:alpine\n    Image ID:       docker-pullable://redis@sha256:541e6d75df5dfb08e8859929bab06da265673808a6f2285abe6b7c76c1c98c6e\n    Port:           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:      <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    State:          Running\n      Started:      Wed, <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:18:34 +0000\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-8mdh6 <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  default-token-8mdh6:\n    Type:        Secret <span class=\"token punctuation\">(</span>a volume populated by a Secret<span class=\"token punctuation\">)</span>\n    SecretName:  default-token-8mdh6\n    Optional:    <span class=\"token boolean\">false</span>\nQoS Class:       BestEffort\nNode-Selectors:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:     node.kubernetes.io/not-ready:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\n                 node.kubernetes.io/unreachable:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  84s   default-scheduler  Successfully assigned hr/hr-pod to controlplane\n  Normal  Pulled     80s   kubelet            Container image <span class=\"token string\">\"redis:alpine\"</span> already present on machine\n  Normal  Created    80s   kubelet            Created container hr-pod\n  Normal  Started    79s   kubelet            Started container hr-pod</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl 치트 시트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.7 - 레이블(Label)이 여러 개인 파드 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-07/"}},"prev":{"id":"7227250d-e0e8-53ce-b9f5-8cc1ab22c571","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 11-2. 에러 만들기 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-20-Python-Photo1/2022-05-20-Python-Photo1.JPG\" alt=\"2022-05-20-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-20-Python-Photo1/2022-05-20-Python-Photo2.JPG\" alt=\"2022-05-20-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h2 id=\"1-raise-구문\" style=\"position:relative;\"><a href=\"#1-raise-%EA%B5%AC%EB%AC%B8\" aria-label=\"1 raise 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. raise 구문</h2>\n<ul>\n<li>에러를 강제로 발생시키기 위한 구문</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">raise</span> 예외<span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 메시지\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token keyword\">raise</span> Exception\n<span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 메시지\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"2-예외-계층-구조\" style=\"position:relative;\"><a href=\"#2-%EC%98%88%EC%99%B8-%EA%B3%84%EC%B8%B5-%EA%B5%AC%EC%A1%B0\" aria-label=\"2 예외 계층 구조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 예외 계층 구조</h2>\n<ul>\n<li>예외 계층 구조</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">BaseException\n <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> SystemExit\n <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> Keyboardinterrupt\n <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> GeneratorExit\n <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> Exception\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> Stopiteration\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> StopAsynciteration\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> ArithmeticError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> FloatingPointError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> OverflowError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> ZeroDivisionError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> AssertionError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> AttributeError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> BuffurError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> EOFError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> ImportError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> ModuleNotFoundError\n      <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> LookupError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> IndexError\n      <span class=\"token operator\">|</span>    <span class=\"token operator\">+</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span> KeyError\n</code></pre></div>\n<ul>\n<li>예시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token comment\"># ZeroDivisionError 하나만 받아서 처리</span>\n\n<span class=\"token keyword\">except</span> ArithmeticError <span class=\"token comment\"># ArithmeticError 하위의 세 에러 모두 받을 수 있음</span>\n\n<span class=\"token keyword\">except</span> Exception <span class=\"token comment\"># 하위의 모든 내장 예외를 모두 받을 수 있음</span></code></pre></div>\n<h2 id=\"3-에러-만들기\" style=\"position:relative;\"><a href=\"#3-%EC%97%90%EB%9F%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"3 에러 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 에러 만들기</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> 예외<span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># exception 클래스를 상속받는 것</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token string\">\"에러메시지\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"4-실습\" style=\"position:relative;\"><a href=\"#4-%EC%8B%A4%EC%8A%B5\" aria-label=\"4 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 실습</h2>\n<h3 id=\"1-에러-발생시키기\" style=\"position:relative;\"><a href=\"#1-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D%EC%8B%9C%ED%82%A4%EA%B8%B0\" aria-label=\"1 에러 발생시키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 에러 발생시키기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># raise 구문을 사용해서 에러를 강제로 발생시켜 보자.</span>\n\nnum <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"음수를 입력해 주세요>>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">if</span> num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"양수는 입력 불가\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">02.</span>에러발생시키기<span class=\"token punctuation\">.</span>py\n음수를 입력해 주세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/02.에러발생시키기.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"양수는 입력 불가\"</span><span class=\"token punctuation\">)</span>\nException<span class=\"token punctuation\">:</span> 양수는 입력 불가</code></pre></div>\n<ul>\n<li>try except 구문을 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># raise 구문을 사용해서 에러를 강제로 발생시켜 보자.</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"음수를 입력해 주세요>>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> Exception<span class=\"token punctuation\">(</span><span class=\"token string\">\"양수는 입력 불가\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> Exception <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 발생!\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">02.</span>에러발생시키기<span class=\"token punctuation\">.</span>py\n음수를 입력해 주세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1</span>\n에러 발생! 양수는 입력 불가</code></pre></div>\n<ul>\n<li>에러를 Exception이 아닌 기타 내장된 에러로 변경할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># raise 구문을 사용해서 에러를 강제로 발생시켜 보자.</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"음수를 입력해 주세요>>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> ValueError<span class=\"token punctuation\">(</span><span class=\"token string\">\"양수는 입력 불가\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 발생!\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"2-에러-만들기\" style=\"position:relative;\"><a href=\"#2-%EC%97%90%EB%9F%AC-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 에러 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 에러 만들기</h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PositiveNumberError</span><span class=\"token punctuation\">(</span>Exception<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span><span class=\"token string\">\"양수는 입력 불가\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    num <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"음수를 입력해 주세요>>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> num <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> PositiveNumberError\n<span class=\"token keyword\">except</span> PositiveNumberError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"에러 발생!\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">03.</span>에러만들기<span class=\"token punctuation\">.</span>py\n음수를 입력해 주세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">2</span>\n에러 발생! 양수는 입력 불가</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 에러와 예외처리에 대해 알아보았다. 다음 포스팅에서는 에러와 에러를 만들어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 20, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 33일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220520-python-day33/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220519-python-day32/","nextSlug":"/220519-kubernetes-cka-mock-exam-3-07/","prevSlug":"/220520-python-day33/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}