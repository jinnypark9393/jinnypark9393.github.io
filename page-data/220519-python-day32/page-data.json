{"componentChunkName":"component---src-templates-blog-template-js","path":"/220519-python-day32/","result":{"data":{"cur":{"id":"d92ec119-7f3a-528b-9043-c7bfb6776e01","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo1.jpg\" alt=\"2022-05-19-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-19-Python-Photo/2022-05-19-Python-Photo2.jpg\" alt=\"2022-05-19-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"01-에러와-예외처리\" style=\"position:relative;\"><a href=\"#01-%EC%97%90%EB%9F%AC%EC%99%80-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC\" aria-label=\"01 에러와 예외처리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 에러와 예외처리</h1>\n<h2 id=\"1-예외처리가-필요한-이유\" style=\"position:relative;\"><a href=\"#1-%EC%98%88%EC%99%B8%EC%B2%98%EB%A6%AC%EA%B0%80-%ED%95%84%EC%9A%94%ED%95%9C-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 예외처리가 필요한 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 예외처리가 필요한 이유</h2>\n<ul>\n<li>사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다.</li>\n<li>예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력</li>\n<li>프로그램 실행 중 발생하는 에러를 미연에 방지</li>\n</ul>\n<br/>\n<h2 id=\"2-try-except-구문\" style=\"position:relative;\"><a href=\"#2-try-except-%EA%B5%AC%EB%AC%B8\" aria-label=\"2 try except 구문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. try-except 구문</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n    예외가 발생할 수 있는 코드\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span>\n    예외 발생 시 실행할 코드\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n    예외 발생하지 않은 경우 실행할 코드\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span>\n    항상 실행할 코드</code></pre></div>\n<ul>\n<li>else: 자주 사용하지 않음</li>\n<li>finally: 어떠한 자원을 반환할 때 사용</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 정상적으로 숫자를 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\n<span class=\"token number\">9.090909090909092</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 문자열을 입력한 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">1100</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nValueError<span class=\"token punctuation\">:</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>프로그램 실행 후, 숫자를 0으로 나눈 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/jinipark/Documents/python_basic/myvenv/Chapter11/01.예외처리.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nZeroDivisionError<span class=\"token punctuation\">:</span> division by zero</code></pre></div>\n<br/>\n<ul>\n<li>try except 문으로 예외처리를 해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>주의: try ~ except를 사용하면 프로그램이 도중에 종료되지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"프로그램이 종료되었나요?\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>위의 코드에서, 예외처리를 하지 않은 경우 마지막 print문은 출력되지 않는다.</li>\n</ul>\n<br/>\n<ul>\n<li>예외처리시 발생하는 에러를 미리 지정하기도 한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>문자열을 입력했을 때의 표시</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span> a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>숫자를 0으로 나눴을때 메시지를 출력한다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">10000</span>\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span><span class=\"token number\">0</span>\n나누기 <span class=\"token number\">0</span>은 불가능합니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>에러 뒤에 as e 를 붙여주고 print문에도 e를 추가하면 에러메시지를 추가로 확인할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span></code></pre></div>\n<br/>\n<ul>\n<li>else와 finally를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 원화를 입력, 환율 입력 -> 달러 값 출력</span>\n\nwon <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"원화 금액을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\ndollar <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"환율을 입력 하세요>>>\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생할 수 있는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>won<span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>dollar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ValueError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 예외가 발생했을 때 실행되는 코드</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"문자열 예외가 발생했습니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">except</span> ZeroDivisionError <span class=\"token keyword\">as</span> e<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나누기 0은 불가능합니다.\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> \n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하지 않았을 때 실행되는 코드\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">finally</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 파일 담기</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"예외가 발생하던지, 발생하지 않았던지 실행되는 코드\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter11<span class=\"token operator\">/</span><span class=\"token number\">01.</span>예외처리<span class=\"token punctuation\">.</span>py\n원화 금액을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n환율을 입력 하세요<span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n문자열 예외가 발생했습니다<span class=\"token punctuation\">.</span> invalid literal <span class=\"token keyword\">for</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">with</span> base <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'a'</span>\n예외가 발생하던지<span class=\"token punctuation\">,</span> 발생하지 않았던지 실행되는 코드 </code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 에러와 예외처리에 대해 알아보았다. 다음 포스팅에서는 에러와 에러를 만들어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 11-1. 에러와 예외처리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-19-Python-Photo1 2022-05-19-Python-Photo2  01. 에러와 예외처리 1. 예외처리가 필요한 이유 사용자가 개발자 예측대로만 프로그램을 사용하지는 않는다. 예: 숫자를 입력하라고 프로그램이 요청했지만 사용자가 빈칸으로 놔두거나, 문자열을 입력 프로그램 실행 중 발생하는 에러를 미연에 방지 2. try-except 구문 else: 자주 사용하지 않음 finally: 어떠한 자원을 반환할 때 사용  3. 실습 프로그램 실행 후, 정상적으로 숫자를 입력한 결과 프로그램 실행 후, 문자열을 입력한 결과 프로그램 실행 후, 숫자를 0으로 나눈 결과 try except 문으로 예외처…","frontmatter":{"date":"May 19, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 32일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220519-python-day32/"}},"next":{"id":"2d995473-dde9-5fe5-90fd-1fedbddbcf6f","html":"<h1 id=\"1-모의고사-38---kubeconfig-파일-트러블슈팅\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-38---kubeconfig-%ED%8C%8C%EC%9D%BC-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85\" aria-label=\"1 모의고사 38   kubeconfig 파일 트러블슈팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.8 - kubeconfig 파일 트러블슈팅</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>A kubeconfig file called <code class=\"language-text\">super.kubeconfig</code> has been created under <code class=\"language-text\">/root/CKA</code>. There is something wrong with the configuration. Troubleshoot and fix it.</p>\n<ul>\n<li>Fix /root/CKA/super.kubeconfig</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-kubeconfig-파일-트러블슈팅\" style=\"position:relative;\"><a href=\"#2-kubeconfig-%ED%8C%8C%EC%9D%BC-%ED%8A%B8%EB%9F%AC%EB%B8%94%EC%8A%88%ED%8C%85\" aria-label=\"2 kubeconfig 파일 트러블슈팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. kubeconfig 파일 트러블슈팅</h3>\n<ul>\n<li><code class=\"language-text\">cat</code> 명령어로 해당 kubeconfig 내용을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /root/CKA/super.kubeconfig\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EVXhPVEV5TURJek1Gb1hEVE15TURVeE5qRXlNREl6TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXZuCmpHcTcvSmh6TE1sYzVsdUdqV1NuWWdWVUtWK3EyK0NZVHgydjRwdENieHN0WHhBQmFMcy8zU0pYMEtGUFdHTlAKNTFvR0xDMitYMzRaNjJDK2pydGFQK2R6Q0VSQzVjWDBhcnRTTVVFK1J6aUQzZWdyUngybTJJdHVpSGE1WGt5aAo0eE43Q3M1b1VyQWxnQzAzd0hxM1RNM002VTg3MmxFRXR1WDU2ck9KNTN6MTUrQmp1MDlaQTRyak9XdkYyc3FDCjBWTi80ZXBYM1FKTXQ5alp3by9nTEVLdW0rRi9DaE5oTXpMdS9RK2k5S0dyZXZOOFBYUXRUU1U0VUJ1c2hTNEUKSGRPaXZnYmJMcitsUm5nTXBHTGNhUnA5cDBzVzJTQmtZZUVsL1plY3hScGlKS2o3blpKRWlxN3VsaXp5VXVjQwpTZ1AzMmlsOGpWTWx5bUlsTTI4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCZzRaLy9PTEdtQ1FlM3Zlb2psRjlEUmxyOS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCOUszbituc0N6WW50VEw5WXpVZTltTStnWUJqV1c2R21Qb0xEYVpyek9XOERRbEpSSQp1dDZqcUE0RzM4dm9NNnVHdElWOHhZVUNnVmFFQmo0WFI0cEZhcUUyZExGMTVuZE9ZSzRvdVRObi8zTW9DdE4vCkVQU3F0YU15aGlBUHRLdjhrTURzWTJpM1RsOHNQaGo4L0VaNTVybDhkYUkzK0lZN202TkxrK3g4NXVZVUQ2bGcKMkNOc1VuTTlMeDNTTWUranhoaXVxRWpZQk5ZY2xoR0d3a0hxd04vODJFT3p6TFRiK0pSVCtLMVdzL1hTSG1ESApSU2xHcWptNmc3MGtCMHVTS1VDdHVkZTZvNldMZDVZdms0RUNSU1BZVlhHdmFCSlU1eDNDbVNnM2NOL1VZTHZ3Ck1aTUgrbjVhR044UFBmQXh4R2xSTHd5YU9QM0hodFN0ZWhRRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg</span><span class=\"token operator\">==</span>\n    server: https://controlplane:9999\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lJWVpyZVJsek1ubUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TWpBMU1Ua3hNakF5TXpCYUZ3MHlNekExTVRreE1qQXlNek5hTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXV6VlVMa3Nsc2VwcUF6WGUKL3NqdTlqNnhBc2taNTBsdFZNaGpia0EwdUEzZmZ4d2k2TjZLYnBUNU5vN0FUS1pVZGFCdWtJajk2bFJkZEw2WQozOTV4VkF4ZGRwKytiY0ZXdGV2R0diZHlsb2VUeXBzSWJrUEM0Nk12SGJqWGRqMXhza3dCZU0rZ2V3K3c2YnJmCk1KWm9sQmhUeFBvM0NrMTk4WGQyNE82L2VjcW1PZmY2bG55NVQ1NEdCU1lrYzRPRGR4dlZub2N2UFQ2bkR6TGcKaWI2UW5ib2l6Y0JKaC9yeHpWUTM4TnFWRjhzUTMxWEZPanl0SGo3VFNqajhUZW0vZVVPQjMzU0d1YXZlWVFWTgpOSGpuMDRVcGhSTjZQMEtIakFvcTFuUUk4cnQwVkp2ZWZIRlN4WHhIaUIrUnJzL0dNSUtEbVgxK2FmZGplKzE0CnNUM04vUUlEQVFBQm8wZ3dSakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0h3WURWUjBqQkJnd0ZvQVVHRGhuLzg0c2FZSkI3ZTk2aU9VWDBOR1d2Mzh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHUStnbHp4SUhhOXJqWlliUTZudkNub2IwZWFVdVlWMCtOcStUWHJpOFRYMm1Ma1VXSE8yaUFLClp5SHdLL0xyQWhjSEQ3bnd2YkQvaWNsTUQ1ZVVrZ1FsWEloaUMweWtsaUlMalN3YTRDWks2ZlFHQmRLY1JhWlQKUWc5YVh3ZEdEZUxzb1hJNHhMYVRMSU1LL2RoWitCWmFhSzVpanpSR01zTHZvamhKUmpXWFRSMVUrdkVkbThBagovU0dJUENKZjZ2L2NqWG92ZCs2dGNZbENMb1o1eFVUWWROY3dMZVh4OFFZRU9jd2lCaG5OVXdkY0h5NTNRWHBUCmg0VTNrUXdtZnJoT0IraGZITWpEaTF3eFJXMW1QWStYT0JqZnBydWNHQ0RPNmdNeEQ5U1pFQTRWWHR1OE5kbU0KUDlIenJHMUxNa3I1em42NlRvSmVHd3lnaDZnRTFSaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo</span><span class=\"token operator\">=</span>\n    client-key-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXpWVUxrc2xzZXBxQXpYZS9zanU5ajZ4QXNrWjUwbHRWTWhqYmtBMHVBM2ZmeHdpCjZONkticFQ1Tm83QVRLWlVkYUJ1a0lqOTZsUmRkTDZZMzk1eFZBeGRkcCsrYmNGV3RldkdHYmR5bG9lVHlwc0kKYmtQQzQ2TXZIYmpYZGoxeHNrd0JlTStnZXcrdzZicmZNSlpvbEJoVHhQbzNDazE5OFhkMjRPNi9lY3FtT2ZmNgpsbnk1VDU0R0JTWWtjNE9EZHh2Vm5vY3ZQVDZuRHpMZ2liNlFuYm9pemNCSmgvcnh6VlEzOE5xVkY4c1EzMVhGCk9qeXRIajdUU2pqOFRlbS9lVU9CMzNTR3VhdmVZUVZOTkhqbjA0VXBoUk42UDBLSGpBb3ExblFJOHJ0MFZKdmUKZkhGU3hYeEhpQitScnMvR01JS0RtWDErYWZkamUrMTRzVDNOL1FJREFRQUJBb0lCQUVaUGd5eFg0UEp2WGgyUwprQXdWSDFxd3RQNmMxUE8rNmljYmsreUdoTVpUdjRzWDRDeWgyRkFyOTJWOE85RU43MDYyVUpCTVEwRk5La1I4CmlTSWJnMmpUdEE2bmRIZjRVejdFTElUZ0YxTmQzQzRPQ0I2UnFKS2lhVUc2ZUlIYUZlZW5FQzUxbklwYm5GQk0KZFNMa2VxYVVkSEhZbis5b3AxS1hVYml0TXBEazNRM3BobldaRkdkclZrQndpWGtGMjFRMEppN0ZXWTQwQ01oTApmNGpmTHVZbmhjK095enlqaTA0ZmpPbDM5T1NiYm0rdm84TzU0QXk3U3NWbTF5YlNxNnM0T2toRm1nZjNReURKCmxjUzJ1M0JrSmVIOHh0TFlUejBhMkhUaVJmc3JoeG83N2w2ZmY0S2NITFRETytCRklLUDhkUHg3Y2hhSlFncXYKZTVROVQ2a0NnWUVBMXlzUTFLTVI5c1ZmS0lKSnZSZFFkenpSVmc2NFVLLzNydEUyVjFsOWh3Nmdzb2VzeFZPVApnayt2dzJreEtoQnhjTkZqUWtIOXppK1lXakdFaU5xZS83Nm1vN3FmK3pIOURTRm1HdVRnR1pqcnk0S1VGMUV2CmRUZWpHU1JWN05kY0g0TWRDRjBqUTJOVUM0VWp3bGhOa2pVdCsvVExWd2c4ZEtrNS9mcG9QeXNDZ1lFQTNydjIKYnVqZ0tXV0l3U1FGTE1ua0ZUYVNzZlFUR0FKa1gwNzZaU2d5VC8rbWJlUWpWbjFZZXVTdXVGOXNYT1liUUtDOQppV2RqMWpza25kTDd3R3NPZTVzMFBqZ2lpOWkxOWl1S2s2aEVYejR6dFlUVXRGUXlTeFRWVnpkU0dvMTR6MWIzClA0UWIyRDBINy9RWE1zc2hYVGdKa3JoNUxHcHo1QkhHY29BbzAzY0NnWUJncC9mbmpWbUVnU1UrRFVrU3FHWjkKS2RUZjA3ejRnaFBCZERuMUF6NWdiVEhEQVMrYmRPL09tZjFheXVaSy94ZjJsaGtBcXFSWSt3aDFlOGtOc1NlNwp1dWtnbzdVNklqcUtxM1l5bnA0TTRhVUt4cDIvMjdoMTc0aFV3djNXWnVmN1Arcksxd3dBT1o2SGprZUNCaWpTCmhSRWpIZFE2Ukhqajd5RWQ5bDdlQVFLQmdRREp0c0EvUVhlQkJnc0xuMnR3WEliTEQxbGJBQWdxdmovWWNOWWoKdG51YUo1UzZBTnBnQWJTWDEzTEVWdWIwV3hCalB5OW51TktadVlZM3lGTm10NDJ1TTZqa2tFSDVGSkgyRndpeApJTHFLNXZJOWVjYUlhWmdDbHlOK2tRTXlPTjBvS1VKUnEzcnNJcG1GbmpGRU51SklZZStKaUxkMG1oUEtnSzZRCkU3RGxrUUtCZ0JDcUFLT2NMWVRldmlhYjRxb1VMbkZzYUtJbkNuY21EM2RUR2xYRmYva0Rsd2I3T2dReFk0Z0YKdURWRHZPNFR3ODRDZGdXcW85TFNibDF3NWtoYTFEdnY1MFh0ZG1LUG9DM3NXcWJPUFdTOXAzWm5Cd0htSVFuNAoycXpUNm5vbHFhRjBLOWhlRUJzL3BjeDJ5aXFEUnYwUmp1RENCOGorekJkZjVjak94OGtpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg</span><span class=\"token operator\">==</span></code></pre></div>\n<ul>\n<li>control plane과 통신하는 포트번호가 9999\n<ul>\n<li>쿠버네티스 클러스터와 통신하려면 kube-apiserver를 통해 통신해야하는데, kube-apiserver의 기본 포트는 6443이다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>포트번호를 6443으로 고친다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /root/CKA/super.kubeconfig\napiVersion: v1\nclusters:\n- cluster:\n    certificate-authority-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EVXhPVEV5TURJek1Gb1hEVE15TURVeE5qRXlNREl6TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTXZuCmpHcTcvSmh6TE1sYzVsdUdqV1NuWWdWVUtWK3EyK0NZVHgydjRwdENieHN0WHhBQmFMcy8zU0pYMEtGUFdHTlAKNTFvR0xDMitYMzRaNjJDK2pydGFQK2R6Q0VSQzVjWDBhcnRTTVVFK1J6aUQzZWdyUngybTJJdHVpSGE1WGt5aAo0eE43Q3M1b1VyQWxnQzAzd0hxM1RNM002VTg3MmxFRXR1WDU2ck9KNTN6MTUrQmp1MDlaQTRyak9XdkYyc3FDCjBWTi80ZXBYM1FKTXQ5alp3by9nTEVLdW0rRi9DaE5oTXpMdS9RK2k5S0dyZXZOOFBYUXRUU1U0VUJ1c2hTNEUKSGRPaXZnYmJMcitsUm5nTXBHTGNhUnA5cDBzVzJTQmtZZUVsL1plY3hScGlKS2o3blpKRWlxN3VsaXp5VXVjQwpTZ1AzMmlsOGpWTWx5bUlsTTI4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCZzRaLy9PTEdtQ1FlM3Zlb2psRjlEUmxyOS9NQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFCOUszbituc0N6WW50VEw5WXpVZTltTStnWUJqV1c2R21Qb0xEYVpyek9XOERRbEpSSQp1dDZqcUE0RzM4dm9NNnVHdElWOHhZVUNnVmFFQmo0WFI0cEZhcUUyZExGMTVuZE9ZSzRvdVRObi8zTW9DdE4vCkVQU3F0YU15aGlBUHRLdjhrTURzWTJpM1RsOHNQaGo4L0VaNTVybDhkYUkzK0lZN202TkxrK3g4NXVZVUQ2bGcKMkNOc1VuTTlMeDNTTWUranhoaXVxRWpZQk5ZY2xoR0d3a0hxd04vODJFT3p6TFRiK0pSVCtLMVdzL1hTSG1ESApSU2xHcWptNmc3MGtCMHVTS1VDdHVkZTZvNldMZDVZdms0RUNSU1BZVlhHdmFCSlU1eDNDbVNnM2NOL1VZTHZ3Ck1aTUgrbjVhR044UFBmQXh4R2xSTHd5YU9QM0hodFN0ZWhRRAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg</span><span class=\"token operator\">==</span>\n    server: https://controlplane:6443\n  name: kubernetes\ncontexts:\n- context:\n    cluster: kubernetes\n    user: kubernetes-admin\n  name: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\nusers:\n- name: kubernetes-admin\n  user:\n    client-certificate-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lJWVpyZVJsek1ubUF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TWpBMU1Ua3hNakF5TXpCYUZ3MHlNekExTVRreE1qQXlNek5hTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXV6VlVMa3Nsc2VwcUF6WGUKL3NqdTlqNnhBc2taNTBsdFZNaGpia0EwdUEzZmZ4d2k2TjZLYnBUNU5vN0FUS1pVZGFCdWtJajk2bFJkZEw2WQozOTV4VkF4ZGRwKytiY0ZXdGV2R0diZHlsb2VUeXBzSWJrUEM0Nk12SGJqWGRqMXhza3dCZU0rZ2V3K3c2YnJmCk1KWm9sQmhUeFBvM0NrMTk4WGQyNE82L2VjcW1PZmY2bG55NVQ1NEdCU1lrYzRPRGR4dlZub2N2UFQ2bkR6TGcKaWI2UW5ib2l6Y0JKaC9yeHpWUTM4TnFWRjhzUTMxWEZPanl0SGo3VFNqajhUZW0vZVVPQjMzU0d1YXZlWVFWTgpOSGpuMDRVcGhSTjZQMEtIakFvcTFuUUk4cnQwVkp2ZWZIRlN4WHhIaUIrUnJzL0dNSUtEbVgxK2FmZGplKzE0CnNUM04vUUlEQVFBQm8wZ3dSakFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0h3WURWUjBqQkJnd0ZvQVVHRGhuLzg0c2FZSkI3ZTk2aU9VWDBOR1d2Mzh3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFHUStnbHp4SUhhOXJqWlliUTZudkNub2IwZWFVdVlWMCtOcStUWHJpOFRYMm1Ma1VXSE8yaUFLClp5SHdLL0xyQWhjSEQ3bnd2YkQvaWNsTUQ1ZVVrZ1FsWEloaUMweWtsaUlMalN3YTRDWks2ZlFHQmRLY1JhWlQKUWc5YVh3ZEdEZUxzb1hJNHhMYVRMSU1LL2RoWitCWmFhSzVpanpSR01zTHZvamhKUmpXWFRSMVUrdkVkbThBagovU0dJUENKZjZ2L2NqWG92ZCs2dGNZbENMb1o1eFVUWWROY3dMZVh4OFFZRU9jd2lCaG5OVXdkY0h5NTNRWHBUCmg0VTNrUXdtZnJoT0IraGZITWpEaTF3eFJXMW1QWStYT0JqZnBydWNHQ0RPNmdNeEQ5U1pFQTRWWHR1OE5kbU0KUDlIenJHMUxNa3I1em42NlRvSmVHd3lnaDZnRTFSaz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo</span><span class=\"token operator\">=</span>\n    client-key-data: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdXpWVUxrc2xzZXBxQXpYZS9zanU5ajZ4QXNrWjUwbHRWTWhqYmtBMHVBM2ZmeHdpCjZONkticFQ1Tm83QVRLWlVkYUJ1a0lqOTZsUmRkTDZZMzk1eFZBeGRkcCsrYmNGV3RldkdHYmR5bG9lVHlwc0kKYmtQQzQ2TXZIYmpYZGoxeHNrd0JlTStnZXcrdzZicmZNSlpvbEJoVHhQbzNDazE5OFhkMjRPNi9lY3FtT2ZmNgpsbnk1VDU0R0JTWWtjNE9EZHh2Vm5vY3ZQVDZuRHpMZ2liNlFuYm9pemNCSmgvcnh6VlEzOE5xVkY4c1EzMVhGCk9qeXRIajdUU2pqOFRlbS9lVU9CMzNTR3VhdmVZUVZOTkhqbjA0VXBoUk42UDBLSGpBb3ExblFJOHJ0MFZKdmUKZkhGU3hYeEhpQitScnMvR01JS0RtWDErYWZkamUrMTRzVDNOL1FJREFRQUJBb0lCQUVaUGd5eFg0UEp2WGgyUwprQXdWSDFxd3RQNmMxUE8rNmljYmsreUdoTVpUdjRzWDRDeWgyRkFyOTJWOE85RU43MDYyVUpCTVEwRk5La1I4CmlTSWJnMmpUdEE2bmRIZjRVejdFTElUZ0YxTmQzQzRPQ0I2UnFKS2lhVUc2ZUlIYUZlZW5FQzUxbklwYm5GQk0KZFNMa2VxYVVkSEhZbis5b3AxS1hVYml0TXBEazNRM3BobldaRkdkclZrQndpWGtGMjFRMEppN0ZXWTQwQ01oTApmNGpmTHVZbmhjK095enlqaTA0ZmpPbDM5T1NiYm0rdm84TzU0QXk3U3NWbTF5YlNxNnM0T2toRm1nZjNReURKCmxjUzJ1M0JrSmVIOHh0TFlUejBhMkhUaVJmc3JoeG83N2w2ZmY0S2NITFRETytCRklLUDhkUHg3Y2hhSlFncXYKZTVROVQ2a0NnWUVBMXlzUTFLTVI5c1ZmS0lKSnZSZFFkenpSVmc2NFVLLzNydEUyVjFsOWh3Nmdzb2VzeFZPVApnayt2dzJreEtoQnhjTkZqUWtIOXppK1lXakdFaU5xZS83Nm1vN3FmK3pIOURTRm1HdVRnR1pqcnk0S1VGMUV2CmRUZWpHU1JWN05kY0g0TWRDRjBqUTJOVUM0VWp3bGhOa2pVdCsvVExWd2c4ZEtrNS9mcG9QeXNDZ1lFQTNydjIKYnVqZ0tXV0l3U1FGTE1ua0ZUYVNzZlFUR0FKa1gwNzZaU2d5VC8rbWJlUWpWbjFZZXVTdXVGOXNYT1liUUtDOQppV2RqMWpza25kTDd3R3NPZTVzMFBqZ2lpOWkxOWl1S2s2aEVYejR6dFlUVXRGUXlTeFRWVnpkU0dvMTR6MWIzClA0UWIyRDBINy9RWE1zc2hYVGdKa3JoNUxHcHo1QkhHY29BbzAzY0NnWUJncC9mbmpWbUVnU1UrRFVrU3FHWjkKS2RUZjA3ejRnaFBCZERuMUF6NWdiVEhEQVMrYmRPL09tZjFheXVaSy94ZjJsaGtBcXFSWSt3aDFlOGtOc1NlNwp1dWtnbzdVNklqcUtxM1l5bnA0TTRhVUt4cDIvMjdoMTc0aFV3djNXWnVmN1Arcksxd3dBT1o2SGprZUNCaWpTCmhSRWpIZFE2Ukhqajd5RWQ5bDdlQVFLQmdRREp0c0EvUVhlQkJnc0xuMnR3WEliTEQxbGJBQWdxdmovWWNOWWoKdG51YUo1UzZBTnBnQWJTWDEzTEVWdWIwV3hCalB5OW51TktadVlZM3lGTm10NDJ1TTZqa2tFSDVGSkgyRndpeApJTHFLNXZJOWVjYUlhWmdDbHlOK2tRTXlPTjBvS1VKUnEzcnNJcG1GbmpGRU51SklZZStKaUxkMG1oUEtnSzZRCkU3RGxrUUtCZ0JDcUFLT2NMWVRldmlhYjRxb1VMbkZzYUtJbkNuY21EM2RUR2xYRmYva0Rsd2I3T2dReFk0Z0YKdURWRHZPNFR3ODRDZGdXcW85TFNibDF3NWtoYTFEdnY1MFh0ZG1LUG9DM3NXcWJPUFdTOXAzWm5Cd0htSVFuNAoycXpUNm5vbHFhRjBLOWhlRUJzL3BjeDJ5aXFEUnYwUmp1RENCOGorekJkZjVjak94OGtpCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg</span><span class=\"token operator\">==</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>Ports and Protocols: <a href=\"https://kubernetes.io/docs/reference/ports-and-protocols/\">https://kubernetes.io/docs/reference/ports-and-protocols/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.8 - kubeconfig 파일 트러블슈팅","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-08/"}},"prev":{"id":"2e9d513b-821e-5eb8-a38e-0b0ad17ad7fd","html":"<h1 id=\"1-모의고사-36---테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-36---%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 36   테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.6 - 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Taint the worker node <code class=\"language-text\">node01</code> to be Unschedulable. Once done, create a pod called <code class=\"language-text\">dev-redis</code>, image <code class=\"language-text\">redis:alpine</code>, to ensure workloads are not scheduled to this worker node. Finally, create a new pod called <code class=\"language-text\">prod-redis</code> and image: <code class=\"language-text\">redis:alpine</code> with toleration to be scheduled on <code class=\"language-text\">node01</code>.</p>\n<p>key: <code class=\"language-text\">env_type</code>, value: <code class=\"language-text\">production</code>, operator: <code class=\"language-text\">Equal</code> and effect: <code class=\"language-text\">NoSchedule</code></p>\n<ul>\n<li>Key = env_type</li>\n<li>Value = production</li>\n<li>Effect = NoSchedule</li>\n<li>pod ‘dev-redis’ (no tolerations) is not scheduled on node01?</li>\n<li>Create a pod ‘prod-redis’ to run on node01</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#2-%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h3>\n<ul>\n<li>명령형 커맨드로 node01에 테인트를 설정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl taint nodes node01 <span class=\"token assign-left variable\">env_type</span><span class=\"token operator\">=</span>production:NoSchedule</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k run dev<span class=\"token operator\">-</span>redis <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>redis<span class=\"token operator\">:</span>alpine\npod<span class=\"token operator\">/</span>dev<span class=\"token operator\">-</span>redis created</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드가 control plane 노드에 스케줄링 된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10s     <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          18m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          9m14s   <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드의 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run prod-redis --image<span class=\"token operator\">=</span>redis:alpine --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> prod-redis.yaml</code></pre></div>\n<br/>\n<ul>\n<li>문제 요건에 맞게 편집한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> prod-redis.yaml\n\n---\n\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: prod-redis\n  name: prod-redis\nspec:\n  containers:\n  - image: redis:alpine\n    name: prod-redis\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  tolerations:\n  - key: <span class=\"token string\">\"env_type\"</span>\n    operator: <span class=\"token string\">\"Equal\"</span>\n    value: <span class=\"token string\">\"production\"</span>\n    effect: <span class=\"token string\">\"NoSchedule\"</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f prod-redis.yaml \npod/prod-redis created</code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드가 node01에 스케줄링된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6m41s   <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          24m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          15m     <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nprod-redis     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          58s     <span class=\"token number\">10.50</span>.192.5   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          36m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl 치트 시트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>테인트와 톨러레이션: <a href=\"https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/\">https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.6 - 테인트(Taint) & 톨러레이션(Toleration) 적용하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220519-python-day32/","nextSlug":"/220519-kubernetes-cka-mock-exam-3-08/","prevSlug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}