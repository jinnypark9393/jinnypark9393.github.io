{"componentChunkName":"component---src-templates-blog-template-js","path":"/220521-kubernetes-cka-killerkoda-q08/","result":{"data":{"cur":{"id":"8bf27ee8-f904-5433-b3fb-7872ee535830","html":"<h1 id=\"q8-네트워크-폴리시의-네임스페이스-선택\" style=\"position:relative;\"><a href=\"#q8-%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8F%B4%EB%A6%AC%EC%8B%9C%EC%9D%98-%EB%84%A4%EC%9E%84%EC%8A%A4%ED%8E%98%EC%9D%B4%EC%8A%A4-%EC%84%A0%ED%83%9D\" aria-label=\"q8 네트워크 폴리시의 네임스페이스 선택 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q8. 네트워크 폴리시의 네임스페이스 선택</h1>\n<p>네임스페이스 <code class=\"language-text\">space1</code> &#x26; <code class=\"language-text\">space2</code>에 기존 파드들이 존재한다.</p>\n<br/>\n<p>네임스페이스 <code class=\"language-text\">space1</code> 에 있는 모드 파드들이 네임스페이스 <code class=\"language-text\">space2</code> 의 파드들로만 외부로 향하는 트래픽을 보낼 수 있도록 제한하는  <code class=\"language-text\">np</code>라는 이름의 네트워크 폴리시가 필요하다.</p>\n<br/>\n<p>또한 <code class=\"language-text\">np</code> 라는 이름으로 네임스페이스 <code class=\"language-text\">space2</code> 의 파드들이 <code class=\"language-text\">space1</code> 의 파드로부터 들어오는 트래픽만 받도록 설정해야한다.</p>\n<br/>\n<p>네트워크 폴리시는 53포트의 DNS 트래픽과 TCP, UDP 트래픽을 허용해야 한다.</p>\n<p><br/><br/></p>\n<h2 id=\"팁\" style=\"position:relative;\"><a href=\"#%ED%8C%81\" aria-label=\"팁 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>팁</h2>\n<p>학습을 위해 <a href=\"http://editor.cilium.io\">네트워크 폴리시 에디터</a>를 확인해보자.</p>\n<br/>\n<p>네트워크 폴리시의 <code class=\"language-text\">namespaceSelector</code>는 네임스페이스 레이블로 작동한다. 따라서 네임스페이스들의 기존 레이블을 확인하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">k get ns --show-labels</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"해결-방법-파트-1\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-%ED%8C%8C%ED%8A%B8-1\" aria-label=\"해결 방법 파트 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법 파트 1</h2>\n<p>첫번째 네트워크 폴리시를 생성하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> networking<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> NetworkPolicy\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> np\n  <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> space1\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">podSelector</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token literal-property property\">policyTypes</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> Egress\n  <span class=\"token literal-property property\">egress</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> to<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> namespaceSelector<span class=\"token operator\">:</span>\n        <span class=\"token literal-property property\">matchLabels</span><span class=\"token operator\">:</span>\n          kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>metadata<span class=\"token punctuation\">.</span>name<span class=\"token operator\">:</span> space2\n  <span class=\"token operator\">-</span> ports<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> port<span class=\"token operator\">:</span> <span class=\"token number\">53</span>\n      <span class=\"token literal-property property\">protocol</span><span class=\"token operator\">:</span> <span class=\"token constant\">TCP</span>\n    <span class=\"token operator\">-</span> port<span class=\"token operator\">:</span> <span class=\"token number\">53</span>\n      <span class=\"token literal-property property\">protocol</span><span class=\"token operator\">:</span> <span class=\"token constant\">UDP</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"해결-방법-파트-2\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95-%ED%8C%8C%ED%8A%B8-2\" aria-label=\"해결 방법 파트 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법 파트 2</h2>\n<p>두번째 NP를 생성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> networking<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> NetworkPolicy\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> np\n  <span class=\"token literal-property property\">namespace</span><span class=\"token operator\">:</span> space2\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">podSelector</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token literal-property property\">policyTypes</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> Ingress\n  <span class=\"token literal-property property\">ingress</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> from<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> namespaceSelector<span class=\"token operator\">:</span>\n        <span class=\"token literal-property property\">matchLabels</span><span class=\"token operator\">:</span>\n          kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>metadata<span class=\"token punctuation\">.</span>name<span class=\"token operator\">:</span> space1</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"검증\" style=\"position:relative;\"><a href=\"#%EA%B2%80%EC%A6%9D\" aria-label=\"검증 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>검증</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"># 아래가 작동해야 한다\nk <span class=\"token operator\">-</span>n space1 exec app1<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> microservice1<span class=\"token punctuation\">.</span>space2<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n space1 exec app1<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> microservice2<span class=\"token punctuation\">.</span>space2<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n space1 exec app1<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">--</span> nslookup tester<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system exec <span class=\"token operator\">-</span>it validate<span class=\"token operator\">-</span>checker<span class=\"token operator\">-</span>pod <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> app<span class=\"token punctuation\">.</span>space1<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\n\n# 아래는 작동하지 않아야 한다\nk <span class=\"token operator\">-</span>n space1 exec app1<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> tester<span class=\"token punctuation\">.</span>default<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system exec <span class=\"token operator\">-</span>it validate<span class=\"token operator\">-</span>checker<span class=\"token operator\">-</span>pod <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> microservice1<span class=\"token punctuation\">.</span>space2<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system exec <span class=\"token operator\">-</span>it validate<span class=\"token operator\">-</span>checker<span class=\"token operator\">-</span>pod <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> microservice2<span class=\"token punctuation\">.</span>space2<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\nk <span class=\"token operator\">-</span>n run nginx <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>nginx<span class=\"token operator\">:</span><span class=\"token number\">1.21</span><span class=\"token number\">.5</span><span class=\"token operator\">-</span>alpine <span class=\"token operator\">--</span>restart<span class=\"token operator\">=</span>Never <span class=\"token operator\">-</span>i <span class=\"token operator\">--</span>rm <span class=\"token operator\">--</span> curl <span class=\"token operator\">-</span>m <span class=\"token number\">1</span> microservice1<span class=\"token punctuation\">.</span>space2<span class=\"token punctuation\">.</span>svc<span class=\"token punctuation\">.</span>cluster<span class=\"token punctuation\">.</span>local\n</code></pre></div>\n<br/>","excerpt":"Q8. 네트워크 폴리시의 네임스페이스 선택 네임스페이스  & 에 기존 파드들이 존재한다. 네임스페이스  에 있는 모드 파드들이 네임스페이스  의 파드들로만 외부로 향하는 트래픽을 보낼 수 있도록 제한하는  라는 이름의 네트워크 폴리시가 필요하다. 또한  라는 이름으로 네임스페이스  의 파드들이  의 파드로부터 들어오는 트래픽만 받도록 설정해야한다. 네트워크 폴리시는 53포트의 DNS 트래픽과 TCP, UDP 트래픽을 허용해야 한다.  팁 학습을 위해 네트워크 폴리시 에디터를 확인해보자. 네트워크 폴리시의 는 네임스페이스 레이블로 작동한다. 따라서 네임스페이스들의 기존 레이블을 확인하자.  해결 방법 파트 1 첫번째 네트워크 폴리시를 생성하자.  해결 방법 파트 2 두번째 NP를 생성해보자.  검증","frontmatter":{"date":"May 21, 2022","title":"쿠버네티스(Kubernetes) CKA - KillerKoda Q8. NetworkPolicy","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220521-kubernetes-cka-killerkoda-q08/"}},"next":{"id":"e8d902b3-8e09-5856-a612-ce18e0d89b4c","html":"<h1 id=\"1-killerkoda란\" style=\"position:relative;\"><a href=\"#1-killerkoda%EB%9E%80\" aria-label=\"1 killerkoda란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. KillerKoda란?</h1>\n<p>CKA(Certified Kubernetes Administrator) 시험을 신청하게 되면 Killer.sh 이라는 모의 시험 환경이 제공되는데, 이번에 시험을 신청해보니 Killer.sh 외에도 Killer.sh을 만든 팀에서 KillerKoda라는 실습환경도 제공하고 있어 한 번 풀어보았다.</p>\n<br/>\n<p><a href=\"https://killercoda.com/killer-shell\">Killer.sh 과 KillerKoda의 차이점</a>은 아래와 같다.</p>\n<h2 id=\"killersh\" style=\"position:relative;\"><a href=\"#killersh\" aria-label=\"killersh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[Killer.sh]</h2>\n<ul>\n<li>시험환경과 유사한 인터페이스를 제공하는 모의고사</li>\n<li>CKA 시험을 신청했을 때 접속할 수 있다</li>\n<li>동일한 문제가 들어있는 두 개의 시뮬레이터를 제공</li>\n<li>각 시뮬레이터는 활성화 한 뒤 36시간동안만 접속할 수 있다</li>\n<li>채점 및 해설 제공</li>\n<li>난이도: 높은 편(개인적으로 유데미의 CKA 바이블 뭄샤드님의 강의에서 제공하는 모의고사보다 훨씬 어려웠다)</li>\n</ul>\n<br/>\n<h2 id=\"killerkoda\" style=\"position:relative;\"><a href=\"#killerkoda\" aria-label=\"killerkoda permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[KillerKoda]</h2>\n<ul>\n<li>CKA 실제 시험과는 다소 다른 인터페이스</li>\n<li>시간 제한 없이 누구나 무료로 이용할 수 있다</li>\n<li>일부 채점 및 해설 제공</li>\n<li>난이도: 쉬운 편 ~ 중간</li>\n<li>KillerKoda는 현재 베타버전으로 운영되고 있어 현재는 12개 문제를 제공하고 있는데(첫번째는 Playground라 제외하고 나머지 문제만 업로드했다), 향후 더 다양한 문제가 제공될 예정</li>\n</ul>\n<br/>\n<p>이 외에도 <a href=\"https://killercoda.com/playgrounds\">위의 사이트에서 쿠버네티스와 관련된 여러 가상환경을 제공</a>하고(Kubernetes 1.24 버전의 마스터노드 1 + 워커노드 1 환경, Istio가 구성된 환경 등) 있어, 쿠버네티스 클러스터를 설치하지 않고 간단하게 실습을 해볼 수 있다.</p>\n<p><br/><br/></p>\n<h1 id=\"2-vim-setup\" style=\"position:relative;\"><a href=\"#2-vim-setup\" aria-label=\"2 vim setup permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Vim Setup</h1>\n<p>k8s 시험에서 YAML을 편집할 때의 중요한 설정에 대해 알아보자.</p>\n<br/>\n<h2 id=\"세팅\" style=\"position:relative;\"><a href=\"#%EC%84%B8%ED%8C%85\" aria-label=\"세팅 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세팅</h2>\n<p>먼저 <code class=\"language-text\">.vimrc</code> 파일을 생성하거나 연다(이미 생성했을 경우):</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">vim ~/.vimrc\n</code></pre></div>\n<br/>\n<p> <code class=\"language-text\">i</code> 로 삽입모드를 활성화 한 상태에서 다음을 입력한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">set expandtab\nset tabstop=2\nset shiftwidth=2\n</code></pre></div>\n<br/>\n<p><code class=\"language-text\">Esc</code> 다음  <code class=\"language-text\">:x</code> , <code class=\"language-text\">Enter</code> 를 눌러 파일을 저장하고 닫는다.</p>\n<p><br/><br/></p>\n<h2 id=\"설명\" style=\"position:relative;\"><a href=\"#%EC%84%A4%EB%AA%85\" aria-label=\"설명 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>설명</h2>\n<p>Vim을 오픈할때마다 항상 현재 사용자로서 위의 세팅들이 적용될 것이다.</p>\n<p>만일 당신이 다른 서버에 ssh로 접속하게 된다면 이 설정들은 <strong>적용되지 않는다</strong>.</p>\n<p>설정값 설명은 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">expandtab: 탭키를 스페이스로 사용한다\ntabstop: 탭키에 적용할 스페이스양\nshiftwidth: 들여쓰기 중 사용할 스페이스 양</code></pre></div>\n<br/>","frontmatter":{"date":"May 21, 2022","title":"쿠버네티스(Kubernetes) CKA - KillerKoda Q1. Vim Setup","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220521-kubernetes-cka-killerkoda-q01/"}},"prev":{"id":"52e45724-be66-57a0-8ddc-2f2bac432930","html":"<h1 id=\"q2-api서버-장애\" style=\"position:relative;\"><a href=\"#q2-api%EC%84%9C%EB%B2%84-%EC%9E%A5%EC%95%A0\" aria-label=\"q2 api서버 장애 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Q2. API서버 장애</h1>\n<p>이 실습에서는 API서버가 여러 방식으로 망가지도록 잘못 설정한 뒤, 에러를 확인할 수 있는 로그 경로를 확인한다.</p>\n<br/>\n<p>당신은 API서버가 올라오지 않는 상황에 익숙해져야 한다.</p>\n<br/>\n<p>API서버 매니페스트 파일에 <code class=\"language-text\">—-this-is-very-wrong</code> 이라는 신규 인자(argument)를 설정하자. 파드가 다시 올라오는지 확인하고, 이 설정이 어떤 로그를 발생시키는지 확인하자.</p>\n<br/>\n<h2 id=\"로그-경로\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EA%B7%B8-%EA%B2%BD%EB%A1%9C\" aria-label=\"로그 경로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로그 경로</h2>\n<p>아래는 확인해야할 로그 경로이다.</p>\n<ul>\n<li><code class=\"language-text\">/var/log/pods</code></li>\n<li><code class=\"language-text\">/var/log/containers</code></li>\n<li><code class=\"language-text\">crictl ps</code> + <code class=\"language-text\">crictl logs</code></li>\n<li><code class=\"language-text\">docker ps</code> + <code class=\"language-text\">docker logs</code> (컨테이너 런타임으로 도커를 사용할 경우)</li>\n<li>Kubelet 로그: <code class=\"language-text\">/var/log/syslog</code> 혹은 <code class=\"language-text\">journalctl</code></li>\n</ul>\n<br/>\n<h2 id=\"해결-방법\" style=\"position:relative;\"><a href=\"#%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>해결 방법</h2>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"># 항상 백업을 생성하자<span class=\"token operator\">!</span>\ncp <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>manifests<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token punctuation\">.</span>yaml\n\n# 변경 사항을 적용하자\nvim <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kubernetes<span class=\"token operator\">/</span>manifests<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token punctuation\">.</span>yaml\n\n# 컨테이너가 재시작할때까지 기다리자\nwatch crictl ps\n\n# <span class=\"token constant\">API</span> 서버 파드를 확인하자\nk <span class=\"token operator\">-</span>n kube<span class=\"token operator\">-</span>system <span class=\"token keyword\">get</span> pod</code></pre></div>\n<br/>\n<ul>\n<li>API 서버가 돌아오지 않는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"># 파드 로그를 확인한다\n\ncat <span class=\"token operator\">/</span><span class=\"token keyword\">var</span><span class=\"token operator\">/</span>log<span class=\"token operator\">/</span>pods<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>system_kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>controlplane_<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>hashed</span> <span class=\"token attr-name\">value</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">/kube-apiserver/X.log\n> 2022-01-26T10:41:12.401641185Z stderr F Error: unknown flag: --this-is-very-wrong</span></code></pre></div>\n<br/>\n<p>변경사항을 취소하고 다음 실습으로 넘어가자.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"># 백업을 사용하면 편리하다\ncp <span class=\"token operator\">~</span><span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token punctuation\">.</span>yaml<span class=\"token punctuation\">.</span>ori <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>kuberentes<span class=\"token operator\">/</span>manifests<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token punctuation\">.</span>yaml</code></pre></div>\n<br/>","frontmatter":{"date":"May 21, 2022","title":"쿠버네티스(Kubernetes) CKA - KillerKoda Q2. Apiserver Crash","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220521-kubernetes-cka-killerkoda-q02/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220521-kubernetes-cka-killerkoda-q08/","nextSlug":"/220521-kubernetes-cka-killerkoda-q01/","prevSlug":"/220521-kubernetes-cka-killerkoda-q02/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}