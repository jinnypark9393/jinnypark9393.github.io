{"componentChunkName":"component---src-templates-blog-template-js","path":"/220517-kubernetes-cka-mock-exam-1-10/","result":{"data":{"cur":{"id":"4ca9ad14-977f-573d-9d74-c0acb3032e53","html":"<h1 id=\"모의고사-110---노드포트nodeport타입-서비스service-생성\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-110---%EB%85%B8%EB%93%9C%ED%8F%AC%ED%8A%B8nodeport%ED%83%80%EC%9E%85-%EC%84%9C%EB%B9%84%EC%8A%A4service-%EC%83%9D%EC%84%B1\" aria-label=\"모의고사 110   노드포트nodeport타입 서비스service 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 1.10 - 노드포트(NodePort)타입 서비스(Service) 생성</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Expose the <code class=\"language-text\">hr-web-app</code> as service <code class=\"language-text\">hr-web-app-service</code> application on port <code class=\"language-text\">30082</code> on the nodes on the cluster.</p>\n<p>The web application listens on port <code class=\"language-text\">8080</code>.</p>\n<ul>\n<li>Name: hr-web-app-service</li>\n<li>Type: NodePort</li>\n<li>Endpoints: 2</li>\n<li>Port: 8080</li>\n<li>NodePort: 30082</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-노드포트nodeport-타입의-서비스service-생성\" style=\"position:relative;\"><a href=\"#2-%EB%85%B8%EB%93%9C%ED%8F%AC%ED%8A%B8nodeport-%ED%83%80%EC%9E%85%EC%9D%98-%EC%84%9C%EB%B9%84%EC%8A%A4service-%EC%83%9D%EC%84%B1\" aria-label=\"2 노드포트nodeport 타입의 서비스service 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 노드포트(NodePort) 타입의 서비스(Service) 생성</h3>\n<ul>\n<li>노출 대상 애플리케이션이 파드인지 디플로이먼트인지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods\nNAME                          READY   STATUS                  RESTARTS   AGE\nhr-web-app-99dfd4c9d-nwvlr    <span class=\"token number\">1</span>/1     Running                 <span class=\"token number\">0</span>          17m\nhr-web-app-99dfd4c9d-xfpx5    <span class=\"token number\">1</span>/1     Running                 <span class=\"token number\">0</span>          17m\nmessaging                     <span class=\"token number\">1</span>/1     Running                 <span class=\"token number\">0</span>          32m\nnginx-pod                     <span class=\"token number\">1</span>/1     Running                 <span class=\"token number\">0</span>          36m\norange                        <span class=\"token number\">0</span>/1     Init:CrashLoopBackOff   <span class=\"token number\">5</span>          3m56s\nstatic-busybox-controlplane   <span class=\"token number\">1</span>/1     Running</code></pre></div>\n<br/>\n<ul>\n<li>명령문으로 서비스의 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k expose deployment hr-web-app --name<span class=\"token operator\">=</span>hr-web-app-service --port<span class=\"token operator\">=</span><span class=\"token number\">8080</span> --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> hr-web-app-service.yaml</code></pre></div>\n<br/>\n<ul>\n<li>매니페스트 파일에 잘못된 부분이 없는지 확인하고, NodePort 부분을 추가한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">vi</span> hr-web-app-service.yaml\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\napiVersion: v1\nkind: Service\nmetadata:\n  creationTimestamp: null\n  labels:\n    app: hr-web-app\n  name: hr-web-app-service\nspec:\n  type: NodePort\n  ports:\n  - port: <span class=\"token number\">8080</span>\n    protocol: TCP\n    targetPort: <span class=\"token number\">8080</span>\n    nodePort: <span class=\"token number\">30082</span>\n  selector:\n    app: hr-web-app\nstatus:</code></pre></div>\n<br/>\n<ul>\n<li>서비스가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get svc -o wide\nNAME                 TYPE        CLUSTER-IP       EXTERNAL-IP   PORT<span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span>          AGE   SELECTOR\nhr-web-app-service   NodePort    <span class=\"token number\">10.107</span>.107.163   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">8080</span>:30082/TCP   26s   <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>hr-web-app\nkubernetes           ClusterIP   <span class=\"token number\">10.96</span>.0.1        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">443</span>/TCP          55m   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmessaging-service    ClusterIP   <span class=\"token number\">10.102</span>.189.233   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>        <span class=\"token number\">6379</span>/TCP         27m   <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>msg</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>서비스(Service): <a href=\"https://kubernetes.io/ko/docs/concepts/services-networking/service/\">https://kubernetes.io/ko/docs/concepts/services-networking/service/</a></li>\n</ul>\n<br/>","excerpt":"모의고사 1.10 - 노드포트(NodePort)타입 서비스(Service) 생성 1. 문제 요건 Expose the  as service  application on port  on the nodes on the cluster. The web application listens on port . Name: hr-web-app-service Type: NodePort Endpoints: 2 Port: 8080 NodePort: 30082  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).  2. 노드포트(NodePort) 타입의 서비스(Service) 생성 노출 대상 애플리케이션이 파드인지 디플로이먼트인지 확인한다. 명령문으로 서비스의 매니페스트 파일을 생성한다. 매니페스트 파일에 잘못된 부분이 없는지 확인하고, NodePort 부분을 추가한다. 서비스가 잘 생성되었는지 확인한다.  3. 참고 URL kubectl cheat sh…","frontmatter":{"date":"May 17, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 1.10 - 노드포트(NodePort)타입 서비스(Service) 생성","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220517-kubernetes-cka-mock-exam-1-10/"}},"next":{"id":"c40f4c86-a206-52c0-b3f4-1e660f366d8d","html":"<h1 id=\"모의고사-17---스태틱-파드static-pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-17---%EC%8A%A4%ED%83%9C%ED%8B%B1-%ED%8C%8C%EB%93%9Cstatic-pod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 17   스태틱 파드static pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 1.7 - 스태틱 파드(Static Pod) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a static pod named <code class=\"language-text\">static-busybox</code> on the controlplane node that uses the <code class=\"language-text\">busybox</code> image and the command <code class=\"language-text\">sleep 1000</code>.</p>\n<ul>\n<li>Name: static-busybox</li>\n<li>Image: busybox</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<h3 id=\"2-yaml-파일을-선언형으로-생성해-스태틱-파드static-pod-생성\" style=\"position:relative;\"><a href=\"#2-yaml-%ED%8C%8C%EC%9D%BC%EC%9D%84-%EC%84%A0%EC%96%B8%ED%98%95%EC%9C%BC%EB%A1%9C-%EC%83%9D%EC%84%B1%ED%95%B4-%EC%8A%A4%ED%83%9C%ED%8B%B1-%ED%8C%8C%EB%93%9Cstatic-pod-%EC%83%9D%EC%84%B1\" aria-label=\"2 yaml 파일을 선언형으로 생성해 스태틱 파드static pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. YAML 파일을 선언형으로 생성해 스태틱 파드(Static Pod) 생성</h3>\n<ul>\n<li>스태틱 파드가 생성되는 경로를 찾는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane /etc/kubernetes ➜  <span class=\"token builtin class-name\">cd</span> manifests/\n\nroot@controlplane /etc/kubernetes/manifests ➜  <span class=\"token function\">ls</span> -al\ntotal <span class=\"token number\">28</span>\ndrwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 <span class=\"token builtin class-name\">.</span>\ndrwxr-xr-x <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 <span class=\"token punctuation\">..</span>\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">2183</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 etcd.yaml\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">3807</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 kube-apiserver.yaml\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">3314</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 kube-controller-manager.yaml\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">1384</span> May <span class=\"token number\">16</span> <span class=\"token number\">12</span>:53 kube-scheduler.yaml</code></pre></div>\n<br/>\n<ul>\n<li>매니페스트 파일을 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane /etc/kubernetes/manifests ➜  k run static-busybox --image<span class=\"token operator\">=</span>busybox --dry-run<span class=\"token operator\">=</span>client -o yaml --command -- <span class=\"token function\">sleep</span> <span class=\"token number\">1000</span> <span class=\"token operator\">></span> static-busybox.yaml</code></pre></div>\n<br/>\n<ul>\n<li>매니페스트 파일이 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane /etc/kubernetes/manifests ➜  <span class=\"token function\">cat</span> static-busybox.yaml \napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: static-busybox\n  name: static-busybox\nspec:\n  containers:\n  - command:\n    - <span class=\"token function\">sleep</span>\n    - <span class=\"token string\">\"1000\"</span>\n    image: busybox\n    name: static-busybox\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>스태틱 파드(Static Pod)가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane /etc/kubernetes/manifests ➜  k get pods -A\nNAMESPACE     NAME                                   READY   STATUS    RESTARTS   AGE\ndefault       hr-web-app-99dfd4c9d-nwvlr             <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          8m6s\ndefault       hr-web-app-99dfd4c9d-xfpx5             <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          8m6s\ndefault       messaging                              <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          23m\ndefault       nginx-pod                              <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          26m\ndefault       static-busybox-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          83s</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>스태틱 파드 생성하기: <a href=\"https://kubernetes.io/ko/docs/tasks/configure-pod-container/static-pod/\">https://kubernetes.io/ko/docs/tasks/configure-pod-container/static-pod/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 17, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 1.7 - 스태틱 파드(Static Pod) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220517-kubernetes-cka-mock-exam-1-07/"}},"prev":{"id":"097a5e92-7f59-5a13-ac40-904f619fe29d","html":"<h1 id=\"모의고사-111---json-path로-node의-osimage-정보-출력\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-111---json-path%EB%A1%9C-node%EC%9D%98-osimage-%EC%A0%95%EB%B3%B4-%EC%B6%9C%EB%A0%A5\" aria-label=\"모의고사 111   json path로 node의 osimage 정보 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 1.11 - JSON PATH로 Node의 osImage 정보 출력</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Use JSON PATH query to retrieve the <code class=\"language-text\">osImage</code>s of all the nodes and store it in a file <code class=\"language-text\">/opt/outputs/nodes_os_x43kj56.txt</code>.</p>\n<p>The <code class=\"language-text\">osImages</code> are under the <code class=\"language-text\">nodeInfo</code> section under <code class=\"language-text\">status</code> of each node.</p>\n<ul>\n<li>Task Completed</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-json-path를-이용해-리소스의-특정-데이터-출력\" style=\"position:relative;\"><a href=\"#2-json-path%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%B4-%EB%A6%AC%EC%86%8C%EC%8A%A4%EC%9D%98-%ED%8A%B9%EC%A0%95-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%B6%9C%EB%A0%A5\" aria-label=\"2 json path를 이용해 리소스의 특정 데이터 출력 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. JSON PATH를 이용해 리소스의 특정 데이터 출력</h3>\n<ul>\n<li>kubectl cheat sheet에서 최대한 비슷한 jsonpath 명령어를 복사해둔다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get nodes -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.items[*].status.addresses[?(@.type==\"ExternalIP\")].address}'</span></code></pre></div>\n<br/>\n<ul>\n<li>문제의 제시 정보를 참고해 쿼리문을 작성한다(단계별로 테스트해가며 경로가 맞는지 확인한다).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  kubectl get nodes -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.items[*].status.nodeInfo.osImage}'</span>\nUbuntu <span class=\"token number\">18.04</span>.6 LTS</code></pre></div>\n<br/>\n<ul>\n<li>문제에서 제시한 경로로 쿼리 결과를 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  kubectl get nodes -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span><span class=\"token string\">'{.items[*].status.nodeInfo.osImage}'</span> <span class=\"token operator\">></span> /opt/outputs/nodes_os_x43kj56.txt</code></pre></div>\n<br/>\n<ul>\n<li>쿼리 결과가 잘 저장되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /opt/outputs/nodes_os_x43kj56.txt\nUbuntu <span class=\"token number\">18.04</span>.6 LTS</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>노드(Node): <a href=\"https://kubernetes.io/ko/docs/concepts/architecture/nodes/\">https://kubernetes.io/ko/docs/concepts/architecture/nodes/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 17, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 1.11 - JSON PATH로 Node의 osImage 정보 출력","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220517-kubernetes-cka-mock-exam-1-11/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220517-kubernetes-cka-mock-exam-1-10/","nextSlug":"/220517-kubernetes-cka-mock-exam-1-07/","prevSlug":"/220517-kubernetes-cka-mock-exam-1-11/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}