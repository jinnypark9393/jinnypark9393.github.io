{"componentChunkName":"component---src-templates-blog-template-js","path":"/220619-python-day63/","result":{"data":{"cur":{"id":"6782406f-aeb7-58e4-bdef-b274c5f6da20","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 파이썬에서의 정규표현식 사용방법(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-19-Python-Photo/2022-06-19-Python-Photo1.jpg\" alt=\"2022-06-19-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-19-Python-Photo/2022-06-19-Python-Photo2.jpg\" alt=\"2022-06-19-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"01-정규표현식-소개\" style=\"position:relative;\"><a href=\"#01-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%86%8C%EA%B0%9C\" aria-label=\"01 정규표현식 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>01. 정규표현식 소개</h1>\n<ul>\n<li>정규표현식: 문자열에서 특정 패턴을 찾고 싶을 때\n<ul>\n<li>조건문, 반복문 들을 복잡하게 사용해야할 때 사용</li>\n</ul>\n</li>\n<li>유효성 검사: if문을 사용하면 여러 줄에 걸쳐 작업해야하나 정규표현식은 아주 빠르게 할 수 있다.정</li>\n</ul>\n<br/>\n<h2 id=\"정규-표현식의-장점\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"정규 표현식의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규 표현식의 장점</h2>\n<ul>\n<li>문자열 추출, 유효성 검사에서 유용하게 쓰일 수 있다.</li>\n<li>거의 모든 언어에서 지원(범용성이 높다)</li>\n</ul>\n<br/>\n<h2 id=\"정규-표현식의-단점\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D%EC%9D%98-%EB%8B%A8%EC%A0%90\" aria-label=\"정규 표현식의 단점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정규 표현식의 단점</h2>\n<ul>\n<li>가독성이 좋지 못하다.</li>\n<li>유지보수가 힘들다(내가 짠 코드를 남이 이해하기 어렵고, 남이 짠 코드를 내가 이해하기 어렵다).\n<ul>\n<li>예: <code class=\"language-text\">^(?=.*[A-Za-z]...(생략)</code></li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h1 id=\"02-정규표현식-사용방법1\" style=\"position:relative;\"><a href=\"#02-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%951\" aria-label=\"02 정규표현식 사용방법1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>02. 정규표현식 사용방법(1)</h1>\n<h2 id=\"1-정규표현식-연습-사이트-소개\" style=\"position:relative;\"><a href=\"#1-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%97%B0%EC%8A%B5-%EC%82%AC%EC%9D%B4%ED%8A%B8-%EC%86%8C%EA%B0%9C\" aria-label=\"1 정규표현식 연습 사이트 소개 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 정규표현식 연습 사이트 소개</h2>\n<ul>\n<li>실습 사이트: <a href=\"https://regexr.com/639t5\">https://regexr.com/639t5</a></li>\n<li>Expression: 해당 사이트에서 정규표현식을 입력하는 곳. <code class=\"language-text\">/</code> 사이에 정규표현식을 입력하면 된다.</li>\n<li><code class=\"language-text\">gm</code> : Flag(정규표현식의 옵션)</li>\n<li>Text: 정규표현식을 적용할 샘플 텍스트</li>\n<li>Tools: 정규표현식의 매칭 결과의 설명</li>\n<li>Cheatsheet: 표현식을 정리해놓은 시트</li>\n</ul>\n<br/>\n<ul>\n<li>Expression에 Hello를 넣어보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span>Hello<span class=\"token operator\">/</span>gm</code></pre></div>\n<br/>\n<ul>\n<li>Text에 표시되는 결과는 아래와 같다.\n<ul>\n<li>몇 개가 매칭되었는지, 매치에 걸린 시간이 우측 상단에 표시된다.</li>\n<li>매칭된 결과는 색이 다르게 표시된다(Hello)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">안녕하세요<span class=\"token punctuation\">.</span> 스타트코딩입니다<span class=\"token punctuation\">.</span>\n코딩을 최대한 쉽고 재미있게 배울 수 있도록 끊임없이 연구하고 있습니다<span class=\"token punctuation\">.</span>\n\n궁금한 사항이 생기면 아래 SNS를 통해 질문을 남겨 주세요<span class=\"token punctuation\">.</span>\n여러분의 열정과 도전을 함께 하겠습니다<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">**</span>Hello<span class=\"token operator\">**</span><span class=\"token punctuation\">.</span> This <span class=\"token keyword\">is</span> startcoding<span class=\"token punctuation\">.</span>\nstartcoding constantly studying to make coding <span class=\"token keyword\">as</span> easy <span class=\"token keyword\">and</span> fun <span class=\"token keyword\">as</span> possible<span class=\"token punctuation\">.</span>\n\nIf you have <span class=\"token builtin\">any</span> questions<span class=\"token punctuation\">,</span> please leave them on SNS below\nI will share your passion <span class=\"token keyword\">and</span> challenge<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">-</span>티스토리\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>startcoding0<span class=\"token punctuation\">.</span>tistory<span class=\"token punctuation\">.</span>com\n\n<span class=\"token operator\">-</span>네이버블로그\nhttps<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>blog<span class=\"token punctuation\">.</span>naver<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>kkj6369\n\n<span class=\"token operator\">-</span>유튜브\nhttp<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>www<span class=\"token punctuation\">.</span>youtube<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>channel<span class=\"token operator\">/</span>UCHwhZ7HPBhUh2IscPSL0pHA\n\n<span class=\"token operator\">-</span>email\nkkj6369@naver<span class=\"token punctuation\">.</span>com\n\n<span class=\"token operator\">**</span>여러분 행복한 부자되세요!<span class=\"token operator\">**</span> \\<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>__<span class=\"token punctuation\">)</span>\\ 꾸벅\t\n\napple pineapple appleappleapple\n\nrait rabit rabbit rabbbit rabbbbit\n\n<span class=\"token comment\">#좋아요, #좋아요반사, #팔로우, #맞팔,</span>\n\ngrey gray\n\nI am a tiny tiny boy<span class=\"token punctuation\">.</span>\nMay I have have a question?\n\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>소가죽 샌들 <span class=\"token operator\">-</span>레몬스토어\n<span class=\"token punctuation\">[</span>품절<span class=\"token punctuation\">]</span>스마트 워치 <span class=\"token operator\">-</span>레몬스토어\n<span class=\"token punctuation\">[</span>품절<span class=\"token punctuation\">]</span>브이넥 반팔 티셔츠 <span class=\"token operator\">-</span>애플스토어\n쿨링밴딩 팬츠 <span class=\"token operator\">-</span>바나나스토어\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>남친룩 오버핏 셔츠 <span class=\"token operator\">-</span>래빗팜\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>여친룩 오버핏 셔츠 <span class=\"token operator\">-</span>래빗팜</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"2-정규표현식-사용방법1\" style=\"position:relative;\"><a href=\"#2-%EC%A0%95%EA%B7%9C%ED%91%9C%ED%98%84%EC%8B%9D-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%951\" aria-label=\"2 정규표현식 사용방법1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 정규표현식 사용방법(1)</h2>\n<h3 id=\"1-flags\" style=\"position:relative;\"><a href=\"#1-flags\" aria-label=\"1 flags permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Flags</h3>\n<ul>\n<li>실습 사이트 우측 상단에 위치</li>\n<li>정규표현식의 옵션을 설정할 수 있다.</li>\n<li>현재 실습환경에서는 <code class=\"language-text\">gm</code> 이 설정되어있는데 <code class=\"language-text\">global</code> 과 <code class=\"language-text\">multiline</code> 이 활성화 되어있다는 뜻이다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">global</code> : 전체 텍스트에서 검색하게 하는 옵션(옵션이 비활성화 되어있을 경우 첫번째로 매칭되는 값에만 표시된다.)</li>\n<li><code class=\"language-text\">multiline</code> : 라인별로 범위를 지정하는 것(옵션이 비활성화 되어있을 경우 텍스트 전체를 한개의 범위로 본다.)</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"2-character-classes\" style=\"position:relative;\"><a href=\"#2-character-classes\" aria-label=\"2 character classes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Character classes</h3>\n<ul>\n<li><code class=\"language-text\">.</code> : 개행을 제외한 모든 문자를 다 찾겠다는 뜻</li>\n<li><code class=\"language-text\">\\w</code> (word): 문자/숫자(alphanumeric), 밑줄(<code class=\"language-text\">_</code>)을 역슬래시로 가져온다.</li>\n<li><code class=\"language-text\">\\W</code> : 위와 반대의 개념</li>\n<li><code class=\"language-text\">\\d</code> (digit): 숫자만 검색한다.</li>\n<li><code class=\"language-text\">\\D</code> : 숫자가 아닌 것만 검색한다.</li>\n<li><code class=\"language-text\">\\s</code> : 공백인 것만 검색한다.</li>\n<li><code class=\"language-text\">\\S</code> : 공백이 아닌 것만 검색한다.</li>\n<li><code class=\"language-text\">[abc]</code> : a, b, 혹은 c가 들어간 것만 검색한다(or)</li>\n<li><code class=\"language-text\">[^abc]</code> : a,b,c가 아닌 값만 가져온다.</li>\n<li><code class=\"language-text\">[a-k]</code> : a~k 사이의 문자를 가져온다.</li>\n<li><code class=\"language-text\">[가-힣]</code> : 한글이 들어간 문자를 가져온다.</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"3-anchors\" style=\"position:relative;\"><a href=\"#3-anchors\" aria-label=\"3 anchors permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Anchors</h3>\n<ul>\n<li>\n<p><code class=\"language-text\">^abc</code> : 문장의 시작을 가져온다.</p>\n</li>\n<li>\n<p>예시: <code class=\"language-text\">^https/gm</code></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">안녕하세요<span class=\"token punctuation\">.</span> 스타트코딩입니다<span class=\"token punctuation\">.</span>\n코딩을 최대한 쉽고 재미있게 배울 수 있도록 끊임없이 연구하고 있습니다<span class=\"token punctuation\">.</span>\n\n궁금한 사항이 생기면 아래 SNS를 통해 질문을 남겨 주세요<span class=\"token punctuation\">.</span>\n여러분의 열정과 도전을 함께 하겠습니다<span class=\"token punctuation\">.</span>\n\nHello<span class=\"token punctuation\">.</span> This <span class=\"token keyword\">is</span> startcoding<span class=\"token punctuation\">.</span>\nstartcoding constantly studying to make coding <span class=\"token keyword\">as</span> easy <span class=\"token keyword\">and</span> fun <span class=\"token keyword\">as</span> possible<span class=\"token punctuation\">.</span>\n\nIf you have <span class=\"token builtin\">any</span> questions<span class=\"token punctuation\">,</span> please leave them on SNS below\nI will share your passion <span class=\"token keyword\">and</span> challenge<span class=\"token punctuation\">.</span>\n\n<span class=\"token operator\">-</span>티스토리\n<span class=\"token operator\">**</span>https<span class=\"token operator\">**</span><span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>startcoding0<span class=\"token punctuation\">.</span>tistory<span class=\"token punctuation\">.</span>com\n\n<span class=\"token operator\">-</span>네이버블로그\n<span class=\"token operator\">**</span>https<span class=\"token operator\">**</span><span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>blog<span class=\"token punctuation\">.</span>naver<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>kkj6369\n\n<span class=\"token operator\">-</span>유튜브\n<span class=\"token operator\">**</span>http<span class=\"token operator\">**</span><span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>www<span class=\"token punctuation\">.</span>youtube<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>channel<span class=\"token operator\">/</span>UCHwhZ7HPBhUh2IscPSL0pHA\n\n<span class=\"token operator\">-</span>email\nkkj6369@naver<span class=\"token punctuation\">.</span>com\n\n<span class=\"token operator\">**</span>여러분 행복한 부자되세요!<span class=\"token operator\">**</span> \\<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token punctuation\">)</span><span class=\"token operator\">/</span> <span class=\"token operator\">/</span><span class=\"token punctuation\">(</span>__<span class=\"token punctuation\">)</span>\\ 꾸벅\t\n\napple pineapple appleappleapple\n\nrait rabit rabbit rabbbit rabbbbit\n\n<span class=\"token comment\">#좋아요, #좋아요반사, #팔로우, #맞팔,</span>\n\ngrey gray\n\nI am a tiny tiny boy<span class=\"token punctuation\">.</span>\nMay I have have a question?\n\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>소가죽 샌들 <span class=\"token operator\">-</span>레몬스토어\n<span class=\"token punctuation\">[</span>품절<span class=\"token punctuation\">]</span>스마트 워치 <span class=\"token operator\">-</span>레몬스토어\n<span class=\"token punctuation\">[</span>품절<span class=\"token punctuation\">]</span>브이넥 반팔 티셔츠 <span class=\"token operator\">-</span>애플스토어\n쿨링밴딩 팬츠 <span class=\"token operator\">-</span>바나나스토어\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>남친룩 오버핏 셔츠 <span class=\"token operator\">-</span>래빗팜\n<span class=\"token punctuation\">[</span>특가할인<span class=\"token punctuation\">]</span>여친룩 오버핏 셔츠 <span class=\"token operator\">-</span>래빗팜</code></pre></div>\n<ul>\n<li>총 3개가 매칭된다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">abc$</code> : 문장의 끝을 가져온다.\n<ul>\n<li>예시: <code class=\"language-text\">/com$/gm</code> ⇒ com으로 끝나는 문장을 가져온다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">\\b</code> : 지정한 첫 문자(열)로 시작 혹은 끝나는 단어를 가져온다.\n<ul>\n<li>예시 1: <code class=\"language-text\">\\bapple</code> ⇒ apple로 시작하는 단어를 가져온다.</li>\n<li>예시 2: <code class=\"language-text\">apple\\b</code> ⇒ apple로 끝나는 단어를 가져온다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">\\B</code> : 지정한 첫 문자(열)로 시작 혹은 끝나지 않는 단어를 가져온다.\n<ul>\n<li>예시 1: <code class=\"language-text\">\\Bapple</code> ⇒ apple로 시작하지 않는 단어를 가져온다.</li>\n<li>예시 2: <code class=\"language-text\">apple\\B</code> ⇒ apple로 끝나지 않는 단어를 가져온다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h3 id=\"4-escaped-characters\" style=\"position:relative;\"><a href=\"#4-escaped-characters\" aria-label=\"4 escaped characters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Escaped Characters</h3>\n<ul>\n<li><code class=\"language-text\">\\.</code> : 문자 <code class=\"language-text\">.</code> 을 찾는다.</li>\n<li><code class=\"language-text\">\\*</code> : 문자 <code class=\"language-text\">*</code> 를 찾는다.</li>\n<li><code class=\"language-text\">\\\\</code> : 문자 <code class=\"language-text\">\\</code> 를 찾는다.</li>\n<li><code class=\"language-text\">\\t</code> : <code class=\"language-text\">tab</code> 키 입력을 찾는다.</li>\n<li><code class=\"language-text\">\\n</code> : 개행(linefeed)문자를 찾는다.</li>\n<li><code class=\"language-text\">\\r</code> : 현재 위치를 나타내는 커서 를 맨 앞으로 이동시키는 캐리지 리턴(carriage return) 문자를 찾는다.</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 정규표현식 사용방법(1)을 알아보았다. 다음 포스팅에서는 정규표현식 사용방법(2)에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 파이썬에서의 정규표현식 사용방법(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-19-Python-Photo1 2022-06-19-Python-Photo2  01. 정규표현식 소개 정규표현식: 문자열에서 특정 패턴을 찾고 싶을 때 조건문, 반복문 들을 복잡하게 사용해야할 때 사용 유효성 검사: if문을 사용하면 여러 줄에 걸쳐 작업해야하나 정규표현식은 아주 빠르게 할 수 있다.정 정규 표현식의 장점 문자열 추출, 유효성 검사에서 유용하게 쓰일 수 있다. 거의 모든 언어에서 지원(범용성이 높다) 정규 표현식의 단점 가독성이 좋지 못하다. 유지보수가 힘들다(내가 짠 코드를 남이 이해하기 어렵고, 남이 짠 코드를 내가 이해하기 어렵다). 예:   02. 정규표현식 사용방법(1) 1. …","frontmatter":{"date":"June 19, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 63일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220619-python-day63/"}},"next":{"id":"75ae6d33-a721-51ec-9c30-955f997a9f3d","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 파이썬에서의 SQLite 사용법을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-18-Python-Photo/2022-06-18-Python-Photo1.jpg\" alt=\"2022-06-18-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-18-Python-Photo/2022-06-18-Python-Photo2.jpg\" alt=\"2022-06-18-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"06-sql-파이썬에서-sqlite3-사용방법\" style=\"position:relative;\"><a href=\"#06-sql-%ED%8C%8C%EC%9D%B4%EC%8D%AC%EC%97%90%EC%84%9C-sqlite3-%EC%82%AC%EC%9A%A9%EB%B0%A9%EB%B2%95\" aria-label=\"06 sql 파이썬에서 sqlite3 사용방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>06. SQL 파이썬에서 SQLite3 사용방법</h1>\n<h2 id=\"1-파이썬-sqlite3-사용-순서\" style=\"position:relative;\"><a href=\"#1-%ED%8C%8C%EC%9D%B4%EC%8D%AC-sqlite3-%EC%82%AC%EC%9A%A9-%EC%88%9C%EC%84%9C\" aria-label=\"1 파이썬 sqlite3 사용 순서 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 파이썬 SQLite3 사용 순서</h2>\n<ol>\n<li>Database 파일 열기</li>\n<li>커서(Cursor) 생성\n<ul>\n<li>커서(Cursor)란? 사용자와 DBMS(SQLite)를 연결하는 역할. 사용자의 SQL문을 DBMS에 전송해주고, DBMS에서의 data 결과값을 저장해두었다 사용자가 필요할 때 제공.</li>\n</ul>\n</li>\n<li>SQL 명령 실행</li>\n<li>커밋(Commit) 또는 롤백(Rollback)\n<ul>\n<li>커밋(Commit): 변경사항/SQL명령문에 대한 승인</li>\n<li>롤백(Rollback): 변경사항/SQL명령문에 대한 취소</li>\n</ul>\n</li>\n<li>데이터베이스 닫기</li>\n</ol>\n<p><br/><br/></p>\n<h2 id=\"2-실습\" style=\"position:relative;\"><a href=\"#2-%EC%8B%A4%EC%8A%B5\" aria-label=\"2 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 실습</h2>\n<ul>\n<li>VScode로 돌아가서 작업하자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nCREATE_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"\"\"\n    CREATE TABLE IF NOT EXISTS item(\n        id integer primary key autoincrement,\n        code text not null,\n        name text not null,\n        price integer not null\n    )\n\"\"\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>CREATE_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<ul>\n<li>primary key 단독 사용과 autoincrement 병용과의 차이점\n<ul>\n<li>id = 3 을 삭제 후 재생성 시\n<ul>\n<li>primary key 단독 사용 ⇒ id =3</li>\n<li>autoincrement key 병용 ⇒ id =4 (바람직)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>실행결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">01.</span>CREATE_TABLE<span class=\"token punctuation\">.</span>py</code></pre></div>\n<br/>\n<ul>\n<li>SQLite로 돌아가 Open Database ⇒ 해당 db파일 오픈 ⇒ Database Structure에서 테이블이 추가된 것을 알 수 있다.</li>\n</ul>\n<br/>\n<ul>\n<li>INSERT문을 실행해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nINSERT_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO item(code, name, price) VALUES (?, ?, ?)\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>INSERT_SQL<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'A38080'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'게이밍 마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커밋 : INSERT, UPDATE, DELETE는 commit을 해야 실제 데이터베이스에 반영된다.</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<ul>\n<li>SELECT를 제외한 쿼리문은 commit을 해주어야 실제 데이터베이스에 반영이 된다.</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">02.</span><span class=\"token keyword\">INSERT</span><span class=\"token punctuation\">.</span>py</code></pre></div>\n<br/>\n<ul>\n<li>게이밍 마우스가 item에 추가되었다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>code</th>\n<th>name</th>\n<th>price</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>A38080</td>\n<td>게이밍 마우스</td>\n<td>38080</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>여러가지 항목을 INSERT문으로 추가해보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nINSERT_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"INSERT INTO item(code, name, price) VALUES (?, ?, ?)\"</span>\n\n<span class=\"token comment\"># 데이터 여러개 한번에 추가하기</span>\n<span class=\"token keyword\">data</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'A00002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'에어컨 20평형'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'A00003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'최신형 스마트폰'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token string\">'A00004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'가성비 노트북'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\nconn<span class=\"token punctuation\">.</span>executemany<span class=\"token punctuation\">(</span>INSERT_SQL<span class=\"token punctuation\">,</span> <span class=\"token keyword\">data</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커밋 : INSERT, UPDATE, DELETE는 commit을 해야 실제 데이터베이스에 반영된다.</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<ul>\n<li>중첩 튜플 혹은 리스트를 넘겨주면 된다.</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">02.</span><span class=\"token keyword\">INSERT</span><span class=\"token punctuation\">.</span>py</code></pre></div>\n<br/>\n<ul>\n<li>여러 개의 데이터가 한번에 들어간 것을 알 수 있다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>code</th>\n<th>name</th>\n<th>price</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>A38080</td>\n<td>게이밍 마우스</td>\n<td>38080</td>\n</tr>\n<tr>\n<td>2</td>\n<td>A00002</td>\n<td>에어컨 20평형</td>\n<td>350000</td>\n</tr>\n<tr>\n<td>3</td>\n<td>A00003</td>\n<td>최신형 스마트폰</td>\n<td>800000</td>\n</tr>\n<tr>\n<td>4</td>\n<td>A00004</td>\n<td>가성비 노트북</td>\n<td>650000</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>SELECT문을 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nSELECT_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM item\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\ncur<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>SELECT_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">rows</span> <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">rows</span>:\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<ul>\n<li>cur.fetchall로 결과값을 가져와야한다.</li>\n</ul>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">03.</span><span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A38080'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'게이밍 마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38080</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A00002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'에어컨 20평형'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A00003'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'최신형 스마트폰'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A00004'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'가성비 노트북'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">650000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>일부 값만 조회할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nSELECT_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM item WHERE code = 'A00002'\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\ncur<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>SELECT_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">rows</span> <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">rows</span>:\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">03.</span><span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A00002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'에어컨 20평형'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>상위 두개 값만 출력하고 싶을 경우에는 아래와 같이 작성하면 된다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nSELECT_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"SELECT * FROM item LIMIT 2;\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\ncur<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>SELECT_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">rows</span> <span class=\"token operator\">=</span> cur<span class=\"token punctuation\">.</span>fetchall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">row</span> <span class=\"token operator\">in</span> <span class=\"token keyword\">rows</span>:\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">row</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">03.</span><span class=\"token keyword\">SELECT</span><span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A38080'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'게이밍 마우스'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38080</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'A00002'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'에어컨 20평형'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350000</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>UPDATE 명령어를 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nUPDATE_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"UPDATE item set price = 650000 WHERE code='A00002';\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\ncur<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>UPDATE_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커밋 : INSERT, UPDATE, DELETE는 commit을 해야 실제 데이터베이스에 반영된다.</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">04.</span><span class=\"token keyword\">UPDATE</span><span class=\"token punctuation\">.</span>py</code></pre></div>\n<br/>\n<ul>\n<li>값이 변경된 것을 알 수 있다.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>id</th>\n<th>code</th>\n<th>name</th>\n<th>price</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>A38080</td>\n<td>게이밍 마우스</td>\n<td>38080</td>\n</tr>\n<tr>\n<td>2</td>\n<td>A00002</td>\n<td>에어컨 20평형</td>\n<td>650000</td>\n</tr>\n<tr>\n<td>3</td>\n<td>A00003</td>\n<td>최신형 스마트폰</td>\n<td>800000</td>\n</tr>\n<tr>\n<td>4</td>\n<td>A00004</td>\n<td>가성비 노트북</td>\n<td>650000</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>DELETE문을 실습해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token comment\"># 모듈 추가</span>\n<span class=\"token keyword\">import</span> sqlite3\n\n<span class=\"token comment\"># 데이터베이스 추가</span>\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span><span class=\"token keyword\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./myvenv/Chapter05/SQL_DDL.db'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커서 생성</span>\ncur <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span><span class=\"token keyword\">cursor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># SQL 명령 작성</span>\nDELETE_SQL <span class=\"token operator\">=</span> <span class=\"token string\">\"DELETE FROM item WHERE code='A00002';\"</span>\n\n<span class=\"token comment\"># SQL 명령 실행</span>\ncur<span class=\"token punctuation\">.</span><span class=\"token keyword\">execute</span><span class=\"token punctuation\">(</span>DELETE_SQL<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 커밋 : INSERT, UPDATE, DELETE는 commit을 해야 실제 데이터베이스에 반영된다.</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 데이터베이스 닫기</span>\nconn<span class=\"token punctuation\">.</span><span class=\"token keyword\">close</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>bin<span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter05<span class=\"token operator\">/</span><span class=\"token number\">05.</span><span class=\"token keyword\">DELETE</span><span class=\"token punctuation\">.</span>py</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"추가적인-데이터베이스-공부\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EA%B0%80%EC%A0%81%EC%9D%B8-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EA%B3%B5%EB%B6%80\" aria-label=\"추가적인 데이터베이스 공부 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추가적인 데이터베이스 공부</h2>\n<ul>\n<li>여러 개의 테이블이 필요한 프로젝트 설계(5~6개)</li>\n<li>Primary Key, Foreign Key(외부 키)</li>\n<li>정규화(+역정규화): 정규화 = 중복 제거</li>\n<li>ERD(Entity Relationship Diagram)</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 파이썬에서의 SQLite 사용법을 알아보았다. 다음 포스팅에서는 정규표현식에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 18, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 62일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220618-python-day62/"}},"prev":{"id":"ab7ed1d0-0fe8-5da9-b0b3-8695a89c1d3b","html":"<p>최근 AWS 서비스 아키텍처를 그려야 할 일이 생겨 노션에 간단하게 정리하다 AWS 아이콘 모음과 아키텍처를 그릴 때 유용한 사이트, 정보 포스팅을 작성해보았다.</p>\n<br/>\n<h1 id=\"1-aws-서비스-아이콘-이미지-모음\" style=\"position:relative;\"><a href=\"#1-aws-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%95%84%EC%9D%B4%EC%BD%98-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EB%AA%A8%EC%9D%8C\" aria-label=\"1 aws 서비스 아이콘 이미지 모음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. AWS 서비스 아이콘 이미지 모음</h1>\n<p>AWS는 아키텍처 다이어그램을 그리기 위한 아이콘 이미지 모음을 공식 웹사이트에서 제공한다(아래 웹사이트 링크에서 서드파티 툴들도 소개하고 있는데 대부분 AWS에서 제공하는 아이콘 이미지로 아키텍처를 그리는 듯).</p>\n<br/>\n<ul>\n<li><strong>AWS Architecture Icons:</strong> <a href=\"https://aws.amazon.com/ko/architecture/icons/\">https://aws.amazon.com/ko/architecture/icons/</a></li>\n</ul>\n<br/>\n<p>AWS는 서비스가 수시로 업데이트되고 추가되는 만큼, 아이콘들도 주기적으로 업데이트 되기 때문에 기존에 다운로드 받아놓았다 하더라도 그릴 때마다 새로 받아서 그리는 것을 추천한다.</p>\n<br/>\n<p>참고로 아이콘들은 다크모드/일반모드 배경 및 pptx,ppt,svg,png 등 다양한 포맷으로 제공되고 있으니 본인이 원하는 스타일의 파일을 다운로드 받으면 된다.</p>\n<br/>\n<p>참고로 아이콘 pptx를 살펴보면 아이콘 자체 뿐만아니라 해당 프레젠테이션 덱의 사용법도 나와있으니 잘 살펴보자.</p>\n<p><br/><br/></p>\n<h1 id=\"2-아키텍처-예시\" style=\"position:relative;\"><a href=\"#2-%EC%95%84%ED%82%A4%ED%85%8D%EC%B2%98-%EC%98%88%EC%8B%9C\" aria-label=\"2 아키텍처 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 아키텍처 예시</h1>\n<p>AWS는 공식 웹사이트의 아키텍처 센터에서 벤치마킹할만한 아키텍처 및 발표 자료, 백서 등을 제공한다. 원하는 서비스나 구조 등이 있으면 검색으로 찾아서 볼 수 있다.</p>\n<br/>\n<ul>\n<li><strong>AWS 아키텍처 센터:</strong> <a href=\"https://aws.amazon.com/ko/architecture\">https://aws.amazon.com/ko/architecture</a></li>\n</ul>\n<br/>\n<p>참고로 AWS 의 유명한 서비스가 대부분 들어가 있는 기본 아키텍처를 참고하고 싶다면 워드프레스(Wordpress)라는 호스팅 플랫폼에 웹페이지를 구성한 아키텍처를 참고해보자.</p>\n<br/>\n<ul>\n<li><strong>Hosting WordPress on AWS:</strong> <a href=\"https://github.com/aws-samples/aws-refarch-wordpress\">https://github.com/aws-samples/aws-refarch-wordpress</a></li>\n</ul>\n<p><img src=\"/assets/images/2022-06-19-AWS-icon/2022-06-19-AWS-icon.png\" alt=\"Hosting WordPress on AWS\"></p>\n<br/>\n<p>살펴보면 알겠지만 ALB, Cloudfront, Route53, EC2 등 실제로 많이 쓰이는 요소가 배치되어있다.</p>\n<br/>\n<p>이 외에도 다양한 상황에서의 글들이 많이 올라와있으니 확인해보자.</p>\n<p><br/><br/></p>\n<h1 id=\"3-well-architecture-framework\" style=\"position:relative;\"><a href=\"#3-well-architecture-framework\" aria-label=\"3 well architecture framework permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Well-Architecture Framework</h1>\n<p>AWS에서 아키텍처를 그릴 때 여섯 개의 축을 가지고 아키텍처를 그리게 되는데, 이 설계원칙을 <code class=\"language-text\">AWS Well-Architected</code> 라고 한다.</p>\n<br/>\n<p>AWS의 Well-Architected란 아래와 같은 총 6가지 원칙을 준수한다(6번의 지속 가능성 원칙은 최근에 추가된 것으로 보인다).</p>\n<br/>\n<h3 id=\"1-운영-우수성-원칙\" style=\"position:relative;\"><a href=\"#1-%EC%9A%B4%EC%98%81-%EC%9A%B0%EC%88%98%EC%84%B1-%EC%9B%90%EC%B9%99\" aria-label=\"1 운영 우수성 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 운영 우수성 원칙</h3>\n<p>운영 우수성 원칙은 시스템을 실행 및 모니터링하고 프로세스와 절차를 지속적으로 개선하는 데 중점을 둔다. 주요 주제에는 <strong>변경 자동화, 이벤트 대응 및 일상적인 작업 관리를 위한 표준 정의</strong>가 포함된다.</p>\n<br/>\n<h3 id=\"2-보안-원칙\" style=\"position:relative;\"><a href=\"#2-%EB%B3%B4%EC%95%88-%EC%9B%90%EC%B9%99\" aria-label=\"2 보안 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 보안 원칙</h3>\n<p>보안 원칙은 정보와 시스템을 보호하는 데 중점을 둔다. 주요 주제에는 <strong>데이터의 기밀성 및 무결성, 사용자 권한 관리, 보안 이벤트 감지를 위한 제어 설정</strong>이 포함된다.</p>\n<br/>\n<h3 id=\"3-안정성-원칙\" style=\"position:relative;\"><a href=\"#3-%EC%95%88%EC%A0%95%EC%84%B1-%EC%9B%90%EC%B9%99\" aria-label=\"3 안정성 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 안정성 원칙</h3>\n<p>안정성 원칙은 의도한 기능을 수행하는 워크로드와 요구 사항을 충족하기 위해 실패로부터 신속하게 복구하는 방법에 중점을 둔다. 주요 주제에는 <strong>분산 시스템 설계, 복구 계획</strong> 및 <strong>변화하는 요구 사항에 대한 적응</strong>이 포함된다.</p>\n<br/>\n<h3 id=\"4-성능-효율성-원칙\" style=\"position:relative;\"><a href=\"#4-%EC%84%B1%EB%8A%A5-%ED%9A%A8%EC%9C%A8%EC%84%B1-%EC%9B%90%EC%B9%99\" aria-label=\"4 성능 효율성 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 성능 효율성 원칙</h3>\n<p>성능 효율성 원칙은 IT 및 컴퓨팅 리소스의 구조화되고 간소화된 할당에 중점을 둔다. 주요 주제에는 워크로드 요구 사항에 <strong>최적화된 리소스 유형 및 크기 선택, 성능 모니터링</strong>, 비즈니스 요구 사항 변화에 따른 <strong>효율성 유지</strong>가 포함된다.</p>\n<br/>\n<h3 id=\"5-비용-최적화-원칙\" style=\"position:relative;\"><a href=\"#5-%EB%B9%84%EC%9A%A9-%EC%B5%9C%EC%A0%81%ED%99%94-%EC%9B%90%EC%B9%99\" aria-label=\"5 비용 최적화 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 비용 최적화 원칙</h3>\n<p>비용 최적화 원칙은 불필요한 비용 발생을 방지하는 데 중점을 둔다. 주요 주제에는 <strong>시간 경과에 따른 지출 이해 및 자금 할당 제어, 올바른 유형 및 수량의 리소스 선택, 초과 지출 없이 비즈니스 요구를 충족하도록 확장</strong>이 포함됩니다.</p>\n<br/>\n<h3 id=\"6-지속-가능성-원칙\" style=\"position:relative;\"><a href=\"#6-%EC%A7%80%EC%86%8D-%EA%B0%80%EB%8A%A5%EC%84%B1-%EC%9B%90%EC%B9%99\" aria-label=\"6 지속 가능성 원칙 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. <strong>지속 가능성 원칙</strong></h3>\n<p>지속 가능성 원칙은 클라우드 워크로드 실행이 환경에 미치는 영향을 최소화하는 데 중점을 둔다. 지속 가능성을 위한 <strong>공동 책임 모델, 영향 이해 및 활용</strong>을 극대화하여 필요한 리소스를 최소화하고 다운스트림 영향을 줄이는 방법과 같은 주요 주제를 다룬다.</p>\n<br/>\n<p>이 외에도 AWS에서 Well-Architected Labs라는 Lab을 제공해 위의 원칙들을 어떻게 적용해나가는 지 실습해볼 수 있다.</p>\n<br/>\n<ul>\n<li><strong>Well-Architected Labs:</strong> <a href=\"https://www.wellarchitectedlabs.com/\">https://www.wellarchitectedlabs.com/</a></li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"June 19, 2022","title":"서비스 아이콘 모음 및 아키텍처/다이어그램 작성에 유용한 자료","categories":"클라우드","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220619-cloud-aws-icon-and-architecture-references/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220619-python-day63/","nextSlug":"/220618-python-day62/","prevSlug":"/220619-cloud-aws-icon-and-architecture-references/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}