{"componentChunkName":"component---src-templates-blog-template-js","path":"/220518-kubernetes-cka-mock-exam-2-03/","result":{"data":{"cur":{"id":"42a3ada7-2253-595d-be8a-544cc8bd5ef1","html":"<h1 id=\"모의고사-23---커맨드를-지정한-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-23---%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%A5%BC-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 23   커맨드를 지정한 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.3 - 커맨드를 지정한 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a new pod called <code class=\"language-text\">super-user-pod</code> with image <code class=\"language-text\">busybox:1.28</code>. Allow the pod to be able to set <code class=\"language-text\">system_time</code>.</p>\n<p>The container should sleep for 4800 seconds.</p>\n<ul>\n<li>Pod: super-user-pod</li>\n<li>Container Image: busybox:1.28</li>\n<li>SYS_TIME capabilities for the conatiner?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-커맨드를-지정한-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%A5%BC-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 커맨드를 지정한 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 커맨드를 지정한 파드(POD) 생성</h3>\n<ul>\n<li>명령문으로 파드 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run super-user-pod --image<span class=\"token operator\">=</span>busybox:1.28 --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> super-user-pod.yaml</code></pre></div>\n<br/>\n<ul>\n<li>파드 매니페스트 파일에 수정할 부분이 없는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">vi</span> super-user-pod.yaml\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: super-user-pod\n  name: super-user-pod\nspec:\n  containers:\n  - command:\n    - <span class=\"token function\">sleep</span>\n    - <span class=\"token string\">\"4800\"</span>\n    image: busybox:1.28\n    name: super-user-pod\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>Command sleep, “4800” 추가</p>\n</li>\n<li>\n<p><code class=\"language-text\">system_time</code>을 추가해야한다: 쿠버네티스 공식문서에서 Security Context 검색 > Set capabilities for a Container 탭으로 이동</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: security-context-demo-4\nspec:\n  containers:\n    image: gcr.io/google-samples/node-hello:1.0\n    name: sec-ctx-4\n    securityContexts:\n      capabilities:\n         add: <span class=\"token punctuation\">[</span><span class=\"token string\">\"NET_ADMIN\"</span>, <span class=\"token string\">\"SYS_TIME\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: super-user-pod\n  name: super-user-pod\nspec:\n  containers:\n  - command:\n    - <span class=\"token function\">sleep</span>\n    - <span class=\"token string\">\"4800\"</span>\n    image: busybox:1.28\n    name: super-user-pod\n    securityContexts:\n      capabilities:\n         add: <span class=\"token punctuation\">[</span><span class=\"token string\">\"SYS_TIME\"</span><span class=\"token punctuation\">]</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Pod 설정 예시파일을 보고 매니페스트 파일을 수정해준다.</li>\n</ul>\n<br/>\n<ul>\n<li>작성한 매니페스트 파일을 이용해 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f super-user-pod.yaml \npod/super-user-pod created</code></pre></div>\n<br/>\n<ul>\n<li>파드가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods\nNAME             READY   STATUS              RESTARTS   AGE\nredis-storage    <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          4m5s\nsuper-user-pod   <span class=\"token number\">1</span>/1     ContainerCreating   <span class=\"token number\">0</span>          31s</code></pre></div>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>Configure Security Context: <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/</a></li>\n</ul>\n<br/>","excerpt":"모의고사 2.3 - 커맨드를 지정한 파드(POD) 생성하기 1. 문제 요건 Create a new pod called  with image . Allow the pod to be able to set . The container should sleep for 4800 seconds. Pod: super-user-pod Container Image: busybox:1.28 SYS_TIME capabilities for the conatiner?  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).  2. 커맨드를 지정한 파드(POD) 생성 명령문으로 파드 매니페스트 파일을 생성한다. 파드 매니페스트 파일에 수정할 부분이 없는지 확인한다. Command sleep, “4800” 추가 을 추가해야한다: 쿠버네티스 공식문서에서 Security Context 검색 > Set capabilities for a Container 탭으로 이동 …","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.3 - Security Context를 지정한 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-03/"}},"next":{"id":"67d90cba-835c-5b5d-b1a6-6373cab38ead","html":"<h1 id=\"모의고사-25---디플로이먼트deployment-이미지-업그레이드하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-25---%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 25   디플로이먼트deployment 이미지 업그레이드하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.5 - 디플로이먼트(Deployment) 이미지 업그레이드하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a new deployment called <code class=\"language-text\">nginx-deploy</code>, with image <code class=\"language-text\">nginx:1.16</code> and <code class=\"language-text\">1</code> replica. Next upgrade the deployment to version <code class=\"language-text\">1.17</code> using rolling update.</p>\n<ul>\n<li>Deployment : nginx-deploy. Image: nginx:1.16</li>\n<li>Image: nginx:1.16</li>\n<li>Task: Upgrade the version of the deployment to 1:17</li>\n<li>Task: Record the changes for the image upgrade</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-디플로이먼트deployment-이미지-업그레이드\" style=\"position:relative;\"><a href=\"#2-%EB%94%94%ED%94%8C%EB%A1%9C%EC%9D%B4%EB%A8%BC%ED%8A%B8deployment-%EC%9D%B4%EB%AF%B8%EC%A7%80-%EC%97%85%EA%B7%B8%EB%A0%88%EC%9D%B4%EB%93%9C\" aria-label=\"2 디플로이먼트deployment 이미지 업그레이드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 디플로이먼트(Deployment) 이미지 업그레이드</h3>\n<ul>\n<li>명령문으로 디플로이먼트(Deployment) 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create deployment nginx-deploy --image<span class=\"token operator\">=</span>nginx:1.16 --replicas<span class=\"token operator\">=</span><span class=\"token number\">1</span> --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> nginx-deploy.yaml</code></pre></div>\n<br/>\n<ul>\n<li>파드 매니페스트 파일로 디플로이먼트를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f nginx-deploy.yaml \ndeployment.apps/nginx-deploy created</code></pre></div>\n<br/>\n<ul>\n<li>디플로이먼트가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get deployments.apps \nNAME           READY   UP-TO-DATE   AVAILABLE   AGE\nnginx-deploy   <span class=\"token number\">1</span>/1     <span class=\"token number\">1</span>            <span class=\"token number\">1</span>           37s</code></pre></div>\n<br/>\n<ul>\n<li>kubectl cheat sheet에서 디플로이먼트의 이미지를 업그레이드하는 명령문을 복사한 뒤 문제 요건에 맞게 수정해 실행한다.\n<ul>\n<li><code class=\"language-text\">nginx=nginx:1.17</code> ⇒ <code class=\"language-text\">&lt;container name>=&lt;image name></code></li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl <span class=\"token builtin class-name\">set</span> image deployment/nginx-deploy <span class=\"token assign-left variable\">nginx</span><span class=\"token operator\">=</span>nginx:1.17</code></pre></div>\n<ul>\n<li>이미지 버전 업데이트가 잘 되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe deployments.apps nginx-deploy Name:                   nginx-deploy\nNamespace:              default\nCreationTimestamp:      Mon, <span class=\"token number\">16</span> May <span class=\"token number\">2022</span> <span class=\"token number\">14</span>:29:43 +0000\nLabels:                 <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy\nAnnotations:            deployment.kubernetes.io/revision: <span class=\"token number\">2</span>\nSelector:               <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy\nReplicas:               <span class=\"token number\">1</span> desired <span class=\"token operator\">|</span> <span class=\"token number\">1</span> updated <span class=\"token operator\">|</span> <span class=\"token number\">2</span> total <span class=\"token operator\">|</span> <span class=\"token number\">1</span> available <span class=\"token operator\">|</span> <span class=\"token number\">1</span> unavailable\nStrategyType:           RollingUpdate\nMinReadySeconds:        <span class=\"token number\">0</span>\nRollingUpdateStrategy:  <span class=\"token number\">25</span>% max unavailable, <span class=\"token number\">25</span>% max surge\nPod Template:\n  Labels:  <span class=\"token assign-left variable\">app</span><span class=\"token operator\">=</span>nginx-deploy\n  Containers:\n   nginx:\n    Image:        nginx:1.17\n    Port:         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Environment:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:       <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n  Volumes:        <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nConditions:\n  Type           Status  Reason\n  ----           ------  ------\n  Available      True    MinimumReplicasAvailable\n  Progressing    True    ReplicaSetUpdated\nOldReplicaSets:  nginx-deploy-6c858c4486 <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>/1 replicas created<span class=\"token punctuation\">)</span>\nNewReplicaSet:   nginx-deploy-7c8d8c76bf <span class=\"token punctuation\">(</span><span class=\"token number\">1</span>/1 replicas created<span class=\"token punctuation\">)</span>\nEvents:\n  Type    Reason             Age    From                   Message\n  ----    ------             ----   ----                   -------\n  Normal  ScalingReplicaSet  3m43s  deployment-controller  Scaled up replica <span class=\"token builtin class-name\">set</span> nginx-deploy-6c858c4486 to <span class=\"token number\">1</span>\n  Normal  ScalingReplicaSet  4s     deployment-controller  Scaled up replica <span class=\"token builtin class-name\">set</span> nginx-deploy-7c8d8c76bf to <span class=\"token number\">1</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.5 - 디플로이먼트(Deployment) 이미지 업그레이드하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-05/"}},"prev":{"id":"b851f4a1-0a01-55e3-af57-6a65fc48a46e","html":"<h1 id=\"모의고사-24---퍼시스턴트-볼륨persistent-volume을-마운트한-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-24---%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume%EC%9D%84-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 24   퍼시스턴트 볼륨persistent volume을 마운트한 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.4 - 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>A pod definition file is created at <code class=\"language-text\">/root/CKA/use-pv.yaml</code>. Make use of this manifest file and mount the persistent volume called <code class=\"language-text\">pv-1</code>. Ensure the pod is running and the PV is bound.</p>\n<p>mountPath: <code class=\"language-text\">/data</code> persistentVolumeClaim Name: <code class=\"language-text\">my-pvc</code></p>\n<ul>\n<li>persistentVolume Claim configured correctly</li>\n<li>pod using the correct mountPath</li>\n<li>pod using the persistent volume claim?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<br/>\n<h3 id=\"2-퍼시스턴트-볼륨persistent-volume을-마운트한-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume%EC%9D%84-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 퍼시스턴트 볼륨persistent volume을 마운트한 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성</h3>\n<ul>\n<li>문제에서 제공한 파드 매니페스트 파일을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /root/CKA/use-pv.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: use-pv\n  name: use-pv\nspec:\n  containers:\n  - image: nginx\n    name: use-pv\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>문제에서 제시한 pv 정보를 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get <span class=\"token function\">pv</span>\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE\npv-1   10Mi       RWO            Retain           Available                                   2m21s</code></pre></div>\n<br/>\n<ul>\n<li>기존에 pvc가 있는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pvc\nNo resources found <span class=\"token keyword\">in</span> default namespace.</code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스 공식문서에서 pvc를 검색해 템플릿을 복사한 뒤 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> pvc.yaml\n\n----\n\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n   accessModes:\n      - ReadWriteOnce\n   resources:\n     requests:\n       storage: 10Mi</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 pvc를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k create <span class=\"token operator\">-</span>f pvc<span class=\"token punctuation\">.</span>yaml\npersistentvolumeclaim<span class=\"token operator\">/</span>my<span class=\"token operator\">-</span>pvc created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 pvc가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k <span class=\"token keyword\">get</span> pvc\n<span class=\"token constant\">NAME</span>     <span class=\"token constant\">STATUS</span>   <span class=\"token constant\">VOLUME</span>   <span class=\"token constant\">CAPACITY</span>   <span class=\"token constant\">ACCESS</span> <span class=\"token constant\">MODES</span>   <span class=\"token constant\">STORAGECLASS</span>   <span class=\"token constant\">AGE</span>\nmy<span class=\"token operator\">-</span>pvc   Bound    pv<span class=\"token operator\">-</span><span class=\"token number\">1</span>     10Mi       <span class=\"token constant\">RWO</span>                           16s</code></pre></div>\n<ul>\n<li>status: Bound여야한다.</li>\n</ul>\n<br/>\n<ul>\n<li>문제에서 제공한 파드 매니페스트 파일을 연다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n   <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n   <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n      <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> image<span class=\"token operator\">:</span> nginx\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n    <span class=\"token literal-property property\">resources</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스 공식문서의 Claim As Volume 탭을 클릭해 Pod 예시를 보고 문제에 맞게 내용을 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n   <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n   <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n      <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> image<span class=\"token operator\">:</span> nginx\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n    <span class=\"token literal-property property\">resources</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token literal-property property\">volumeMounts</span><span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> mountPath<span class=\"token operator\">:</span> <span class=\"token string\">\"/data\"</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> mypd\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n  <span class=\"token literal-property property\">volumes</span><span class=\"token operator\">:</span>\n     <span class=\"token operator\">-</span> name<span class=\"token operator\">:</span> mypd\n       <span class=\"token literal-property property\">persistentVolumeClaim</span><span class=\"token operator\">:</span>\n         <span class=\"token literal-property property\">claimName</span><span class=\"token operator\">:</span> my<span class=\"token operator\">-</span>pvc \n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 Pod를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k create <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\npod<span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어를 이용해 Pod가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k <span class=\"token keyword\">get</span> pods\n<span class=\"token constant\">NAME</span>     <span class=\"token constant\">READY</span>   <span class=\"token constant\">STATUS</span>    <span class=\"token constant\">RESTARTS</span>   <span class=\"token constant\">AGE</span>\nuse<span class=\"token operator\">-</span>pv   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          14s</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어를 이용해 문제에서 제시한 요구조건이 제대로 설정되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k describe pod use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>         use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Namespace</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">default</span>\n<span class=\"token literal-property property\">Priority</span><span class=\"token operator\">:</span>     <span class=\"token number\">0</span>\n<span class=\"token literal-property property\">Node</span><span class=\"token operator\">:</span>         node01<span class=\"token operator\">/</span><span class=\"token number\">10.52</span><span class=\"token number\">.31</span><span class=\"token number\">.6</span>\nStart Time<span class=\"token operator\">:</span>   Thu<span class=\"token punctuation\">,</span> <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">38</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n<span class=\"token literal-property property\">Labels</span><span class=\"token operator\">:</span>       run<span class=\"token operator\">=</span>use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Annotations</span><span class=\"token operator\">:</span>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nStatus:       Running\nIP:           10.50.192.1\nIPs:\n  IP:  10.50.192.1\nContainers:\n  use-pv:\n    Container ID:   docker://a2893bd59fa5c7e1d3a4c87778a97bcc1f4fd8aad1610c6283809993439d355d\n    Image:          nginx\n    Image ID:       docker-pullable://nginx@sha256:2d17cc4981bf1e22a87ef3b3dd20fbb72c3868738e3f307662eb40e2630d4320\n    Port:           </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Host Port:      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    State:          Running\n      Started:      Thu, 19 May 2022 20:38:44 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Mounts:\n      /data from mypd (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-hmwwc (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  mypd:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  my-pvc\n    ReadOnly:   false\n  default-token-hmwwc:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-hmwwc\n    Optional:    false\nQoS Class:       BestEffort\nNode-Selectors:  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nTolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  31s   default-scheduler  Successfully assigned default/use-pv to node01\n  Normal  Pulling    30s   kubelet            Pulling image \"nginx\"\n  Normal  Pulled     21s   kubelet            Successfully pulled image \"nginx\" in 8.528417084s\n  Normal  Created    21s   kubelet            Created container use-pv\n  Normal  Started    20s   kubelet            Started container use-pv</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>퍼시스턴트 볼륨(Persistent Volume): <a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims\">https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.4 - 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-04/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220518-kubernetes-cka-mock-exam-2-03/","nextSlug":"/220518-kubernetes-cka-mock-exam-2-05/","prevSlug":"/220518-kubernetes-cka-mock-exam-2-04/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}