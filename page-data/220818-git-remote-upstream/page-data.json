{"componentChunkName":"component---src-templates-blog-template-js","path":"/220818-git-remote-upstream/","result":{"data":{"cur":{"id":"07693753-4f44-5a65-ab72-642f4f22570a","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>최근 쿠버네티스 한글화 프로젝트를 비롯한 오픈소스 프로젝트에 기여를 진행하고 있는데, 필요할 때 매번 관련 명령어를 찾기 귀찮아서(?) 블로그에 기록해놓으려고 한다.</p>\n<br/>\n<h1 id=\"2-upstream이란\" style=\"position:relative;\"><a href=\"#2-upstream%EC%9D%B4%EB%9E%80\" aria-label=\"2 upstream이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. upstream이란?</h1>\n<p>쿠버네티스 공식문서와 같은 오픈소스 프로젝트의 경우에는 작업자가 로컬에서 바로 원본 저장소로 코드를 push하는 형태가 아니라 개인 원격 저장소(ex. 깃허브)에 fork(소스코드를 복사하는 개념과 유사하다고 생각하면 된다) 한다. 그리고 로컬에서 작업한 내용을 먼저 개인 원격 저장소에 push한 뒤, 원본 저장소에 pull request(repository 측에서 내 수정사항을 당겨받아(pull)달라는 요청)를 올려 관리자의 승인을 받아 반영을 하게 된다. 이 때, 원본 브랜치를 <code class=\"language-text\">upstream</code>, 내 개인 원격 저장소를 <code class=\"language-text\">origin</code>이라고 한다.</p>\n<br/>\n<p>이렇듯, <code class=\"language-text\">upstream</code>은 일반적으로 fork한 원본 저장소를 뜻하고, <code class=\"language-text\">origin</code>은 fork한 저장소를 뜻하게 된다(다만 fork를 하지 않고, 원본 저장소에 작업자가 바로 push하게 될 경우 원본 저장소를 origin으로 설정하기도 한다).</p>\n<br/>\n<h1 id=\"3-upstream-브랜치-설정-방법\" style=\"position:relative;\"><a href=\"#3-upstream-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95\" aria-label=\"3 upstream 브랜치 설정 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. upstream 브랜치 설정 방법</h1>\n<p>따라서, 오픈소스 프로젝트를 포크해 git clone으로 로컬에 소스코드를 다운받았을 경우, 이미 upstream 브랜치가 설정되어있지 않았다면 upstream을 설정해 주어야 한다.</p>\n<br/>\n<p>참고로, upstream을 설정하지 않아도 origin만 존재한다면 코드를 origin에 push해 upstream으로 pull request를 생성하는 것 자체에는 문제가 없을 수 있다. 하지만, 로컬에 upstream을 생성하지 않을 경우, upstream과 싱크를 맞출 수 없어 conflict이 발생하거나, 소스코드를 fork한 이후 upstream에 새로운 브랜치가 생성되어있을 경우 브랜치를 로컬에 받아올 수 없으니 반드시 설정해 주도록 하자.</p>\n<br/>\n<p>먼저 upstream branch가 추가되어있는지 확인하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote -v\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></code></pre></div>\n<p>origin만 존재하고 upstream이 추가되어있지 않다.</p>\n<br/>\n<p><code class=\"language-text\">git remote add</code> 명령어를 사용해 upstream을 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> upstream https://github.com/kubernetes/website.git</code></pre></div>\n<br/>\n<p>다시 확인해보면 upstream이 추가된 것을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote -v\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span>\nupstream\thttps://github.com/kubernetes/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\nupstream\thttps://github.com/kubernetes/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>이 상황에서 만약 새로운 브랜치를 업데이트 하고싶다면 아래와 같이 <code class=\"language-text\">fetch</code>명령어를 작성해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> fetch upstream dev-1.24-ko.3\nremote: Enumerating objects: <span class=\"token number\">8067</span>, done.\nremote: Counting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3264</span>/3264<span class=\"token punctuation\">)</span>, done.\nremote: Compressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span>, done.\nremote: Total <span class=\"token number\">8067</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3262</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">3261</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3261</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">4803</span>\nReceiving objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">8067</span>/8067<span class=\"token punctuation\">)</span>, <span class=\"token number\">2.66</span> MiB <span class=\"token operator\">|</span> <span class=\"token number\">2.86</span> MiB/s, done.\nResolving deltas: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">6258</span>/6258<span class=\"token punctuation\">)</span>, completed with <span class=\"token number\">985</span> <span class=\"token builtin class-name\">local</span> objects.\nFrom https://github.com/kubernetes/website\n * branch                  dev-1.24-ko.3 -<span class=\"token operator\">></span> FETCH_HEAD\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>            dev-1.24-ko.3 -<span class=\"token operator\">></span> upstream/dev-1.24-ko.3</code></pre></div>\n<br/>","excerpt":"1. 배경 상황 최근 쿠버네티스 한글화 프로젝트를 비롯한 오픈소스 프로젝트에 기여를 진행하고 있는데, 필요할 때 매번 관련 명령어를 찾기 귀찮아서(?) 블로그에 기록해놓으려고 한다. 2. upstream이란? 쿠버네티스 공식문서와 같은 오픈소스 프로젝트의 경우에는 작업자가 로컬에서 바로 원본 저장소로 코드를 push하는 형태가 아니라 개인 원격 저장소(ex. 깃허브)에 fork(소스코드를 복사하는 개념과 유사하다고 생각하면 된다) 한다. 그리고 로컬에서 작업한 내용을 먼저 개인 원격 저장소에 push한 뒤, 원본 저장소에 pull request(repository 측에서 내 수정사항을 당겨받아(pull)달라는 요청)를 올려 관리자의 승인을 받아 반영을 하게 된다. 이 때, 원본 브랜치를 , 내 개인 원격 저장소를 이라고 한다. 이렇듯, 은 일반적으로 fork한 원본 저장소를 뜻하고, 은 fork한 저장소를 뜻하게 된다(다만 fork를 하지 않고, 원본 저장소에 작업자가 바로 pus…","frontmatter":{"date":"August 18, 2022","title":"Git/Github - upstream이란? upstream 원격 저장소 추가하는 방법","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220818-git-remote-upstream/"}},"next":{"id":"19fd73fd-5c12-58a3-b2ad-01aebdf9fa65","html":"<p>최근 Django 튜토리얼에 따라 실습을 진행하고 있는데, IDE외에 CLI도 꽤 사용하고 있어서 CLI환경에서 디렉터리 구조를 한 눈에 보고 싶어 <code class=\"language-text\">tree</code> 를 다운받았다. <code class=\"language-text\">tree</code> 는 CLI 환경에서 디렉터리 구조를 표시해주는 패키지로 MacOS나 Ubuntu의 경우 기본설치가 되어있지 않아 별도로 다운받아야 한다.</p>\n<br/>\n<h1 id=\"1-설치-방법\" style=\"position:relative;\"><a href=\"#1-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95\" aria-label=\"1 설치 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 설치 방법</h1>\n<p>macOS의 경우 패키지 매니저인 <code class=\"language-text\">brew</code>로 간단하게 <code class=\"language-text\">tree</code>를 다운로드 받을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  myfirstsite git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ brew <span class=\"token function\">install</span> tree\nRunning <span class=\"token variable\"><span class=\"token variable\">`</span>brew update --auto-update<span class=\"token variable\">`</span></span><span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Auto-updated Homebrew<span class=\"token operator\">!</span>\nUpdated <span class=\"token number\">2</span> taps <span class=\"token punctuation\">(</span>homebrew/core and homebrew/cask<span class=\"token punctuation\">)</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> New Formulae\naws2-wrap           glib-utils          ocl-icd             treefmt\ncargo-nextest       helix               openvi              ttdl\ncargo-udeps         libbpf              pocl                vile\ngit-codereview      nmrpflash           spr                 vulkan-loader\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> New Casks\nastrofox                   drawpile                   ved\ncalhash                    opencore-patcher\n\nYou have <span class=\"token number\">8</span> outdated formulae installed.\nYou can upgrade them with brew upgrade\nor list them with brew outdated.\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading https://ghcr.io/v2/homebrew/core/tree/manifests/2.0.2\n<span class=\"token comment\">######################################################################## 100.0%</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading https://ghcr.io/v2/homebrew/core/tree/blobs/sha256:ea1c2527bde74\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sh\n<span class=\"token comment\">######################################################################## 100.0%</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Pouring tree--2.0.2.monterey.bottle.tar.gz\n🍺  /usr/local/Cellar/tree/2.0.2: <span class=\"token number\">8</span> files, 151KB\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Running <span class=\"token variable\"><span class=\"token variable\">`</span>brew cleanup tree<span class=\"token variable\">`</span></span><span class=\"token punctuation\">..</span>.\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\nHide these hints with HOMEBREW_NO_ENV_HINTS <span class=\"token punctuation\">(</span>see <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">man</span> brew<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span>.</code></pre></div>\n<p>리눅스의 경우 마찬가지로 <code class=\"language-text\">apt-get</code> 혹은 <code class=\"language-text\">yum</code>과 같은 패키지 매니저를 이용해 다운로드 받을 수 있다.</p>\n<br/>\n<h1 id=\"2-사용-예시\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"2 사용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 사용 예시</h1>\n<p>디렉터리 구조를 파악하고 싶은 디렉터리로 이동해 tree 명령어를 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  myfirstsite git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ tree\n<span class=\"token builtin class-name\">.</span>\n├── manage.py\n└── myfirstsite\n    ├── __init__.py\n    ├── asgi.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py</code></pre></div>\n<br/>","frontmatter":{"date":"August 17, 2022","title":"MacOS/Linux - CLI환경에서 디렉터리 구조 한눈에 보는 방법(tree 명령어 다운로드)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220817-macos-linux-tree/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220818-git-remote-upstream/","nextSlug":"/220817-macos-linux-tree/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}