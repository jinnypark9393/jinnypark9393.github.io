{"componentChunkName":"component---src-templates-blog-template-js","path":"/221209-database-macos-mysql-install/","result":{"data":{"cur":{"id":"f0ad175d-a842-5af1-9f25-921f41c2d1e1","html":"<h1 id=\"1-mysql-설치\" style=\"position:relative;\"><a href=\"#1-mysql-%EC%84%A4%EC%B9%98\" aria-label=\"1 mysql 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. MySQL 설치</h1>\n<p>MacOS에서 MySQL을 설치하기 위해서는 홈브루(Homebrew)를 사용할 수 있다.</p>\n<br/>\n<p>먼저 홈브루를 최신으로 업데이트 해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew update</code></pre></div>\n<br/>\n<p>다음으로는 홈브루를 통해 mysql을 설치해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install mysql</code></pre></div>\n<br/>\n<p><code class=\"language-text\">brew list</code> 명령어를 통해 mysql이 정상적으로 설치 되었는지 확인해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  anyshopping git:(master) ✗ brew list         \n==> Formulae\naws-iam-authenticator   icu4c                   lz4                     protobuf\nca-certificates         libcbor                 mysql                   xz\ngettext                 libevent                openssl@1.1             zlib\ngit                     libfido2                pcre2                   zstd\n\n==> Casks\niterm2</code></pre></div>\n<br/>\n<p>mysql 서버를 아래와 같이 기동해 준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  anyshopping git:(master) ✗ mysql.server start    \nStarting MySQL\n.. SUCCESS!</code></pre></div>\n<br/>\n<p><code class=\"language-text\">mysql_secure_installation</code> 으로 상세 설정을 진행해준다.</p>\n<ul>\n<li>VALIDATE PASSWORD COMPONENT can be used to test passwords and improve security. It checks the strength of password and allows the users to set only those passwords which are secure enough. Would you like to setup VALIDATE PASSWORD component?\n<ul>\n<li>비밀번호 설정 규칙 설정할 것인지 여부. 예를 선택할 경우 3단계 중에서 하나를 선택할 수있다.</li>\n</ul>\n</li>\n<li>By default, a MySQL installation has an anonymous user, allowing anyone to log into MySQL without having to have a user account created for them. This is intended only for testing, and to make the installation go a bit smoother. You should remove them before moving into a production environment. Remove anonymous users?\n<ul>\n<li>익명 사용자 허용을 삭제할 것인지? 예를 선택할 경우 <code class=\"language-text\">-u</code> 옵션을 통해 유저를 지정해야한다.</li>\n</ul>\n</li>\n<li>Normally, root should only be allowed to connect from ‘localhost’. This ensures that someone cannot guess at the root password from the network. Disallow root login remotely?\n<ul>\n<li>원격지에서 root 사용자 로그인금지(localhost만 허용). 예를 선택할 경우 localhost에서의 접속만 허용하게 된다.</li>\n</ul>\n</li>\n<li>By default, MySQL comes with a database named ‘test’ that anyone can access. This is also intended only for testing, and should be removed before moving into a production</li>\n</ul>\n<p>environment. Remove test database and access to it?\n- 자동으로 생성되는 테스트용 데이터베이스를 삭제할지 여부 선택. 예를 선택할 경우 테스트용 데이터베이스가 삭제된 상태로 설정된다.</p>\n<br/>\n<p>생성한 MySQL 서버에 접속해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  anyshopping git:(master) ✗ mysql -p                 \nEnter password: \nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 10\nServer version: 8.0.31 Homebrew\n\nCopyright (c) 2000, 2022, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.</code></pre></div>\n<ul>\n<li>참고: MySQL CLI에서 빠져나오려면 <code class=\"language-text\">exit</code> 을 입력하면 된다.</li>\n</ul>\n<br/>\n<h1 id=\"2-mysql-workbench-설치\" style=\"position:relative;\"><a href=\"#2-mysql-workbench-%EC%84%A4%EC%B9%98\" aria-label=\"2 mysql workbench 설치 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. MySQL Workbench 설치</h1>\n<p>구글에서 MySQL workbench 다운로드로 검색하거나 <a href=\"https://dev.mysql.com/downloads/workbench/\">이 URL</a>을 통해 접속한 뒤, 해당하는 OS를 선택하고, 다운로드 버튼을 클릭한다.</p>\n<br/>\n<p>다음 화면에서는 로그인 하라는 메시지가 뜨는데, 무시하고 스크롤 다운해서 <code class=\"language-text\">No thanks, just start my download.</code> 라는 문구를 클릭해주면 다운로드를 받을 수 있다.</p>\n<br/>\n<p>MacOS의 경우 일반적인 애플리케이션을 설치하듯, 다운로드 받은 dmg파일 오픈하여 Application폴더에 넣어주면 설치가 완료된다.</p>\n<br/>\n<p>MySQL Workbench 앱을 더블 클릭해 오픈하게 되면, 현재 기동중인 MySQL 서비스로 접속할 수 있다(메인 화면에 보이지 않는 경우에는 MySQL이 현재 구동중인지 확인).</p>\n<br/>\n<p>첫 접속 뒤 팝업으로 뜨는 Database creation창에서 database를 생성해도 되고, 추후에 Schema 탭으로 이동한 뒤, Create schema로 새로운 schema를, Create table로 table을 생성할 수 있다.</p>\n<br/>\n<h1 id=\"3-mysql-종료\" style=\"position:relative;\"><a href=\"#3-mysql-%EC%A2%85%EB%A3%8C\" aria-label=\"3 mysql 종료 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. MySQL 종료</h1>\n<p>설치 및 구동 확인이 끝나면 서버를 종료한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">➜  anyshopping git<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ mysql<span class=\"token punctuation\">.</span>server stop \nShutting down MySQL\n<span class=\"token punctuation\">.</span> <span class=\"token constant\">SUCCESS</span><span class=\"token operator\">!</span></code></pre></div>\n<br/>","excerpt":"1. MySQL 설치 MacOS에서 MySQL을 설치하기 위해서는 홈브루(Homebrew)를 사용할 수 있다. 먼저 홈브루를 최신으로 업데이트 해준다. 다음으로는 홈브루를 통해 mysql을 설치해준다.  명령어를 통해 mysql이 정상적으로 설치 되었는지 확인해준다. mysql 서버를 아래와 같이 기동해 준다.  으로 상세 설정을 진행해준다. VALIDATE PASSWORD COMPONENT can be used to test passwords and improve security. It checks the strength of password and allows the users to set only those passwords which are secure enough. Would you like to setup VALIDATE PASSWORD component? 비밀번호 설정 규칙 설정할 것인지 여부. 예를 선택할 경우 3단계 중에서 하나를 선택할 수있다. By default…","frontmatter":{"date":"December 09, 2022","title":"MacOS에서 MySQL Workbench 설치 및 데이터베이스 생성하기","categories":"데이터베이스","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221209-database-macos-mysql-install/"}},"next":{"id":"3209300a-206d-55f9-acb9-a3d29bb67798","html":"<h1 id=\"1-배경상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD%EC%83%81%ED%99%A9\" aria-label=\"1 배경상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경상황</h1>\n<p>급하게 FE+BE가 간단하게 구성된 데모 사이트를 만들어야 할 일이 생겨서 Node.js + Express 프레임워크로 웹사이트를 작성하던 도중 환경 변수 파일 분리가 필요해서 기록용으로 남겨본다.</p>\n<br/>\n<p>이전에 <a href=\"https://jinnypark9393.github.io/220725-programming-python-django-tutorial2%20copy/\">Django 의 SECRET_KEY를 별도 파일로 분리 저장하는 포스팅</a>을 올린 적이 있는데, 이번에는 해당 포스팅의 Node.js 버전이라고 보면 될 듯.</p>\n<br/>\n<h1 id=\"2-nodejs-프로젝트에서-환경변수-관리하기파일로-분리\" style=\"position:relative;\"><a href=\"#2-nodejs-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C-%ED%99%98%EA%B2%BD%EB%B3%80%EC%88%98-%EA%B4%80%EB%A6%AC%ED%95%98%EA%B8%B0%ED%8C%8C%EC%9D%BC%EB%A1%9C-%EB%B6%84%EB%A6%AC\" aria-label=\"2 nodejs 프로젝트에서 환경변수 관리하기파일로 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Node.js 프로젝트에서 환경변수 관리하기(파일로 분리)</h1>\n<ul>\n<li>server.js 코드</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> db<span class=\"token punctuation\">;</span>\nMongoClient<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb+srv://blablabla'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> client</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Example1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8080</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listening on 8080'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>여기서 포트번호, DB접속 문자열은 환경에 따라 가변적인 변수, 즉 <strong>환경변수(environment variable)</strong></p>\n<p>⇒ 다른 개발 환경에서는 수정이 필요할 수 있음 = <strong>한 곳에 모아서 관리하자!</strong></p>\n<ul>\n<li>다른 컴퓨터에서 다른 포트 사용</li>\n<li>DB 이사가서 DB 접속 문자열 면경</li>\n<li>내가 만든 코드를 팀원과 공유할 때 유출 위험</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>환경 변수 사용을 위한 라이브러리 설치</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">➜  todoapp git:(master) ✗ npm install dotenv                                 \n\nadded 1 package, and audited 179 packages in 636ms\n\n14 packages are looking for funding\n  run `npm fund` for details\n\nfound 0 vulnerabilities</code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>server.js 파일 상단에 아래 코드 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token comment\">// 환경변수 설정용 라이브러리 설정</span>\n<span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dotenv'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>server.js와 같은 경로에 .env파일 추가 &#x26; 환경변수들을 적고 저장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">PORT=8081\nDB_URL=\"mongodb+srv://blablabla\"</code></pre></div>\n<ul>\n<li>변수 이름은 일반적으로 대문자료 표기한다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>환경변수를 server.js에 불러오기\n<ul>\n<li>\n<p>process.env.변수명 형식으로 불러오면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> db<span class=\"token punctuation\">;</span>\nMongoClient<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>procss<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">DB_URL</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> client</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n  db <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">db</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Example1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  app<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>procss<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'listening on 8080'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<br/>","frontmatter":{"date":"December 05, 2022","title":"Node.js 프로젝트에서 환경변수 관리하기(파일로 분리)","categories":"프로그래밍","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221205-progrmming-javascript-nodejs-env/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/221209-database-macos-mysql-install/","nextSlug":"/221205-progrmming-javascript-nodejs-env/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}