{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/프로그래밍","result":{"pageContext":{"currentCategory":"프로그래밍","categories":["All","프로그래밍","etc","알고리즘","데브옵스","OSSCA","CS"],"edges":[{"node":{"id":"6514388b-e82f-5341-ba99-d06b880055f1","excerpt":"1. 배경상황 현재 프로젝트가 Java로 구성되어있어 자바 메모리 구조에 대해서는 이전에 개인적으로 공부한 적이 있다. 하지만 최근 새로 착수한 프로젝트가 static의 과도한 사용으로 메모리 이슈가 발생하고 있는 프로젝트라 static의 개념을 새로 학습하고, Java 메모리 구조에 대해 다시 정리해보려 한다. 2. Static(정적)이란? 영문을 그대로 직역하면 고정된이라는 뜻을 가지고 있는데, 실제로 static은 프로그램 시작 시 메모리에 고정적으로 할당되어, 프로그램이 종료될 때 해제된다.  이라는 키워드를 사용해 정적 변수(static variable) 과 정적 메서드(static method) 를 생성할 수 있다. 이 둘을 합쳐 정적 멤버(static member), 혹은 클래스 멤버(class member) 라고 부른다. 이렇게 생성된 정적 변수, 정적 메서드의 경우 클래스가 메모리에 올라갈 때 자동으로 생성된다. 즉, 인스턴스(객체) 생성 없이 바로 사용이 가능하다…","fields":{"slug":"/220808-programming-java-static/"},"frontmatter":{"categories":"프로그래밍","title":"Java의 static(정적)이란?","date":"August 08, 2022"}},"next":{"fields":{"slug":"/220808-etc-renew-blog/"}},"previous":null},{"node":{"id":"b7b70ea3-8872-5f44-b49c-770f60abbd46","excerpt":"1. Django 관리자 소개 💡Django 철학 직원 혹은 고객이 컨텐츠를 수정하기 위한 관리자 사이트를 생성하는 것은 지루한 작업이다. 따라서 Django에서는 모델에 대한 관리용 인터페이스를 자동으로 생성한다. Django는 Lawrence Journal-World 신문사의 프로그래머가 처음 개발했다. 이런 태생적 이유로 “컨텐츠 게시자”와 “공개” 사이트의 구분이 명확하다. 사이트 관리자는 뉴스 기사, 사건, 스포츠 경기 결과 등을 시스템에 추가한다. 이렇게 추가한 컨텐츠는 “공개”사이트에 노출된다. Django는 사이트 관리자가 컨텐츠를 편집하는 통합 인터페이스를 생성하는 문제를 해결한다. 관리자 사이트는 사이트 방문자가 아닌 사이트 관리자를 위한 것이다.  1. 관리자 생성하기 관리자 사이트에 로그인 할 수 있는 사용자를 생성한다.  2. 개발 서버 시작 관리자 사이트는 기본으로 활성화 되어 있다. 서버가 동작하고 있지 않다면 다음 명령으로 실행해준다. 웹 브라우저를 열…","fields":{"slug":"/220727-programming-python-django-tutorial3/"},"frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(3)관리자 및 관리자 사이트 생성","date":"July 27, 2022"}},"next":{"fields":{"slug":"/220726-programming-python-django-tutorial2/"}},"previous":{"fields":{"slug":"/220728-etc-amazon-6pager/"}}},{"node":{"id":"24e06a85-7e42-51a2-94ac-ed60de158d13","excerpt":"1. 데이터베이스 설치 settings.py를 열어보자. settings.py는 Django 설정을 모듈 변수로 표현한 보통의 Python 모듈이다. Django에서는 기본적으로 SQLite를 사용하도록 구성되어있으며(Python에서 기본으로 제공되어 별도 설치 불필요), 이번 실습에서는 SQLite를 활용하여 데이터베이스를 구성하도록 한다. 만약 다른 데이터베이스를 사용하고 싶은 경우 DATABASES의 키 값을 적절히 변경해준다(상세 설명은 공식문서를 참고한다).  1. settings.py설정 settings.py의 TIME_ZONE 설정값을 수정해 현재 작업하고 있는 시간대를 맞춰준다. settings.py의 INSTALLED_APPS는 현재 Django 인스턴스에서 활성화된 모든 Django 어플리케이션들의 이름이 들어있다. 앱들은 다수의 프로젝트에서 사용될 수 있고, 다른 프로젝트에서 쉽게 사용될 수 있도록 패키징하여 배포할 수 있다. INSTALLED_APPS에 기본적…","fields":{"slug":"/220726-programming-python-django-tutorial2/"},"frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(2)데이터베이스 설치, API 실습","date":"July 26, 2022"}},"next":{"fields":{"slug":"/220725-programming-python-django-tutorial2 copy/"}},"previous":{"fields":{"slug":"/220727-programming-python-django-tutorial3/"}}},{"node":{"id":"0bb5b921-258d-515f-8368-c5cbfb938460","excerpt":"1. 배경 상황 Django 실습 내용을 Github 저장소에 업로드해서 소스코드를 관리하려고 새롭게 깃허브 저장소를 생성하고 코드를 올렸었다. 그런데 올리자마자 메일 알람이 울리는 것;;; 내용을 확인했더니 GitGuardian이라는 곳에서 온 “Django Secret Key exposed on GitHub”이라는 보안 알람 메일이었다. 깜짝 놀라서 소스코드를 뜯어봤더니 settings.py에 SECRET_KEY가 대놓고 들어있어서 얼른 github에 생성했던 저장소를 삭제했다(실습 시작한지 진짜 얼마 안되어서 다행이었음). 이 SECRET_KEY는 Django의 보안 관련 기능에 사용하는 값으로, 다음과 같은 경우에 사용된다. 가 아닌 다른 세션 백엔드를 사용하는 경우 혹은 기본 get_session_auth_hash()를 사용하는 모든 sessions. CookieStorage 혹은 FallbackStorage를 사용하는 모든 messages. 모든 PasswordReset…","fields":{"slug":"/220725-programming-python-django-tutorial2 copy/"},"frontmatter":{"categories":"프로그래밍","title":"Python Django settings.py의 SECRET_KEY 변경 및 분리하기","date":"July 25, 2022"}},"next":{"fields":{"slug":"/220724-programming-python-django-tutorial1/"}},"previous":{"fields":{"slug":"/220726-programming-python-django-tutorial2/"}}},{"node":{"id":"6065efab-2d62-5dc8-bd37-551b0b37291c","excerpt":"“한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의의 Django 파트를 수강하고 있는데, 생각보다 설명이 생략된 부분이 많아 코드 따라치기만 하게 되는듯해 Django 공식문서의 튜토리얼을 따라해 이해도를 높인 다음 다시 들으려한다. 이 글은 Django 문서의 첫 번째 장고 앱 작성하기 튜토리얼을 참고해 실습한 내용을 정리한 것이다.  1. 산출물 Polls라는 이름의 간단한 설문조사 애플리케이션을 제작 Public: 사람들이 설문 내용을 보고 직접 투표할 수 있는 개방된 사이트 Private: 관리자가 설문을 추가, 변경, 삭제할 수 있는 관리용 사이트  2. 사전 작업  를 설치한다(Django 4.0버전 기준. Python 3.8이상 버전 설치 권장). Django가 설치가 잘 되었는지 확인하기 위해 아래의 명령어를 실행한다. 설치가 되지 않았다면 “No module named django”와 같은 에러가 발생한다.  3. 프로젝트 생성 프로젝트를 저장할 …","fields":{"slug":"/220724-programming-python-django-tutorial1/"},"frontmatter":{"categories":"프로그래밍","title":"Python Django 튜토리얼(1)프로젝트/앱 생성하고 view 작성하기","date":"July 24, 2022"}},"next":{"fields":{"slug":"/220723-git-cannot-apply-gitignore/"}},"previous":{"fields":{"slug":"/220725-programming-python-django-tutorial2 copy/"}}},{"node":{"id":"a089eff5-0daa-5948-8e22-aeae309fa73f","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :) 1. UserData 추가 Django는 프로젝트 생성시에 user 데이터베이스를 생성하기때문에 User 데이터베이스를 수정하기는 쉽지 않다. AbstractUser: 현재 사용하고 있는 유저를 추상화해서 PayPlan을 넣겠다라는 것. 두 가지 방법이 있음 class Users → 한 테이블에 쌓임 class UserDetail → 두 테이블에 쌓임 AbstrctUser로 유저에 추가정보를 넣게 될 경우 settings.py에서 파일 내용을 아래와 같이 수정해야한다.  위에  을 추가해 shortener의 Users 클래스를 사용할 것을 명시해주어야 한다(인증을 위해서 어떤 데이터/테이블을 사용할 것인지를 지정해주는 것). 패스트캠퍼스 강의 등록하기: https://bit.ly/3L3avNW #패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시…","fields":{"slug":"/220722-python-day71/"},"frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 71일차","date":"July 22, 2022"}},"next":{"fields":{"slug":"/220721-python-day70/"}},"previous":{"fields":{"slug":"/220723-git-cannot-apply-gitignore/"}}},{"node":{"id":"35042548-9482-5c69-bc87-3c3fe48c75c3","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :)  04. Django Database Modeling (2) 1. Database Modeling 지난 시간에 이어 PayPlan에 대해 모델링을 진행할 것 class로 models라는 모듈의 Model을 상속받아온다. 컬럼 이름 및 데이터 타입 정의(예: name → 컬럼 이름, CharField → 데이터 타입) price의 경우 미국 등의 경우 integer를 사용할 수 없으나 한국 원화의 경우 integer를 사용해도 무방. 실제로 코드에 적용해보자. SHRINKERS > shortner > models.py 파일을 아래와 같이 수정해준다. class를 추가해 준 뒤에는 잠시 주석처리 해둔다. Terminal > New Terminal로 새 터미널 창을 연 다음 아래 명령어를 실행해준다. 위 명령어를 통해 Django 프레임워크가 필요로 하는 데이터 베이스를 생성한…","fields":{"slug":"/220721-python-day70/"},"frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 70일차","date":"July 21, 2022"}},"next":{"fields":{"slug":"/220720-python-day69/"}},"previous":{"fields":{"slug":"/220722-python-day71/"}}},{"node":{"id":"b6772987-26b2-56e6-95a5-794630d9b30b","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :)  03. Django Database Modeling(1) 1. DB 모델링이란? 어떤 Item에 속성데이터(의 포맷)를 사전에 정의하는 것 예: Jobs 이라는 Table에 각 Job의 정보를 정의 산업 연봉 근무지 수정일 생성일 2. Django Modeling Django에서 id는 기본 값(Primary Key: PK) 정의하지 않아도 자동 정의 (Django의 특수 기능) id외의 다른 컬럼을 PK로 사용하고 싶다면 primary key = true 해서 컬럼을 생성 & id 컬럼 생성되지 않음 외래 키(Foreign Key)를 사용하면 뒤에 xxxx_id를 자동 생성 예: Job에 위치를 추가하고 싶은데 위치가 다른 테이블에 있는 경우, location으로 정의해주면 location_id로 데이터 컬럼이 생성됨 3. Django DB 컬럼 타입 Django 3.…","fields":{"slug":"/220720-python-day69/"},"frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 69일차","date":"July 20, 2022"}},"next":{"fields":{"slug":"/220720-git-gitignor/"}},"previous":{"fields":{"slug":"/220721-python-day70/"}}},{"node":{"id":"ab3fa962-b120-5ff3-8b53-57c5b5bf98a0","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :) 02. Django 프로젝트 시작 1. PEP8 Coding Convention (1) Coding Convention 여러 사람이 협업을 해도 모두가 읽기 편한 코드를 작성하기 위한 기본 규칙 한 줄의 문자열은 79자 DocString은 72자 snake_case(소문자_소문자) 사용 모듈 레벨 상수는 모두 대문자 ClassName은 Caplitalized Word(단어의 앞 철자만 대문자) 한줄로 된 if, try … except, for, while 구문은 사용하지 않는다. 하지만 Local Rule이 더 중요하다. (2) Django 에서의 Coding Convention 한 줄의 문자열은 119자 추천 DocString 은 72자  2. Zen of Python (1) PEP20 - Zen of Python Beautiful is better than ugly. …","fields":{"slug":"/220719-python-day68/"},"frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 68일차","date":"July 19, 2022"}},"next":{"fields":{"slug":"/220718-python-makemigration-error/"}},"previous":{"fields":{"slug":"/220720-git-gitignor/"}}},{"node":{"id":"d75909d8-b20a-524a-ae6a-048d41f54980","excerpt":"1. 배경 상황 패스트캠퍼스의 한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online 강의 중 Django 파트의 데이터베이스 모델 생성 실습을 따라하다가 아래와 같은 에러가 발생했다.  2. ‘No changes detected’ 에러 해결 방법 구글링을 해보니  뒤에 앱 이름을 명시해주면 해결 된다고 한다. 강의에서는 따로 앱 이름이 명시되지 않아 다른 사람들이 위 명령어를 성공했을 때 터미널에 발생하는 메시지와, 강의에서 보이는 명령어 성공 메시지를 대조해서 아래와 같이 앱 이름을 추측하여 명령어를 다시 실행해보았다. 이제는  라는 에러가 발생한다.  3. ‘No installed app with label’ 에러 해결 방법 에러메시지의 뜻을 풀이하면, ‘설치된 앱 중에 ‘shortener’라는 레이블을 달고 있는 앱이 없다’ 라는 뜻이다. 그렇다면 설치된 앱에 대한 정보는 어디에 저장되어있을까?  디렉터리의  섹션을 참고하면 된다. 내 프로젝트에서 해당 섹션에 적혀져있는…","fields":{"slug":"/220718-python-makemigration-error/"},"frontmatter":{"categories":"프로그래밍","title":"Python Django makemigrations No changes detected & No installed app with label 원인 및 해결","date":"July 19, 2022"}},"next":{"fields":{"slug":"/220718-python-day67/"}},"previous":{"fields":{"slug":"/220719-python-day68/"}}},{"node":{"id":"a63bfc26-7eaf-55c2-a612-a0d3f5c1259d","excerpt":"지난 달 말 쯤 패스트캠퍼스에서 진행하던 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 캐시백 챌린지가 끝났다. 하지만 강의는 아직 들을 것들이 많이 남아서…^^ 캐시백 리워드는 없지만 셀프(?)로 1일 1포스팅 챌린지를 재개해보려 한다.  01. Django 웹 프레임워크의 이해 1. Why Django? 파이썬 웹 프레임워크 순위 2위(1위 Flask, 3위 FastAPI) Django의 철학 Batteries Included: 필요한 것이 무엇이건 Django안에, 커뮤니티 안에 있다는 뜻 다양한 사용이 가능: 문서, SNS, 뉴스, 블로그 등 안전하다: ID/PW, 세션 관리, XSS, SQL Injection, Click Hijacking Shared-nothing Architecture: 확장성(의존성이 없음) ex. Very Maintainable - DRY(Don’t Repeat Yourself) - 불필요한 중복 코드 제거  2. Referenc…","fields":{"slug":"/220718-python-day67/"},"frontmatter":{"categories":"프로그래밍","title":"Python 패스트캠퍼스 챌린지 67일차","date":"July 18, 2022"}},"next":{"fields":{"slug":"/220717-ossca-kubernetes-docs-localization2/"}},"previous":{"fields":{"slug":"/220718-python-makemigration-error/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}