{"componentChunkName":"component---src-templates-blog-template-js","path":"/220720-python-day69/","result":{"data":{"cur":{"id":"b6772987-26b2-56e6-95a5-794630d9b30b","html":"<p>오늘도 셀프 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 강의 1일 1강 포스팅 챌린지 :)</p>\n<p><br/><br/></p>\n<h1 id=\"03-django-database-modeling1\" style=\"position:relative;\"><a href=\"#03-django-database-modeling1\" aria-label=\"03 django database modeling1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. Django Database Modeling(1)</h1>\n<h2 id=\"1-db-모델링이란\" style=\"position:relative;\"><a href=\"#1-db-%EB%AA%A8%EB%8D%B8%EB%A7%81%EC%9D%B4%EB%9E%80\" aria-label=\"1 db 모델링이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. DB 모델링이란?</h2>\n<ul>\n<li>어떤 Item에 속성데이터(의 포맷)를 사전에 정의하는 것</li>\n<li>예: Jobs 이라는 Table에 각 Job의 정보를 정의\n<ul>\n<li>산업</li>\n<li>연봉</li>\n<li>근무지</li>\n<li>수정일</li>\n<li>생성일</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"2-django-modeling\" style=\"position:relative;\"><a href=\"#2-django-modeling\" aria-label=\"2 django modeling permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Django Modeling</h2>\n<ul>\n<li>Django에서 id는 기본 값(Primary Key: PK) 정의하지 않아도 자동 정의 <strong>(Django의 특수 기능)</strong>\n<ul>\n<li>id외의 다른 컬럼을 PK로 사용하고 싶다면 primary key = true 해서 컬럼을 생성 &#x26; id 컬럼 생성되지 않음</li>\n</ul>\n</li>\n<li>외래 키(Foreign Key)를 사용하면 뒤에 xxxx_id를 자동 생성\n<ul>\n<li>예: Job에 위치를 추가하고 싶은데 위치가 다른 테이블에 있는 경우, location으로 정의해주면 location_id로 데이터 컬럼이 생성됨</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"3-django-db-컬럼-타입\" style=\"position:relative;\"><a href=\"#3-django-db-%EC%BB%AC%EB%9F%BC-%ED%83%80%EC%9E%85\" aria-label=\"3 django db 컬럼 타입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Django DB 컬럼 타입</h2>\n<ul>\n<li>\n<p>Django 3.0으로 넘어오면서 새롭게 생긴 컬럼 타입 등 필요한 컬럼들을 정리한 것.</p>\n</li>\n<li>\n<p>CharField (길이가 정해진 문자열)</p>\n<ul>\n<li>길이가 정해진 문자열은 스토리지 / 최적화가 비교적 편함</li>\n<li>길이를 정해주어야하는 필드 → CharField사용 (아닐 경우 TextField 사용)</li>\n</ul>\n</li>\n<li>\n<p>IntegerField (-2147483648 ~ 2147483647)</p>\n</li>\n<li>\n<p>PositiveIntegerField</p>\n<ul>\n<li>양수만 사용할 때</li>\n</ul>\n</li>\n<li>\n<p>BigIntegerField(-9223372036854775808 ~ 9223372036854775807)</p>\n<ul>\n<li>새로운 필드(새로운 프로젝트를 생성하면 이 필드가 PK)</li>\n</ul>\n</li>\n<li>\n<p>PositiveBigIntegerField</p>\n</li>\n<li>\n<p>DataField(날짜)</p>\n</li>\n<li>\n<p>DatetimeField(날짜 + 시간)</p>\n</li>\n<li>\n<p>BooleanField(True/False)</p>\n<ul>\n<li>0(false) / 1(true)</li>\n</ul>\n</li>\n<li>\n<p>TextField(길이가 정해지지 않은 문자열)</p>\n<p>⇒ 블로그 글, 상품설명 등 길이가 얼마가 될 지 모르는 문자열 저장에 사용</p>\n</li>\n<li>\n<p>EmailField(이메일 포맷)</p>\n</li>\n<li>\n<p>JSONField(JSON 포맷)</p>\n</li>\n<li>\n<p>AutoField(Auto Increment 필드 withIntegerField)</p>\n<ul>\n<li>들어가는 순서에 따라 숫자가 늘어난다.</li>\n</ul>\n</li>\n<li>\n<p>BigAutoField(Auto Increment 필드 withIntegerField, BigIntegerField)</p>\n</li>\n<li>\n<p>ForeignKey (다른 테이블 PK 참조필드)</p>\n</li>\n</ul>\n<h2 id=\"4-다음-시간-예습\" style=\"position:relative;\"><a href=\"#4-%EB%8B%A4%EC%9D%8C-%EC%8B%9C%EA%B0%84-%EC%98%88%EC%8A%B5\" aria-label=\"4 다음 시간 예습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 다음 시간 예습</h2>\n<p>Django를 처음에 마이그레이션하게 되면 자동으로 유저 테이블을 생성한다.</p>\n<table>\n<thead>\n<tr>\n<th>컬럼(Users Table)</th>\n<th>데이터</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pay_plan</td>\n<td>Foreign Key</td>\n</tr>\n</tbody>\n</table>\n<p>프로젝트를 위해 새로운 테이블을 생성하였다.</p>\n<table>\n<thead>\n<tr>\n<th>컬럼(PayPlan)</th>\n<th>데이터</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>Big Integer</td>\n</tr>\n<tr>\n<td>name</td>\n<td>CharField</td>\n</tr>\n<tr>\n<td>price</td>\n<td>IntegerField</td>\n</tr>\n<tr>\n<td>updated_at</td>\n<td>DateTimeField</td>\n</tr>\n<tr>\n<td>created_at</td>\n<td>DateTimeField</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>\n<p><br/><br/></p>","excerpt":"오늘도 셀프 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 강의 1일 1강 포스팅 챌린지 :)  03. Django Database Modeling(1) 1. DB 모델링이란? 어떤 Item에 속성데이터(의 포맷)를 사전에 정의하는 것 예: Jobs 이라는 Table에 각 Job의 정보를 정의 산업 연봉 근무지 수정일 생성일 2. Django Modeling Django에서 id는 기본 값(Primary Key: PK) 정의하지 않아도 자동 정의 (Django의 특수 기능) id외의 다른 컬럼을 PK로 사용하고 싶다면 primary key = true 해서 컬럼을 생성 & id 컬럼 생성되지 않음 외래 키(Foreign Key)를 사용하면 뒤에 xxxx_id를 자동 생성 예: Job에 위치를 추가하고 싶은데 위치가 다른 테이블에 있는 경우, location으로 정의해주면 location_id로 데이터 컬럼이 생성됨 3. Django DB 컬럼 타입 Django 3.…","frontmatter":{"date":"July 20, 2022","title":"Python 패스트캠퍼스 챌린지 69일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220720-python-day69/"}},"next":{"id":"d75909d8-b20a-524a-ae6a-048d41f54980","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>패스트캠퍼스의 한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online 강의 중 Django 파트의 데이터베이스 모델 생성 실습을 따라하다가 아래와 같은 에러가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>venv<span class=\"token punctuation\">)</span> ➜  shrinkers git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ python manage<span class=\"token punctuation\">.</span>py makemigrations\nNo changes detected</code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"2-no-changes-detected-에러-해결-방법\" style=\"position:relative;\"><a href=\"#2-no-changes-detected-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 no changes detected 에러 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <strong>‘No changes detected’</strong> 에러 해결 방법</h1>\n<p>구글링을 해보니 <code class=\"language-text\">makemigrations</code> 뒤에 앱 이름을 명시해주면 해결 된다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">python manage<span class=\"token punctuation\">.</span>py makemigrations <span class=\"token operator\">&lt;</span>해당 앱 이름<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<p>강의에서는 따로 앱 이름이 명시되지 않아 다른 사람들이 위 명령어를 성공했을 때 터미널에 발생하는 메시지와, 강의에서 보이는 명령어 성공 메시지를 대조해서 아래와 같이 앱 이름을 추측하여 명령어를 다시 실행해보았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>venv<span class=\"token punctuation\">)</span> ➜  shrinkers git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ python manage<span class=\"token punctuation\">.</span>py makemigrations short\nener\nNo installed app <span class=\"token keyword\">with</span> label <span class=\"token string\">'shortener'</span><span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<p>이제는 <code class=\"language-text\">No installed app with label ‘shortener'</code> 라는 에러가 발생한다.</p>\n<p><br/><br/></p>\n<h1 id=\"3-no-installed-app-with-label-에러-해결-방법\" style=\"position:relative;\"><a href=\"#3-no-installed-app-with-label-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"3 no installed app with label 에러 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. <strong>‘No installed app with label’</strong> 에러 해결 방법</h1>\n<p>에러메시지의 뜻을 풀이하면, ‘<strong>설치된 앱 중에 ‘shortener’라는 레이블을 달고 있는 앱이 없다</strong>’ 라는 뜻이다.</p>\n<br/>\n<p>그렇다면 설치된 앱에 대한 정보는 어디에 저장되어있을까?</p>\n<br/>\n<p><code class=\"language-text\">settings.py</code> 디렉터리의 <code class=\"language-text\">INSTALLED_APPS = []</code> 섹션을 참고하면 된다. 내 프로젝트에서 해당 섹션에 적혀져있는 내용을 보니, ‘shortener’는 등록되어있지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Application definition</span>\n\nINSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<p>그래서 ‘shortener’라는 앱을 새로 등록해주고,</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># Application definition</span>\n\nINSTALLED_APPS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'django.contrib.admin'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.auth'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.contenttypes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.sessions'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'django.contrib.staticfiles'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'shortener'</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<p>명령어를 다시 시작하니 데이터베이스 모델이 잘 생성된 것을 확인할 수 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>venv<span class=\"token punctuation\">)</span> ➜  shrinkers git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ python manage<span class=\"token punctuation\">.</span>py makemigrations shortener  \nMigrations <span class=\"token keyword\">for</span> <span class=\"token string\">'shortener'</span><span class=\"token punctuation\">:</span>\n  shortener<span class=\"token operator\">/</span>migrations<span class=\"token operator\">/</span>0001_initial<span class=\"token punctuation\">.</span>py\n    <span class=\"token operator\">-</span> Create model PayPlan</code></pre></div>\n<p><br/><br/></p>","frontmatter":{"date":"July 19, 2022","title":"Python Django makemigrations No changes detected & No installed app with label 원인 및 해결","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220718-python-makemigration-error/"}},"prev":{"id":"98168d94-0dc3-52d4-8394-c0fdd6d28044","html":"<p><code class=\"language-text\">.gitignore</code> 는 지금까지 업무에서 종종 사용하고 있었는데, 집에서 Django 실습 진행하다가 <code class=\"language-text\">.gitignore</code>를 사용할 일이 생겨 다시금 개념과 사용 방법을 정리해두려 한다.</p>\n<p><br/><br/></p>\n<h1 id=\"1-gitignore란\" style=\"position:relative;\"><a href=\"#1-gitignore%EB%9E%80\" aria-label=\"1 gitignore란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. .gitignore란?</h1>\n<p>프로젝트 내에 remote 저장소에 올리고 싶지 않은 파일이 있을 경우 Git에서 제외할 수 있는 설정 파일이다.</p>\n<br/>\n<p>일반적으로 IDE tool과 관련된 설정파일(예를 들면 이클립스의 <code class=\"language-text\">.classpath</code> 나 <code class=\"language-text\">.project</code> 파일), 백업파일이나 로그, 컴파일/빌드가 완료된 파일, 시크릿 정보(AWS root 계정 접속 key나 Django secret key 등)을 제외할 때 사용한다.</p>\n<p><br/><br/></p>\n<h1 id=\"2-gitignore-사용법\" style=\"position:relative;\"><a href=\"#2-gitignore-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"2 gitignore 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. .gitignore 사용법</h1>\n<ul>\n<li>.gitignore 파일은 항상 최상위 디렉터리에 존재해야 한다고 한다.</li>\n<li>.gitignore 파일을 생성 후, 제외할 파일명을 지정해주면 되는데, 여러 옵션을 사용할 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token comment\"># : 주석</span>\n\n<span class=\"token comment\"># a.txt 파일을 제외</span>\na.txt\n\n<span class=\"token comment\"># .txt 확장자를 가진 모든 파일 제외</span>\n*.txt\n\n<span class=\"token comment\"># .txt 확장자 파일을 제외하나, 이 중 b.txt 파일만 포함하고 싶을 경우</span>\n<span class=\"token operator\">!</span>b.txt\n\n<span class=\"token comment\"># 현재 디렉터리에 있는 c.txt 파일만 제외(하위 폴더 내의 c.txt 파일은 제외하지 않음)</span>\n/c.txt\n\n<span class=\"token comment\"># build 디렉터리 내의 모든 파일 제외</span>\nbuild/\n\n<span class=\"token comment\"># doc/d.txt 파일만 제외 (doc/sub/e.txt는 제외하지 않음)</span>\ndoc/*.txt\n\n<span class=\"token comment\"># doc 디렉터리 내의 모든 .txt 파일 제외</span>\ndoc/**/*.txt\n</code></pre></div>\n<ul>\n<li>위와 같이 제외할 파일을 지정한 뒤에는 GitHub과 같은 원격 저장소에 소스코드와 함께 <code class=\"language-text\">.gitignore</code> 를 push 해주면 적용된다.</li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"July 20, 2022","title":"Git의 .gitignore란? (+사용방법)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220720-git-gitignor/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220720-python-day69/","nextSlug":"/220718-python-makemigration-error/","prevSlug":"/220720-git-gitignor/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}