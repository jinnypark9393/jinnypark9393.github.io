{"componentChunkName":"component---src-templates-blog-template-js","path":"/220518-kubernetes-cka-mock-exam-2-01/","result":{"data":{"cur":{"id":"8098b243-f634-54ab-8bc3-93d95c082cf8","html":"<p>모의고사 2.1 - ETCD 백업 파일 생성하기</p>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Take a backup of the etcd cluster and save it to <code class=\"language-text\">/opt/etcd-backup.db</code>.</p>\n<ul>\n<li>Backup Completed</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행했다면 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-etcd-백업파일-생성\" style=\"position:relative;\"><a href=\"#2-etcd-%EB%B0%B1%EC%97%85%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"2 etcd 백업파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ETCD 백업파일 생성</h3>\n<ul>\n<li>get 명령어로 etcd 파드 이름을 찾는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -n kube-system \nNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-74ff55c5b-2cf6t                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\ncoredns-74ff55c5b-vcq46                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-controller-manager-controlplane   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-proxy-9wlvh                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-proxy-rmcf6                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nweave-net-h74h2                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">1</span>          17m\nweave-net-v77kn                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          17m</code></pre></div>\n<br/>\n<ul>\n<li>describe 명령어로 etcd 백업에 필요한 내용들을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod -n kube-system etcd-controlplane \nName:                 etcd-controlplane\nNamespace:            kube-system\nPriority:             <span class=\"token number\">2000001000</span>\nPriority Class Name:  system-node-critical\nNode:                 controlplane/10.33.195.6\nStart Time:           Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:59 +0000\nLabels:               <span class=\"token assign-left variable\">component</span><span class=\"token operator\">=</span>etcd\n                      <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>control-plane\nAnnotations:          kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.33.195.6:2379\n                      kubernetes.io/config.hash: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.mirror: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.seen: <span class=\"token number\">2022</span>-05-17T13:16:57.930616180Z\n                      kubernetes.io/config.source: <span class=\"token function\">file</span>\nStatus:               Running\nIP:                   <span class=\"token number\">10.33</span>.195.6\nIPs:\n  IP:           <span class=\"token number\">10.33</span>.195.6\nControlled By:  Node/controlplane\nContainers:\n  etcd:\n    Container ID:  docker://7c8ad68c241e98453154d077113bec3195c5fdf088fdb0a5383d3dce7d36405a\n    Image:         k8s.gcr.io/etcd:3.4.13-0\n    Image ID:      docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2\n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      etcd\n      --advertise-client-urls<span class=\"token operator\">=</span>https://10.33.195.6:2379\n      --cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt\n      --client-cert-auth<span class=\"token operator\">=</span>true\n      --data-dir<span class=\"token operator\">=</span>/var/lib/etcd\n      --initial-advertise-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --initial-cluster<span class=\"token operator\">=</span>controlplane<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n      --listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n      --listen-metrics-urls<span class=\"token operator\">=</span>http://127.0.0.1:2381\n      --listen-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --name<span class=\"token operator\">=</span>controlplane\n      --peer-cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.crt\n      --peer-client-cert-auth<span class=\"token operator\">=</span>true\n      --peer-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.key\n      --peer-trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n      --snapshot-count<span class=\"token operator\">=</span><span class=\"token number\">10000</span>\n      --trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n    State:          Running\n      Started:      Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:38 +0000\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Requests:\n      cpu:                100m\n      ephemeral-storage:  100Mi\n      memory:             100Mi\n    Liveness:             http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=8</span>\n    Startup:              http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=24</span>\n    Environment:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /etc/kubernetes/pki/etcd from etcd-certs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n      /var/lib/etcd from etcd-data <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  etcd-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/pki/etcd\n    HostPathType:  DirectoryOrCreate\n  etcd-data:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /var/lib/etcd\n    HostPathType:  DirectoryOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:       :NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists\nEvents:\n  Type    Reason  Age   From     Message\n  ----    ------  ----  ----     -------\n  Normal  Pulled  19m   kubelet  Container image <span class=\"token string\">\"k8s.gcr.io/etcd:3.4.13-0\"</span> already present on machine</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>trusted-ca-file<span class=\"token operator\">></span> --cert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>cert-file<span class=\"token operator\">></span> --key<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>key-file<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n  snapshot save <span class=\"token operator\">&lt;</span>backup-file-location<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>etcdctl 실행 시 필요한 파라미터값들을 확인하며 메모로 남겨 놓은 뒤 알맞은 정보를 채워넣는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">--listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n--cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt  \n--key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n--trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\n<span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt --cert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt --key<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key <span class=\"token punctuation\">\\</span>\n  snapshot save /opt/etcd-backup.db</code></pre></div>\n<br/>\n<ul>\n<li>ETCD 백업 파일이 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --write-out<span class=\"token operator\">=</span>table snapshot status /opt/etcd-backup.db\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span>   HASH   <span class=\"token operator\">|</span> REVISION <span class=\"token operator\">|</span> TOTAL KEYS <span class=\"token operator\">|</span> TOTAL SIZE <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span> 6040e181 <span class=\"token operator\">|</span>     <span class=\"token number\">2738</span> <span class=\"token operator\">|</span>       <span class=\"token number\">1027</span> <span class=\"token operator\">|</span>     <span class=\"token number\">2.4</span> MB <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>ETCD backup: <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster\">https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster</a></li>\n</ul>\n<br/>","excerpt":"모의고사 2.1 - ETCD 백업 파일 생성하기 1. 문제 요건 Take a backup of the etcd cluster and save it to . Backup Completed  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행했다면 불필요).  2. ETCD 백업파일 생성 get 명령어로 etcd 파드 이름을 찾는다. describe 명령어로 etcd 백업에 필요한 내용들을 확인한다. etcdctl 실행 시 필요한 파라미터값들을 확인하며 메모로 남겨 놓은 뒤 알맞은 정보를 채워넣는다. ETCD 백업 파일이 잘 생성되었는지 확인한다.  3. 참고 URL ETCD backup: https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.1 - ETCD 백업 파일 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-01/"}},"next":{"id":"b15a0ac5-6518-599b-9787-67e126326af9","html":"<h1 id=\"모의고사-22---emptydir-타입의-볼륨이-마운트-된-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-22---emptydir-%ED%83%80%EC%9E%85%EC%9D%98-%EB%B3%BC%EB%A5%A8%EC%9D%B4-%EB%A7%88%EC%9A%B4%ED%8A%B8-%EB%90%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 22   emptydir 타입의 볼륨이 마운트 된 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.2 - emptyDir 타입의 볼륨이 마운트 된 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a Pod called <code class=\"language-text\">redis-storage</code> with image: <code class=\"language-text\">redis:alpine</code> with a Volume of type <code class=\"language-text\">emptyDir</code> that lasts for the life of the Pod.</p>\n<p>Specs on the below.</p>\n<ul>\n<li>Pod named ‘redis-storage’ created</li>\n<li>Pod ‘redis-storage’ uses Volume type of emptyDir</li>\n<li>Pod ‘redis-storage’ uses volumeMount with mountPath = /data/redis</li>\n</ul>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<h3 id=\"2-emptydir-볼륨이-마운트-된-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-emptydir-%EB%B3%BC%EB%A5%A8%EC%9D%B4-%EB%A7%88%EC%9A%B4%ED%8A%B8-%EB%90%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 emptydir 볼륨이 마운트 된 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. emptyDir 볼륨이 마운트 된 파드(POD) 생성</h3>\n<ul>\n<li>쿠버네티스 공식문서에서 <code class=\"language-text\">emptyDir</code> 키워드로 검색해 생성 예시를 복사해둔다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: test-pd\nspec:\n  containers:\n  - image: k8s.gcr.io/test-webserver\n    name: test-container\n    volumeMounts:\n    - mountPath: /cache\n      name: cache-volume\n  volumes:\n  - name: cache-volume\n    emptyDir: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>vi 에디터로 파일 생성 후 문제 요건에 맞게 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> redis-storage.yaml\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\napiVersion: v1\nkind: Pod\nmetadata:\n  name: redis-storage\nspec:\n  containers:\n  - image: redis:alpine\n    name: redis-storage\n    volumeMounts:\n    - mountPath: /data/redis\n      name: redis-storage\n  volumes:\n  - name: redis-storage\n    emptyDir: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>작성한 매니페스트 파일을 이용해 파드를  생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f redis-storage.yaml \npod/redis-storage created</code></pre></div>\n<ul>\n<li>파드가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods\nNAME            READY   STATUS    RESTARTS   AGE\nredis-storage   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10s</code></pre></div>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>볼륨(Volume): <a href=\"https://kubernetes.io/ko/docs/concepts/storage/volumes/\">https://kubernetes.io/ko/docs/concepts/storage/volumes/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.2 - emptyDir 타입의 볼륨이 마운트 된 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-02/"}},"prev":{"id":"66bbdff0-b9f3-5db3-9c02-87d7b2e769a3","html":"<h1 id=\"모의고사-26---유저-생성-및-권한-부여하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-26---%EC%9C%A0%EC%A0%80-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B6%8C%ED%95%9C-%EB%B6%80%EC%97%AC%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 26   유저 생성 및 권한 부여하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.6 - 유저 생성 및 권한 부여하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a new user called <code class=\"language-text\">john</code>. Grant him access to the cluster. John should have permission to <code class=\"language-text\">create, list, get, update and delete pods</code> in the <code class=\"language-text\">development</code> namespace . The private key exists in the location: <code class=\"language-text\">/root/CKA/john.key</code> and csr at <code class=\"language-text\">/root/CKA/john.csr</code>.</p>\n<p><code class=\"language-text\">Important Note</code>: As of kubernetes 1.19, the CertificateSigningRequest object expects a <code class=\"language-text\">signerName</code>.Please refer the documentation to see an example. The documentation tab is available at the top right of terminal.</p>\n<ul>\n<li>CSR: <code class=\"language-text\">john-developer</code>; Status: Approved</li>\n<li>Role Name: <code class=\"language-text\">developer</code>; namespace: <code class=\"language-text\">development</code>; Resource: <code class=\"language-text\">Pods</code></li>\n<li>Access: User ‘john’ has appropriate permissions</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-유저-생성-및-권한-부여\" style=\"position:relative;\"><a href=\"#2-%EC%9C%A0%EC%A0%80-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EA%B6%8C%ED%95%9C-%EB%B6%80%EC%97%AC\" aria-label=\"2 유저 생성 및 권한 부여 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 유저 생성 및 권한 부여</h3>\n<ul>\n<li>문제에서 제시한 key와 csr 파일이 존재하는지 확인 및 내용 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">cd</span> /root/CKA\n\nroot@controlplane ~/CKA ➜  <span class=\"token function\">ls</span> -al\ntotal <span class=\"token number\">24</span>\ndrwxr-xr-x <span class=\"token number\">2</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">19</span> <span class=\"token number\">20</span>:44 <span class=\"token builtin class-name\">.</span>\ndrwx------ <span class=\"token number\">1</span> root root <span class=\"token number\">4096</span> May <span class=\"token number\">19</span> <span class=\"token number\">20</span>:38 <span class=\"token punctuation\">..</span>\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">883</span> May <span class=\"token number\">19</span> <span class=\"token number\">20</span>:44 john.csr\n-rw------- <span class=\"token number\">1</span> root root <span class=\"token number\">1679</span> May <span class=\"token number\">19</span> <span class=\"token number\">20</span>:44 john.key\n-rw-r--r-- <span class=\"token number\">1</span> root root  <span class=\"token number\">391</span> May <span class=\"token number\">19</span> <span class=\"token number\">20</span>:38 use-pv.yaml\n\nroot@controlplane ~/CKA ➜  <span class=\"token function\">cat</span> john.csr\n-----BEGIN CERTIFICATE REQUEST-----\nMIICVDCCATwCAQAwDzENMAsGA1UEAwwEam9objCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAMmDQp5eduA9I9IRGrqDavutgG6O9oHMdU2vqiiRqBCJjoY4\nLDuhLY7uw47/nwckl0KlJsU10if9RsTd7kzIPVH7/K5Ulq05BIdF8kh87o6wo5fR\nbdh0fEmyBwuYfGmbDhZW2UTyM18NuTbLCgBkncKhjts71PA/1Tb/vBTSwFcmYJda\nj2mImTxnM6s+wfb7pZb2yUA1Xtp/H+Sk0I5c7Z8MpRKLspaR4jw0OUygLoRIxetW\nQ4X9GcZXBAYU5fZLNuL54dP7SEB8ZJZk5V5CtR2fKRWswZon++/IAlKDIW8B8PjK\nzsDPXWYEZYef2/SiidpxaSUAsv0wh36x/dNaf4kCAwEAAaAAMA0GCSqGSIb3DQEB\nCwUAA4IBAQBVeeL9RIh+Ch3SlIUX7sDoooTUrCmVnxA97EN37PzT81x6VWy4FFHM\nLUKrwJJDTmj+d3LZGNFSlI8Xo25tvMYe5Ib9Sfi+MYMRX3N3paM0B1fWabV2bapD\nmY0w2FtptuVWEEwR1PccMWE0ABsFItsjLLuU3FEIIRgg7FgeptOIsd0hiC5fbe+w\ntaY0AWGqVX/LqbgWdF3PB8mxTbw/nDHlNDkf89IUhkQzRKQkPtJL8cxOV1nydWsy\n6pgRelJlLFoGuSkoUEB9gSr997mfsKNWL8qCzO5WutWvxEGBWB56fvBsBxI30w0r\nWrqu8HwJFeCqimgfHRJoqEYcvbO+PUrK\n-----END CERTIFICATE REQUEST-----</code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스 공식문서에서 Certificate Signing Request 문서를 찾는다(Create CertificateSigningRequest참조)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">cat</span> <span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">EOF<span class=\"token bash punctuation\"> <span class=\"token operator\">|</span> kubectl apply -f -</span>\napiVersion: certificates.k8s.io/v1\nkind: CertificateSigningRequest\nmetadata:\n  name: myuser\nspec:\n  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1ZqQ0NBVDRDQVFBd0VURVBNQTBHQTFVRUF3d0dZVzVuWld4aE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRgpBQU9DQVE4QU1JSUJDZ0tDQVFFQTByczhJTHRHdTYxakx2dHhWTTJSVlRWMDNHWlJTWWw0dWluVWo4RElaWjBOCnR2MUZtRVFSd3VoaUZsOFEzcWl0Qm0wMUFSMkNJVXBGd2ZzSjZ4MXF3ckJzVkhZbGlBNVhwRVpZM3ExcGswSDQKM3Z3aGJlK1o2MVNrVHF5SVBYUUwrTWM5T1Nsbm0xb0R2N0NtSkZNMUlMRVI3QTVGZnZKOEdFRjJ6dHBoaUlFMwpub1dtdHNZb3JuT2wzc2lHQ2ZGZzR4Zmd4eW8ybmlneFNVekl1bXNnVm9PM2ttT0x1RVF6cXpkakJ3TFJXbWlECklmMXBMWnoyalVnald4UkhCM1gyWnVVV1d1T09PZnpXM01LaE8ybHEvZi9DdS8wYk83c0x0MCt3U2ZMSU91TFcKcW90blZtRmxMMytqTy82WDNDKzBERHk5aUtwbXJjVDBnWGZLemE1dHJRSURBUUFCb0FBd0RRWUpLb1pJaHZjTgpBUUVMQlFBRGdnRUJBR05WdmVIOGR4ZzNvK21VeVRkbmFjVmQ1N24zSkExdnZEU1JWREkyQTZ1eXN3ZFp1L1BVCkkwZXpZWFV0RVNnSk1IRmQycVVNMjNuNVJsSXJ3R0xuUXFISUh5VStWWHhsdnZsRnpNOVpEWllSTmU3QlJvYXgKQVlEdUI5STZXT3FYbkFvczFqRmxNUG5NbFpqdU5kSGxpT1BjTU1oNndLaTZzZFhpVStHYTJ2RUVLY01jSVUyRgpvU2djUWdMYTk0aEpacGk3ZnNMdm1OQUxoT045UHdNMGM1dVJVejV4T0dGMUtCbWRSeEgvbUNOS2JKYjFRQm1HCkkwYitEUEdaTktXTU0xMzhIQXdoV0tkNjVoVHdYOWl4V3ZHMkh4TG1WQzg0L1BHT0tWQW9FNkpsYWFHdTlQVmkKdjlOSjVaZlZrcXdCd0hKbzZXdk9xVlA3SVFjZmg3d0drWm89Ci0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=\n  signerName: kubernetes.io/kube-apiserver-client\n  expirationSeconds: 86400  # one day\n  usages:\n  - client auth\nEOF</span></code></pre></div>\n<br/>\n<ul>\n<li>문서에서 템플릿을 복사해 csr을 위한 YAML 파일을 작성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> john-csr.yaml\n\n---\n\napiVersion: certificates.k8s.io/v1\nkind: CertificateSigningRequest\nmetadata:\n  name: john-developer\nspec:\n  request: <span class=\"token assign-left variable\">LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlJQ1ZEQ0NBVHdDQVFBd0R6RU5NQXNHQTFVRUF3d0VhbTlvYmpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRApnZ0VQQURDQ0FRb0NnZ0VCQU1tRFFwNWVkdUE5STlJUkdycURhdnV0Z0c2TzlvSE1kVTJ2cWlpUnFCQ0pqb1k0CkxEdWhMWTd1dzQ3L253Y2tsMEtsSnNVMTBpZjlSc1RkN2t6SVBWSDcvSzVVbHEwNUJJZEY4a2g4N282d281ZlIKYmRoMGZFbXlCd3VZZkdtYkRoWlcyVVR5TTE4TnVUYkxDZ0JrbmNLaGp0czcxUEEvMVRiL3ZCVFN3RmNtWUpkYQpqMm1JbVR4bk02cyt3ZmI3cFpiMnlVQTFYdHAvSCtTazBJNWM3WjhNcFJLTHNwYVI0ancwT1V5Z0xvUkl4ZXRXClE0WDlHY1pYQkFZVTVmWkxOdUw1NGRQN1NFQjhaSlprNVY1Q3RSMmZLUldzd1pvbisrL0lBbEtESVc4QjhQaksKenNEUFhXWUVaWWVmMi9TaWlkcHhhU1VBc3Ywd2gzNngvZE5hZjRrQ0F3RUFBYUFBTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQlZlZUw5UkloK0NoM1NsSVVYN3NEb29vVFVyQ21WbnhBOTdFTjM3UHpUODF4NlZXeTRGRkhNCkxVS3J3SkpEVG1qK2QzTFpHTkZTbEk4WG8yNXR2TVllNUliOVNmaStNWU1SWDNOM3BhTTBCMWZXYWJWMmJhcEQKbVkwdzJGdHB0dVZXRUV3UjFQY2NNV0UwQUJzRkl0c2pMTHVVM0ZFSUlSZ2c3RmdlcHRPSXNkMGhpQzVmYmUrdwp0YVkwQVdHcVZYL0xxYmdXZEYzUEI4bXhUYncvbkRIbE5Ea2Y4OUlVaGtRelJLUWtQdEpMOGN4T1YxbnlkV3N5CjZwZ1JlbEpsTEZvR3VTa29VRUI5Z1NyOTk3bWZzS05XTDhxQ3pPNVd1dFd2eEVHQldCNTZmdkJzQnhJMzB3MHIKV3JxdThId0pGZUNxaW1nZkhSSm9xRVljdmJPK1BVcksKLS0tLS1FTkQgQ0VSVElGSUNBVEUgUkVRVUVTVC0tLS0tCg</span><span class=\"token operator\">==</span>\n  signerName: kubernetes.io/kube-apiserver-client\n  usages:\n  - client auth\n</code></pre></div>\n<ul>\n<li>request부분은 쿠버네티스 공식문서의 지시(<code class=\"language-text\">cat myuser.csr | base64 | tr -d \"\\n\"</code>)에 따라 base64로 암호화한 문자열을 복사해 넣는다.</li>\n</ul>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 csr을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k create <span class=\"token operator\">-</span>f john<span class=\"token operator\">-</span>csr<span class=\"token punctuation\">.</span>yaml\ncertificatesigningrequest<span class=\"token punctuation\">.</span>certificates<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>john<span class=\"token operator\">-</span>developer created</code></pre></div>\n<br/>\n<ul>\n<li>생성한 csr을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k <span class=\"token keyword\">get</span> csr\n<span class=\"token constant\">NAME</span>             <span class=\"token constant\">AGE</span>   <span class=\"token constant\">SIGNERNAME</span>                                    <span class=\"token constant\">REQUESTOR</span>                  <span class=\"token constant\">CONDITION</span>\ncsr<span class=\"token operator\">-</span>b25ld        29m   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client<span class=\"token operator\">-</span>kubelet   system<span class=\"token operator\">:</span>node<span class=\"token operator\">:</span>controlplane   Approved<span class=\"token punctuation\">,</span>Issued\ncsr<span class=\"token operator\">-</span>hcbzl        28m   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client<span class=\"token operator\">-</span>kubelet   system<span class=\"token operator\">:</span>bootstrap<span class=\"token operator\">:</span>gcxhir    Approved<span class=\"token punctuation\">,</span>Issued\njohn<span class=\"token operator\">-</span>developer   13s   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client           kubernetes<span class=\"token operator\">-</span>admin           Pending</code></pre></div>\n<br/>\n<ul>\n<li>csr을 승인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k certificate approve john<span class=\"token operator\">-</span>developer\ncertificatesigningrequest<span class=\"token punctuation\">.</span>certificates<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>john<span class=\"token operator\">-</span>developer approved</code></pre></div>\n<br/>\n<ul>\n<li>csr 상태가 Approved로 변경되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k <span class=\"token keyword\">get</span> csr\n<span class=\"token constant\">NAME</span>             <span class=\"token constant\">AGE</span>   <span class=\"token constant\">SIGNERNAME</span>                                    <span class=\"token constant\">REQUESTOR</span>                  <span class=\"token constant\">CONDITION</span>\ncsr<span class=\"token operator\">-</span>b25ld        29m   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client<span class=\"token operator\">-</span>kubelet   system<span class=\"token operator\">:</span>node<span class=\"token operator\">:</span>controlplane   Approved<span class=\"token punctuation\">,</span>Issued\ncsr<span class=\"token operator\">-</span>hcbzl        29m   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client<span class=\"token operator\">-</span>kubelet   system<span class=\"token operator\">:</span>bootstrap<span class=\"token operator\">:</span>gcxhir    Approved<span class=\"token punctuation\">,</span>Issued\njohn<span class=\"token operator\">-</span>developer   36s   kubernetes<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>kube<span class=\"token operator\">-</span>apiserver<span class=\"token operator\">-</span>client           kubernetes<span class=\"token operator\">-</span>admin           Approved<span class=\"token punctuation\">,</span>Issued</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 role을 생성해준다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k create role developer <span class=\"token operator\">--</span>verb<span class=\"token operator\">=</span>create<span class=\"token punctuation\">,</span>get<span class=\"token punctuation\">,</span>list<span class=\"token punctuation\">,</span>update<span class=\"token punctuation\">,</span><span class=\"token keyword\">delete</span> <span class=\"token operator\">--</span>resource<span class=\"token operator\">=</span>pods <span class=\"token operator\">-</span>n development\nrole<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>developer created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 생성한 role을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k <span class=\"token keyword\">get</span> role <span class=\"token operator\">-</span>n development\n<span class=\"token constant\">NAME</span>        <span class=\"token constant\">CREATED</span> <span class=\"token constant\">AT</span>\ndeveloper   <span class=\"token number\">2022</span><span class=\"token operator\">-</span><span class=\"token number\">05</span><span class=\"token operator\">-</span>19T20<span class=\"token operator\">:</span><span class=\"token number\">49</span><span class=\"token operator\">:</span>03Z\n\nroot@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k describe role <span class=\"token operator\">-</span>n development\n<span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>         developer\n<span class=\"token literal-property property\">Labels</span><span class=\"token operator\">:</span>       <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nAnnotations:  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nPolicyRule:\n  Resources  Non-Resource URLs  Resource Names  Verbs\n  ---------  -----------------  --------------  -----\n  pods       []                 []              [create get list update delete]</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">k auth can-i</code> 명령어로 john 유저가 할 수 있는 명령어를 살펴본다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k auth can<span class=\"token operator\">-</span>i <span class=\"token keyword\">get</span> pods <span class=\"token operator\">--</span>namespace<span class=\"token operator\">=</span>development <span class=\"token operator\">--</span><span class=\"token keyword\">as</span> john\nno</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 rolebinding 리소스를 생성해 role과 user를 연결한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ✖ k create rolebinding john<span class=\"token operator\">-</span>developer <span class=\"token operator\">--</span>role<span class=\"token operator\">=</span>developer <span class=\"token operator\">--</span>namespace<span class=\"token operator\">=</span>development <span class=\"token operator\">--</span>user<span class=\"token operator\">=</span>john\nrolebinding<span class=\"token punctuation\">.</span>rbac<span class=\"token punctuation\">.</span>authorization<span class=\"token punctuation\">.</span>k8s<span class=\"token punctuation\">.</span>io<span class=\"token operator\">/</span>john<span class=\"token operator\">-</span>developer created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 생성한 rolebinding을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ➜  k <span class=\"token keyword\">get</span> rolebindings <span class=\"token operator\">--</span>namespace<span class=\"token operator\">=</span>developmentNAME             <span class=\"token constant\">ROLE</span>             <span class=\"token constant\">AGE</span>\njohn<span class=\"token operator\">-</span>developer   Role<span class=\"token operator\">/</span>developer   44s</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">auth</code> 명령어로 john에게 권한이 잘 부여됐는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token constant\">CKA</span> ✖ k auth can<span class=\"token operator\">-</span>i <span class=\"token keyword\">get</span> pods <span class=\"token operator\">-</span>n development <span class=\"token operator\">--</span><span class=\"token keyword\">as</span> john\nyes</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>Certificate Signing Request: <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/\">https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/</a></li>\n<li>Using RBAC: <a href=\"https://kubernetes.io/docs/reference/access-authn-authz/rbac/\">https://kubernetes.io/docs/reference/access-authn-authz/rbac/</a></li>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.6 - 유저 생성 및 권한 부여하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-06/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220518-kubernetes-cka-mock-exam-2-01/","nextSlug":"/220518-kubernetes-cka-mock-exam-2-02/","prevSlug":"/220518-kubernetes-cka-mock-exam-2-06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}