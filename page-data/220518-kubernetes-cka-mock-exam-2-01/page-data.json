{"componentChunkName":"component---src-templates-blog-template-js","path":"/220518-kubernetes-cka-mock-exam-2-01/","result":{"data":{"cur":{"id":"8098b243-f634-54ab-8bc3-93d95c082cf8","html":"<p>모의고사 2.1 - ETCD 백업 파일 생성하기</p>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Take a backup of the etcd cluster and save it to <code class=\"language-text\">/opt/etcd-backup.db</code>.</p>\n<ul>\n<li>Backup Completed</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행했다면 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-etcd-백업파일-생성\" style=\"position:relative;\"><a href=\"#2-etcd-%EB%B0%B1%EC%97%85%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"2 etcd 백업파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ETCD 백업파일 생성</h3>\n<ul>\n<li>get 명령어로 etcd 파드 이름을 찾는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -n kube-system \nNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-74ff55c5b-2cf6t                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\ncoredns-74ff55c5b-vcq46                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-controller-manager-controlplane   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-proxy-9wlvh                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-proxy-rmcf6                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nweave-net-h74h2                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">1</span>          17m\nweave-net-v77kn                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          17m</code></pre></div>\n<br/>\n<ul>\n<li>describe 명령어로 etcd 백업에 필요한 내용들을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod -n kube-system etcd-controlplane \nName:                 etcd-controlplane\nNamespace:            kube-system\nPriority:             <span class=\"token number\">2000001000</span>\nPriority Class Name:  system-node-critical\nNode:                 controlplane/10.33.195.6\nStart Time:           Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:59 +0000\nLabels:               <span class=\"token assign-left variable\">component</span><span class=\"token operator\">=</span>etcd\n                      <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>control-plane\nAnnotations:          kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.33.195.6:2379\n                      kubernetes.io/config.hash: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.mirror: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.seen: <span class=\"token number\">2022</span>-05-17T13:16:57.930616180Z\n                      kubernetes.io/config.source: <span class=\"token function\">file</span>\nStatus:               Running\nIP:                   <span class=\"token number\">10.33</span>.195.6\nIPs:\n  IP:           <span class=\"token number\">10.33</span>.195.6\nControlled By:  Node/controlplane\nContainers:\n  etcd:\n    Container ID:  docker://7c8ad68c241e98453154d077113bec3195c5fdf088fdb0a5383d3dce7d36405a\n    Image:         k8s.gcr.io/etcd:3.4.13-0\n    Image ID:      docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2\n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      etcd\n      --advertise-client-urls<span class=\"token operator\">=</span>https://10.33.195.6:2379\n      --cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt\n      --client-cert-auth<span class=\"token operator\">=</span>true\n      --data-dir<span class=\"token operator\">=</span>/var/lib/etcd\n      --initial-advertise-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --initial-cluster<span class=\"token operator\">=</span>controlplane<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n      --listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n      --listen-metrics-urls<span class=\"token operator\">=</span>http://127.0.0.1:2381\n      --listen-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --name<span class=\"token operator\">=</span>controlplane\n      --peer-cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.crt\n      --peer-client-cert-auth<span class=\"token operator\">=</span>true\n      --peer-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.key\n      --peer-trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n      --snapshot-count<span class=\"token operator\">=</span><span class=\"token number\">10000</span>\n      --trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n    State:          Running\n      Started:      Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:38 +0000\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Requests:\n      cpu:                100m\n      ephemeral-storage:  100Mi\n      memory:             100Mi\n    Liveness:             http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=8</span>\n    Startup:              http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=24</span>\n    Environment:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /etc/kubernetes/pki/etcd from etcd-certs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n      /var/lib/etcd from etcd-data <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  etcd-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/pki/etcd\n    HostPathType:  DirectoryOrCreate\n  etcd-data:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /var/lib/etcd\n    HostPathType:  DirectoryOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:       :NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists\nEvents:\n  Type    Reason  Age   From     Message\n  ----    ------  ----  ----     -------\n  Normal  Pulled  19m   kubelet  Container image <span class=\"token string\">\"k8s.gcr.io/etcd:3.4.13-0\"</span> already present on machine</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>trusted-ca-file<span class=\"token operator\">></span> --cert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>cert-file<span class=\"token operator\">></span> --key<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>key-file<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n  snapshot save <span class=\"token operator\">&lt;</span>backup-file-location<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>etcdctl 실행 시 필요한 파라미터값들을 확인하며 메모로 남겨 놓은 뒤 알맞은 정보를 채워넣는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">--listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n--cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt  \n--key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n--trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\n<span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt --cert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt --key<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key <span class=\"token punctuation\">\\</span>\n  snapshot save /opt/etcd-backup.db</code></pre></div>\n<br/>\n<ul>\n<li>ETCD 백업 파일이 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --write-out<span class=\"token operator\">=</span>table snapshot status /opt/etcd-backup.db\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span>   HASH   <span class=\"token operator\">|</span> REVISION <span class=\"token operator\">|</span> TOTAL KEYS <span class=\"token operator\">|</span> TOTAL SIZE <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span> 6040e181 <span class=\"token operator\">|</span>     <span class=\"token number\">2738</span> <span class=\"token operator\">|</span>       <span class=\"token number\">1027</span> <span class=\"token operator\">|</span>     <span class=\"token number\">2.4</span> MB <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>ETCD backup: <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster\">https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster</a></li>\n</ul>\n<br/>","excerpt":"모의고사 2.1 - ETCD 백업 파일 생성하기 1. 문제 요건 Take a backup of the etcd cluster and save it to . Backup Completed  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행했다면 불필요).  2. ETCD 백업파일 생성 get 명령어로 etcd 파드 이름을 찾는다. describe 명령어로 etcd 백업에 필요한 내용들을 확인한다. etcdctl 실행 시 필요한 파라미터값들을 확인하며 메모로 남겨 놓은 뒤 알맞은 정보를 채워넣는다. ETCD 백업 파일이 잘 생성되었는지 확인한다.  3. 참고 URL ETCD backup: https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.1 - ETCD 백업 파일 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-01/"}},"next":{"id":"86b299b4-d6b5-5336-b52e-1b6386eb6610","html":"<h1 id=\"제-2장-변수와-배열\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-2%EC%9E%A5-%EB%B3%80%EC%88%98%EC%99%80-%EB%B0%B0%EC%97%B4\" aria-label=\"제 2장 변수와 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 2장 변수와 배열</h1>\n<h2 id=\"10-변수는-변수명이라는-이름으로-구별한다\" style=\"position:relative;\"><a href=\"#10-%EB%B3%80%EC%88%98%EB%8A%94-%EB%B3%80%EC%88%98%EB%AA%85%EC%9D%B4%EB%9D%BC%EB%8A%94-%EC%9D%B4%EB%A6%84%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EB%B3%84%ED%95%9C%EB%8B%A4\" aria-label=\"10 변수는 변수명이라는 이름으로 구별한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 변수는 변수명이라는 이름으로 구별한다</h2>\n<ul>\n<li>변수명: 변수의 용도가 무엇인지 표시하고 다른 변수들과 구분하기 위한 수당. 변수에는 반드시 변수명을 붙여야 한다.</li>\n<li>변수명을 붙일 때의 규칙\n<ul>\n<li>변수명은 고유해야한다: 변수명을 사용해 원하는 변수를 반드시 구별할 수 있어야하기 때문</li>\n<li>숫자만 사용한 이름, 숫자로 시작하는 이름은 사용할 수 없다: 숫자 데이터(값)과 변수를 구별해야 하기 때문</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"11-대입문에는-변수에-값을-대입하는-기능이-있다\" style=\"position:relative;\"><a href=\"#11-%EB%8C%80%EC%9E%85%EB%AC%B8%EC%97%90%EB%8A%94-%EB%B3%80%EC%88%98%EC%97%90-%EA%B0%92%EC%9D%84-%EB%8C%80%EC%9E%85%ED%95%98%EB%8A%94-%EA%B8%B0%EB%8A%A5%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"11 대입문에는 변수에 값을 대입하는 기능이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. 대입문에는 변수에 값을 대입하는 기능이 있다</h2>\n<ul>\n<li>변수에 값을 대입할 때에는 왼쪽에 변수명을, 오른쪽에 대입하는 값을 적는 것이 일반적이다.</li>\n<li>대입문: 변수에 값을 대입하는 구문\n<ul>\n<li>예 1: 변수명 ← 값</li>\n<li>예 2: 변수명 = 값</li>\n<li>예 3: STR ← “ABC”</li>\n<li>예 4: STR = “ABC”</li>\n</ul>\n</li>\n<li>대입문 오른쪽에는 연산자(+, -, *, /)를 사용해 계산식을 작성할 수 있다.\n<ul>\n<li>예 1: X ← 10 + 5 (15가 변수 X에 대입된다)</li>\n<li>예 2: X = 10 + 5 (15가 변수 X에 대입된다)</li>\n</ul>\n</li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(3)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220518-algorithm-book-with-pic2/"}},"prev":{"id":"b851f4a1-0a01-55e3-af57-6a65fc48a46e","html":"<h1 id=\"모의고사-24---퍼시스턴트-볼륨persistent-volume을-마운트한-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-24---%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume%EC%9D%84-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 24   퍼시스턴트 볼륨persistent volume을 마운트한 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.4 - 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>A pod definition file is created at <code class=\"language-text\">/root/CKA/use-pv.yaml</code>. Make use of this manifest file and mount the persistent volume called <code class=\"language-text\">pv-1</code>. Ensure the pod is running and the PV is bound.</p>\n<p>mountPath: <code class=\"language-text\">/data</code> persistentVolumeClaim Name: <code class=\"language-text\">my-pvc</code></p>\n<ul>\n<li>persistentVolume Claim configured correctly</li>\n<li>pod using the correct mountPath</li>\n<li>pod using the persistent volume claim?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<br/>\n<h3 id=\"2-퍼시스턴트-볼륨persistent-volume을-마운트한-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-%ED%8D%BC%EC%8B%9C%EC%8A%A4%ED%84%B4%ED%8A%B8-%EB%B3%BC%EB%A5%A8persistent-volume%EC%9D%84-%EB%A7%88%EC%9A%B4%ED%8A%B8%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 퍼시스턴트 볼륨persistent volume을 마운트한 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성</h3>\n<ul>\n<li>문제에서 제공한 파드 매니페스트 파일을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /root/CKA/use-pv.yaml\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: use-pv\n  name: use-pv\nspec:\n  containers:\n  - image: nginx\n    name: use-pv\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>문제에서 제시한 pv 정보를 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get <span class=\"token function\">pv</span>\nNAME   CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE\npv-1   10Mi       RWO            Retain           Available                                   2m21s</code></pre></div>\n<br/>\n<ul>\n<li>기존에 pvc가 있는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pvc\nNo resources found <span class=\"token keyword\">in</span> default namespace.</code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스 공식문서에서 pvc를 검색해 템플릿을 복사한 뒤 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> pvc.yaml\n\n----\n\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: my-pvc\nspec:\n   accessModes:\n      - ReadWriteOnce\n   resources:\n     requests:\n       storage: 10Mi</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 pvc를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k create <span class=\"token operator\">-</span>f pvc<span class=\"token punctuation\">.</span>yaml\npersistentvolumeclaim<span class=\"token operator\">/</span>my<span class=\"token operator\">-</span>pvc created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어로 pvc가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k <span class=\"token keyword\">get</span> pvc\n<span class=\"token constant\">NAME</span>     <span class=\"token constant\">STATUS</span>   <span class=\"token constant\">VOLUME</span>   <span class=\"token constant\">CAPACITY</span>   <span class=\"token constant\">ACCESS</span> <span class=\"token constant\">MODES</span>   <span class=\"token constant\">STORAGECLASS</span>   <span class=\"token constant\">AGE</span>\nmy<span class=\"token operator\">-</span>pvc   Bound    pv<span class=\"token operator\">-</span><span class=\"token number\">1</span>     10Mi       <span class=\"token constant\">RWO</span>                           16s</code></pre></div>\n<ul>\n<li>status: Bound여야한다.</li>\n</ul>\n<br/>\n<ul>\n<li>문제에서 제공한 파드 매니페스트 파일을 연다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n   <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n   <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n      <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> image<span class=\"token operator\">:</span> nginx\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n    <span class=\"token literal-property property\">resources</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>쿠버네티스 공식문서의 Claim As Volume 탭을 클릭해 Pod 예시를 보고 문제에 맞게 내용을 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">--</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n   <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n   <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n      <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n   <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> image<span class=\"token operator\">:</span> nginx\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> use<span class=\"token operator\">-</span>pv\n    <span class=\"token literal-property property\">resources</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token literal-property property\">volumeMounts</span><span class=\"token operator\">:</span>\n      <span class=\"token operator\">-</span> mountPath<span class=\"token operator\">:</span> <span class=\"token string\">\"/data\"</span>\n        <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> mypd\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n  <span class=\"token literal-property property\">volumes</span><span class=\"token operator\">:</span>\n     <span class=\"token operator\">-</span> name<span class=\"token operator\">:</span> mypd\n       <span class=\"token literal-property property\">persistentVolumeClaim</span><span class=\"token operator\">:</span>\n         <span class=\"token literal-property property\">claimName</span><span class=\"token operator\">:</span> my<span class=\"token operator\">-</span>pvc \n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 Pod를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k create <span class=\"token operator\">-</span>f <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv<span class=\"token punctuation\">.</span>yaml\npod<span class=\"token operator\">/</span>use<span class=\"token operator\">-</span>pv created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">get</code> 명령어를 이용해 Pod가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k <span class=\"token keyword\">get</span> pods\n<span class=\"token constant\">NAME</span>     <span class=\"token constant\">READY</span>   <span class=\"token constant\">STATUS</span>    <span class=\"token constant\">RESTARTS</span>   <span class=\"token constant\">AGE</span>\nuse<span class=\"token operator\">-</span>pv   <span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">1</span>     Running   <span class=\"token number\">0</span>          14s</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어를 이용해 문제에서 제시한 요구조건이 제대로 설정되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k describe pod use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Name</span><span class=\"token operator\">:</span>         use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Namespace</span><span class=\"token operator\">:</span>    <span class=\"token keyword\">default</span>\n<span class=\"token literal-property property\">Priority</span><span class=\"token operator\">:</span>     <span class=\"token number\">0</span>\n<span class=\"token literal-property property\">Node</span><span class=\"token operator\">:</span>         node01<span class=\"token operator\">/</span><span class=\"token number\">10.52</span><span class=\"token number\">.31</span><span class=\"token number\">.6</span>\nStart Time<span class=\"token operator\">:</span>   Thu<span class=\"token punctuation\">,</span> <span class=\"token number\">19</span> May <span class=\"token number\">2022</span> <span class=\"token number\">20</span><span class=\"token operator\">:</span><span class=\"token number\">38</span><span class=\"token operator\">:</span><span class=\"token number\">33</span> <span class=\"token operator\">+</span><span class=\"token number\">0000</span>\n<span class=\"token literal-property property\">Labels</span><span class=\"token operator\">:</span>       run<span class=\"token operator\">=</span>use<span class=\"token operator\">-</span>pv\n<span class=\"token literal-property property\">Annotations</span><span class=\"token operator\">:</span>  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nStatus:       Running\nIP:           10.50.192.1\nIPs:\n  IP:  10.50.192.1\nContainers:\n  use-pv:\n    Container ID:   docker://a2893bd59fa5c7e1d3a4c87778a97bcc1f4fd8aad1610c6283809993439d355d\n    Image:          nginx\n    Image ID:       docker-pullable://nginx@sha256:2d17cc4981bf1e22a87ef3b3dd20fbb72c3868738e3f307662eb40e2630d4320\n    Port:           </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Host Port:      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    State:          Running\n      Started:      Thu, 19 May 2022 20:38:44 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n    Mounts:\n      /data from mypd (rw)\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-hmwwc (ro)\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  mypd:\n    Type:       PersistentVolumeClaim (a reference to a PersistentVolumeClaim in the same namespace)\n    ClaimName:  my-pvc\n    ReadOnly:   false\n  default-token-hmwwc:\n    Type:        Secret (a volume populated by a Secret)\n    SecretName:  default-token-hmwwc\n    Optional:    false\nQoS Class:       BestEffort\nNode-Selectors:  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>none</span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\nTolerations:     node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                 node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  31s   default-scheduler  Successfully assigned default/use-pv to node01\n  Normal  Pulling    30s   kubelet            Pulling image \"nginx\"\n  Normal  Pulled     21s   kubelet            Successfully pulled image \"nginx\" in 8.528417084s\n  Normal  Created    21s   kubelet            Created container use-pv\n  Normal  Started    20s   kubelet            Started container use-pv</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>퍼시스턴트 볼륨(Persistent Volume): <a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims\">https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.4 - 퍼시스턴트 볼륨(Persistent Volume)을 마운트한 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-04/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220518-kubernetes-cka-mock-exam-2-01/","nextSlug":"/220518-algorithm-book-with-pic2/","prevSlug":"/220518-kubernetes-cka-mock-exam-2-04/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}