{"componentChunkName":"component---src-templates-blog-template-js","path":"/220519-kubernetes-cka-mock-exam-3-03/","result":{"data":{"cur":{"id":"0b1fcc2e-ac45-5573-ad2f-3126f675a39b","html":"<h1 id=\"33---멀티컨테이터-파드multi-container-pod-생성하기\" style=\"position:relative;\"><a href=\"#33---%EB%A9%80%ED%8B%B0%EC%BB%A8%ED%85%8C%EC%9D%B4%ED%84%B0-%ED%8C%8C%EB%93%9Cmulti-container-pod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"33   멀티컨테이터 파드multi container pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3.3 - 멀티컨테이터 파드(Multi-Container POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a pod called <code class=\"language-text\">multi-pod</code> with two containers.Container 1, name: <code class=\"language-text\">alpha</code>, image: <code class=\"language-text\">nginx</code>Container 2: name: <code class=\"language-text\">beta</code>, image: <code class=\"language-text\">busybox</code>, command: <code class=\"language-text\">sleep 4800</code>Environment Variables:container 1:<code class=\"language-text\">name: alpha</code>Container 2:<code class=\"language-text\">name: beta</code></p>\n<ul>\n<li>Pod Name: multi-pod</li>\n<li>Container 1: alpha</li>\n<li>Container 2: beta</li>\n<li>Container beta commands set correctly?</li>\n<li>Container 1 Environment Value Set</li>\n<li>Container 2 Environment Value Set</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-멀티컨테이터-파드multi-container-pod-생성\" style=\"position:relative;\"><a href=\"#2-%EB%A9%80%ED%8B%B0%EC%BB%A8%ED%85%8C%EC%9D%B4%ED%84%B0-%ED%8C%8C%EB%93%9Cmulti-container-pod-%EC%83%9D%EC%84%B1\" aria-label=\"2 멀티컨테이터 파드multi container pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 멀티컨테이터 파드(Multi-Container POD) 생성</h3>\n<ul>\n<li>명령형 커맨드로 컨테이너가 하나 있는 파드의 매니페스트 파일을 만들어 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run --image<span class=\"token operator\">=</span>busybox multi-pod --env<span class=\"token operator\">=</span>name<span class=\"token operator\">=</span>beta --dry-run<span class=\"token operator\">=</span>client -o yaml --command -- <span class=\"token function\">sleep</span> <span class=\"token number\">4800</span> <span class=\"token operator\">></span> multi-pod.yaml</code></pre></div>\n<br/>\n<ul>\n<li>생성한 매니페스트 파일을 문제 요건에 맞게 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">vi multi<span class=\"token operator\">-</span>pod<span class=\"token punctuation\">.</span>yaml\n\n<span class=\"token operator\">--</span><span class=\"token operator\">-</span>\n\n<span class=\"token literal-property property\">apiVersion</span><span class=\"token operator\">:</span> v1\n<span class=\"token literal-property property\">kind</span><span class=\"token operator\">:</span> Pod\n<span class=\"token literal-property property\">metadata</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">creationTimestamp</span><span class=\"token operator\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token literal-property property\">labels</span><span class=\"token operator\">:</span>\n    <span class=\"token literal-property property\">run</span><span class=\"token operator\">:</span> multi<span class=\"token operator\">-</span>pod\n  <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> multi<span class=\"token operator\">-</span>pod\n<span class=\"token literal-property property\">spec</span><span class=\"token operator\">:</span>\n  <span class=\"token literal-property property\">containers</span><span class=\"token operator\">:</span>\n  <span class=\"token operator\">-</span> command<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> sleep\n    <span class=\"token operator\">-</span> <span class=\"token string\">\"4800\"</span>\n    <span class=\"token literal-property property\">env</span><span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token operator\">:</span> name\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> beta\n    <span class=\"token literal-property property\">image</span><span class=\"token operator\">:</span> busybox\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> beta\n  <span class=\"token operator\">-</span> env<span class=\"token operator\">:</span>\n    <span class=\"token operator\">-</span> name<span class=\"token operator\">:</span> name\n      <span class=\"token literal-property property\">value</span><span class=\"token operator\">:</span> alpha\n    <span class=\"token literal-property property\">image</span><span class=\"token operator\">:</span> nginx\n    <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> alpha\n  <span class=\"token literal-property property\">dnsPolicy</span><span class=\"token operator\">:</span> ClusterFirst\n  <span class=\"token literal-property property\">restartPolicy</span><span class=\"token operator\">:</span> Always\n<span class=\"token literal-property property\">status</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f multi-pod.yaml \npod/multi-pod created</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">describe</code> 명령어로 컨테이너가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod multi-pod \nName:         multi-pod\nNamespace:    default\nPriority:     <span class=\"token number\">0</span>\nNode:         node01/10.29.76.9\nStart Time:   Wed, <span class=\"token number\">18</span> May <span class=\"token number\">2022</span> <span class=\"token number\">12</span>:49:34 +0000\nLabels:       <span class=\"token assign-left variable\">run</span><span class=\"token operator\">=</span>multi-pod\nAnnotations:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nStatus:       Pending\nIP:           \nIPs:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nContainers:\n  beta:\n    Container ID:  \n    Image:         busybox\n    Image ID:      \n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      <span class=\"token function\">sleep</span>\n      <span class=\"token number\">4800</span>\n    State:          Waiting\n      Reason:       ContainerCreating\n    Ready:          False\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:\n      name:  beta\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-mq4qs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\n  alpha:\n    Container ID:   \n    Image:          nginx\n    Image ID:       \n    Port:           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:      <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    State:          Waiting\n      Reason:       ContainerCreating\n    Ready:          False\n    Restart Count:  <span class=\"token number\">0</span>\n    Environment:\n      name:  alpha\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from default-token-mq4qs <span class=\"token punctuation\">(</span>ro<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             False \n  ContainersReady   False \n  PodScheduled      True \nVolumes:\n  default-token-mq4qs:\n    Type:        Secret <span class=\"token punctuation\">(</span>a volume populated by a Secret<span class=\"token punctuation\">)</span>\n    SecretName:  default-token-mq4qs\n    Optional:    <span class=\"token boolean\">false</span>\nQoS Class:       BestEffort\nNode-Selectors:  <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:     node.kubernetes.io/not-ready:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\n                 node.kubernetes.io/unreachable:NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists <span class=\"token keyword\">for</span> 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  9s    default-scheduler  Successfully assigned default/multi-pod to node01\n  Normal  Pulling    8s    kubelet            Pulling image <span class=\"token string\">\"busybox\"</span>\n  Normal  Pulled     6s    kubelet            Successfully pulled image <span class=\"token string\">\"busybox\"</span> <span class=\"token keyword\">in</span> <span class=\"token number\">1</span>.343368595s\n  Normal  Created    6s    kubelet            Created container beta\n  Normal  Started    5s    kubelet            Started container beta\n  Normal  Pulling    5s    kubelet            Pulling image <span class=\"token string\">\"nginx\"</span>\n  Normal  Pulled     0s    kubelet            Successfully pulled image <span class=\"token string\">\"nginx\"</span> <span class=\"token keyword\">in</span> <span class=\"token number\">5</span>.046956529s\n  Normal  Created    0s    kubelet            Created container alpha</code></pre></div>\n<br/>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","excerpt":"3.3 - 멀티컨테이터 파드(Multi-Container POD) 생성하기 1. 문제 요건 Create a pod called  with two containers.Container 1, name: , image: Container 2: name: , image: , command: Environment Variables:container 1:Container 2: Pod Name: multi-pod Container 1: alpha Container 2: beta Container beta commands set correctly? Container 1 Environment Value Set Container 2 Environment Value Set  2. 내 풀이 1. 사전 작업 kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).  2. 멀티컨테이터 파드(Multi-Container POD) 생성 명령형 커맨드로 컨테이너가 하나 있는 파드의 매니페스트 파…","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.3 - 멀티컨테이터 파드(Multi-Container POD) 생성하기 및 파드(POD)연결","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-03/"}},"next":{"id":"cf33fee1-826f-5f4b-9b2f-d19fd96333cc","html":"<h1 id=\"모의고사-32---json-path로-노드-internal-ip-출력하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-32---json-path%EB%A1%9C-%EB%85%B8%EB%93%9C-internal-ip-%EC%B6%9C%EB%A0%A5%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 32   json path로 노드 internal ip 출력하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 3.2 - JSON PATH로 노드 Internal IP 출력하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>List the <code class=\"language-text\">InternalIP</code> of all nodes of the cluster. Save the result to a file <code class=\"language-text\">/root/CKA/node_ips</code>.</p>\n<p>Answer should be in the format: <code class=\"language-text\">InternalIP of controlplane</code><space><code class=\"language-text\">InternalIP of node01</code> (in a single line)</p>\n<ul>\n<li>Task Completed</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-json-path로-노드-internal-ip-출력-및-파드pod-연결\" style=\"position:relative;\"><a href=\"#2-json-path%EB%A1%9C-%EB%85%B8%EB%93%9C-internal-ip-%EC%B6%9C%EB%A0%A5-%EB%B0%8F-%ED%8C%8C%EB%93%9Cpod-%EC%97%B0%EA%B2%B0\" aria-label=\"2 json path로 노드 internal ip 출력 및 파드pod 연결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. JSON PATH로 노드 Internal IP 출력 및 파드(POD) 연결</h3>\n<ul>\n<li>쿠버네티스 치트시트에서 가장 유사한 명령어를 찾아 복사한 뒤 수정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get nodes -o <span class=\"token assign-left variable\">jsonpath</span><span class=\"token operator\">=</span>'<span class=\"token punctuation\">{</span>.items<span class=\"token punctuation\">[</span>*<span class=\"token punctuation\">]</span>.status.addresses<span class=\"token punctuation\">[</span>?<span class=\"token punctuation\">(</span>@.type<span class=\"token operator\">==</span><span class=\"token string\">\"InternalIP\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>.address<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>문제에서 지정한 경로에 저장한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  kubectl <span class=\"token keyword\">get</span> nodes <span class=\"token operator\">-</span>o jsonpath<span class=\"token operator\">=</span><span class=\"token string\">'{.items[*].status.addresses[?(@.type==\"InternalIP\")].address}'</span> <span class=\"token operator\">></span> <span class=\"token operator\">/</span>root<span class=\"token operator\">/</span><span class=\"token constant\">CKA</span><span class=\"token operator\">/</span>node_ips</code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">cat</code> 명령어로 잘 저장되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">cat</span> /root/CKA/node_ips\n<span class=\"token number\">10.29</span>.76.6 <span class=\"token number\">10.29</span>.76.9</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl cheat sheet: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.2 - JSON PATH로 노드 Internal IP 출력하기 및 파드(POD) 연결하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-02/"}},"prev":{"id":"2e9d513b-821e-5eb8-a38e-0b0ad17ad7fd","html":"<h1 id=\"1-모의고사-36---테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#1-%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-36---%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"1 모의고사 36   테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 모의고사 3.6 - 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Taint the worker node <code class=\"language-text\">node01</code> to be Unschedulable. Once done, create a pod called <code class=\"language-text\">dev-redis</code>, image <code class=\"language-text\">redis:alpine</code>, to ensure workloads are not scheduled to this worker node. Finally, create a new pod called <code class=\"language-text\">prod-redis</code> and image: <code class=\"language-text\">redis:alpine</code> with toleration to be scheduled on <code class=\"language-text\">node01</code>.</p>\n<p>key: <code class=\"language-text\">env_type</code>, value: <code class=\"language-text\">production</code>, operator: <code class=\"language-text\">Equal</code> and effect: <code class=\"language-text\">NoSchedule</code></p>\n<ul>\n<li>Key = env_type</li>\n<li>Value = production</li>\n<li>Effect = NoSchedule</li>\n<li>pod ‘dev-redis’ (no tolerations) is not scheduled on node01?</li>\n<li>Create a pod ‘prod-redis’ to run on node01</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-테인트taint--톨러레이션toleration-적용하기\" style=\"position:relative;\"><a href=\"#2-%ED%85%8C%EC%9D%B8%ED%8A%B8taint--%ED%86%A8%EB%9F%AC%EB%A0%88%EC%9D%B4%EC%85%98toleration-%EC%A0%81%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"2 테인트taint  톨러레이션toleration 적용하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 테인트(Taint) &#x26; 톨러레이션(Toleration) 적용하기</h3>\n<ul>\n<li>명령형 커맨드로 node01에 테인트를 설정한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl taint nodes node01 <span class=\"token assign-left variable\">env_type</span><span class=\"token operator\">=</span>production:NoSchedule</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\">root@controlplane <span class=\"token operator\">~</span> ➜  k run dev<span class=\"token operator\">-</span>redis <span class=\"token operator\">--</span>image<span class=\"token operator\">=</span>redis<span class=\"token operator\">:</span>alpine\npod<span class=\"token operator\">/</span>dev<span class=\"token operator\">-</span>redis created</code></pre></div>\n<br/>\n<ul>\n<li>dev-redis 파드가 control plane 노드에 스케줄링 된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10s     <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          18m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          10m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          9m14s   <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          29m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드의 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run prod-redis --image<span class=\"token operator\">=</span>redis:alpine --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> prod-redis.yaml</code></pre></div>\n<br/>\n<ul>\n<li>문제 요건에 맞게 편집한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">vi</span> prod-redis.yaml\n\n---\n\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: prod-redis\n  name: prod-redis\nspec:\n  containers:\n  - image: redis:alpine\n    name: prod-redis\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  tolerations:\n  - key: <span class=\"token string\">\"env_type\"</span>\n    operator: <span class=\"token string\">\"Equal\"</span>\n    value: <span class=\"token string\">\"production\"</span>\n    effect: <span class=\"token string\">\"NoSchedule\"</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li><code class=\"language-text\">create</code> 명령어로 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f prod-redis.yaml \npod/prod-redis created</code></pre></div>\n<br/>\n<ul>\n<li>prod-redis 파드가 node01에 스케줄링된 것을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -o wide\nNAME           READY   STATUS    RESTARTS   AGE     IP            NODE           NOMINATED NODE   READINESS GATES\ndev-redis      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6m41s   <span class=\"token number\">10.50</span>.0.4     controlplane   <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nmulti-pod      <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          24m     <span class=\"token number\">10.50</span>.192.2   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnon-root-pod   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m     <span class=\"token number\">10.50</span>.192.3   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nnp-test-1      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          15m     <span class=\"token number\">10.50</span>.192.4   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nprod-redis     <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          58s     <span class=\"token number\">10.50</span>.192.5   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\npvviewer       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          36m     <span class=\"token number\">10.50</span>.192.1   node01         <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>           <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>kubectl 치트 시트: <a href=\"https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/\">https://kubernetes.io/ko/docs/reference/kubectl/cheatsheet/</a></li>\n<li>테인트와 톨러레이션: <a href=\"https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/\">https://kubernetes.io/ko/docs/concepts/scheduling-eviction/taint-and-toleration/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 19, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 3.6 - 테인트(Taint) & 톨러레이션(Toleration) 적용하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220519-kubernetes-cka-mock-exam-3-03/","nextSlug":"/220519-kubernetes-cka-mock-exam-3-02/","prevSlug":"/220519-kubernetes-cka-mock-exam-3-06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}