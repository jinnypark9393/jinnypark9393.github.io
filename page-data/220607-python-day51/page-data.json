{"componentChunkName":"component---src-templates-blog-template-js","path":"/220607-python-day51/","result":{"data":{"cur":{"id":"0e92450e-cc5e-59e7-a6c8-5a2f10e7944d","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 람다함수를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-07-Python-Photo/2022-06-07-Python-Photo1.jpg\" alt=\"2022-06-07-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-07-Python-Photo/2022-06-07-Python-Photo2.jpg\" alt=\"2022-06-07-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"03-람다-함수lamda\" style=\"position:relative;\"><a href=\"#03-%EB%9E%8C%EB%8B%A4-%ED%95%A8%EC%88%98lamda\" aria-label=\"03 람다 함수lamda permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 람다 함수(lamda)</h1>\n<h2 id=\"1-람다-함수란\" style=\"position:relative;\"><a href=\"#1-%EB%9E%8C%EB%8B%A4-%ED%95%A8%EC%88%98%EB%9E%80\" aria-label=\"1 람다 함수란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 람다 함수란?</h2>\n<ul>\n<li>이름을 지을 필요도 없을 <strong>간단한 형태의 함수</strong></li>\n<li>다른 함수의 인자(argument)로 넣을 수 있다.</li>\n<li>코드가 간결해지고, 메모리가 절약된다.</li>\n</ul>\n<br/>\n<h2 id=\"2-람다-함수-사용-방법\" style=\"position:relative;\"><a href=\"#2-%EB%9E%8C%EB%8B%A4-%ED%95%A8%EC%88%98-%EC%82%AC%EC%9A%A9-%EB%B0%A9%EB%B2%95\" aria-label=\"2 람다 함수 사용 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 람다 함수 사용 방법</h2>\n<ul>\n<li>기존 함수와 람다 함수의 정의 방법을 살펴보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 기존 함수 정의 방법</span>\n<span class=\"token keyword\">def</span> 함수이름<span class=\"token punctuation\">(</span>매개변수<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> 결과\n\n<span class=\"token comment\"># 기존 함수 정의 방법 예시</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">minus_one</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 람다 함수 정의 방법</span>\n<span class=\"token keyword\">lambda</span> 매개변수 <span class=\"token punctuation\">:</span> 결과\n\n<span class=\"token comment\"># 람다 함수 정의 방법 예시</span>\n<span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a <span class=\"token operator\">-</span> <span class=\"token number\">1</span></code></pre></div>\n<br/>\n<ul>\n<li>기존 함수와 람다 함수의 호출 방법을 살펴보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 기존 함수 호출 방법</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> minus_one<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">9</span>\n\n<span class=\"token comment\"># 람다 함수 호출 방법</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">9</span>\n\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> minus_one <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> minus_one<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">9</span></code></pre></div>\n<ul>\n<li>람다 함수 자체를 괄호로 감싸서 사용</li>\n<li>변수에 람다함수를 할당해 사용</li>\n</ul>\n<br/>\n<ul>\n<li>기존 함수와 람다 함수에서 if문을 사용하는 방식을 비교해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 기존 함수 정의 방법</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">is_positive_number</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># 람다 함수 정의 방법</span>\n<span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span></code></pre></div>\n<br/>\n<ul>\n<li>if문을 적용한 함수를 호출해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 기존 함수 호출 방법</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> is_positive_number<span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># 람다 함수 호출 방법</span>\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\n<span class=\"token boolean\">False</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 기존 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">minus_one</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 람다 함수</span>\n<span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n\n<span class=\"token comment\"># 람다 함수 호출 방법 1. 함수 자체를 호출</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 람다 함수 호출 방법 2. 변수에 담아서 호출</span>\nminus_one_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> a<span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>minus_one_2<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">03.</span>람다함수<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">9</span>\n<span class=\"token number\">99</span></code></pre></div>\n<br/>\n<ul>\n<li>람다 함수 안에서 if문을 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 람다 함수에서 if 문 사용</span>\n\n<span class=\"token comment\"># 기존 함수</span>\n<span class=\"token keyword\">def</span> <span class=\"token function\">is_positive_number</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># 람다 함수</span>\n<span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span>\n\n<span class=\"token comment\"># 람다 함수 호출(1)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 람다 함수 호출(2)</span>\nis_positive_number_2 <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> a <span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span> <span class=\"token keyword\">if</span> a <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token keyword\">else</span> <span class=\"token boolean\">False</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>is_positive_number_2<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter03<span class=\"token operator\">/</span><span class=\"token number\">03.</span>람다함수<span class=\"token punctuation\">.</span>py\n<span class=\"token boolean\">False</span>\n<span class=\"token boolean\">True</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 람다함수를 알아보았다. 다음 포스팅에서는 map, filter 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 람다함수를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-07-Python-Photo1 2022-06-07-Python-Photo2  03. 람다 함수(lamda) 1. 람다 함수란? 이름을 지을 필요도 없을 간단한 형태의 함수 다른 함수의 인자(argument)로 넣을 수 있다. 코드가 간결해지고, 메모리가 절약된다. 2. 람다 함수 사용 방법 기존 함수와 람다 함수의 정의 방법을 살펴보자. 기존 함수와 람다 함수의 호출 방법을 살펴보자. 람다 함수 자체를 괄호로 감싸서 사용 변수에 람다함수를 할당해 사용 기존 함수와 람다 함수에서 if문을 사용하는 방식을 비교해보자. if문을 적용한 함수를 호출해보자.  3. 실습 실행 결과 람다 함수 안에서 if문을 사용해보자. 실행 결과  이번…","frontmatter":{"date":"June 07, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 51일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220607-python-day51/"}},"next":{"id":"8cfd3e36-fd13-5605-a5ca-5ba33371a805","html":"<h1 id=\"1-배경\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD\" aria-label=\"1 배경 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경</h1>\n<p>현재 컨테이너 전환을 진행하고 있는 담당 시스템이 Microsoft Azure에서 운영되고있는데, 인프라팀에서 쿠버네티스 파드(Pod)와 연결된 NAS(쿠버네티스 리소스로 말하면 Persistent Volume과 Persistent Volume Claim) 정보를 변경해달라는 요청을 받았다.</p>\n<p>NAS를 기존 CIFS타입에서 NFS 타입으로 변경하셨다고 하는데, 둘 다 처음 듣는 용어라 생소해서 정리해보았다.</p>\n<p>참고로 NAS 타입으로 스토리지를 바꾼 건 기존 Azure files(AWS의 EFS에 해당)에서 대/소문자 구분이 되지 않아 NetApp Files(NFS type)으로 변경한 것이라고 한다.</p>\n<p>Azure files에서 디렉토리/파일명의 <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\">대/소문자 구분이 되지 않아(case-insensitive)</a> 윈도우 기반으로만 구동되는 것인 줄 알았는데 <a href=\"https://docs.microsoft.com/ko-kr/azure/storage/files/storage-files-how-to-mount-nfs-shares\">NFS/SMB로 윈도우/리눅스 시스템에 모두 마운트</a>할 수 있는 것을 보면 그렇지는 않은 듯(자세한 것은 다시 조사 할 것).</p>\n<h1 id=\"2-nascifsnfs-개념\" style=\"position:relative;\"><a href=\"#2-nascifsnfs-%EA%B0%9C%EB%85%90\" aria-label=\"2 nascifsnfs 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. NAS/CIFS/NFS 개념</h1>\n<p>NAS, CIFS, NFS의 개념과 차이점, 장단점을 알아보자.</p>\n<h2 id=\"0-파일-서버file-server이란\" style=\"position:relative;\"><a href=\"#0-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84file-server%EC%9D%B4%EB%9E%80\" aria-label=\"0 파일 서버file server이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0. 파일 서버(File Server)이란?</h2>\n<p>NAS, CIFS, NFS 개념에 대해 알아보기 전 먼저 파일서버에 대해 간략히 알아보겠다.</p>\n<ul>\n<li>**파일서버(File server)**란, LAN, WAN과 같은 같은 네트워크에서 다른 컴퓨터와 파일을 공유하거나 데이터를 송수신하기 위해 사용하는 서버이다.</li>\n</ul>\n<h3 id=\"0-1-파일-서버의-장점\" style=\"position:relative;\"><a href=\"#0-1-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"0 1 파일 서버의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0-1. 파일 서버의 장점</h3>\n<ul>\n<li>여러 사람이 같은 파일을 다룰 때 발생하기 쉬운 갱신 무결성 문제를 막을 수 있다.</li>\n<li>사내에서 파일 공유를 원활히 할 수 있다.</li>\n<li>파일을 중앙집중화해 백업이 편리해진다.</li>\n<li>파일을 한 곳에서 관리해 데이터 유출 가능성도 최소한으로 막을 수 있다.</li>\n</ul>\n<h3 id=\"0-2-파일-서버의-기능\" style=\"position:relative;\"><a href=\"#0-2-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84%EC%9D%98-%EA%B8%B0%EB%8A%A5\" aria-label=\"0 2 파일 서버의 기능 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0-2. 파일 서버의 기능</h3>\n<ul>\n<li>각 폴더에 대해 누가 어디까지 이용 가능한지 액세스 권한 설정</li>\n<li>각 폴더 저장 용량(크기)를 설정</li>\n<li>각 폴더에 대해 저장할 수 있는 파일 종류 제한</li>\n</ul>\n<h3 id=\"0-3-파일-서버의-종류\" style=\"position:relative;\"><a href=\"#0-3-%ED%8C%8C%EC%9D%BC-%EC%84%9C%EB%B2%84%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"0 3 파일 서버의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>0-3. 파일 서버의 종류</h3>\n<ul>\n<li>OS에 따라 <strong>Windows</strong> 파일서버, <strong>Unix</strong> 파일서버, <strong>Linux</strong> 파일서버가 있다.</li>\n<li>파일서버 구축은 OS를 어떤 것을 사용하는지가 중요\n<ul>\n<li>윈도우 - 윈도우 간 파일서버: CIFS 사용(윈도우 공유 기능 이용)</li>\n<li>리눅스 - 리눅스 간 파일서버: NFS 사용(리눅스 nfs-utils 이용)</li>\n<li>리눅스 - 윈도우 간 파일서버: SMB/CIFS 사용(Samba 이용)</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"1-nasnetwork-attached-storage란\" style=\"position:relative;\"><a href=\"#1-nasnetwork-attached-storage%EB%9E%80\" aria-label=\"1 nasnetwork attached storage란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. NAS(Network Attached Storage)란?</h2>\n<ul>\n<li><strong>Network Attached Storage</strong>의 약어.</li>\n<li>이름 그대로 네트워크에 연결된 스토리지 기기(컴퓨터에 직접 연결하는 HDD/SSD와 반대 개념).</li>\n<li><strong>접근 권한이 있는 네트워크 사용자</strong>와 <strong>여러 클라이언트</strong>가 <strong>중앙집중화된 위치의 데이터</strong>를 읽고 쓸 수 있게 하는 스토리지(Storage).</li>\n<li>NAS를 사용하기 위해서는 컴퓨터/서버에 NAS를 마운트 해 파일을 읽고 쓸 수 있다(컴퓨터/서버에서는 IP를 기반으로 NAS를 찾는다)</li>\n<li>OS에 따라 달라지는 CIFS, NFS 등 기반의 파일 시스템의 한계를 극복해주고 데이터를 쉽게 공유하게 해준다.</li>\n<li>단순 데이터 저장 뿐만 아니라 영상 스트리밍, 데이터 백업, 가상머신, 웹 호스팅 등 여러 가지 기능들이 늘어 나 서버 역할도 겸할 수 있다.</li>\n</ul>\n<h2 id=\"2-cifscommon-interest-file-system란\" style=\"position:relative;\"><a href=\"#2-cifscommon-interest-file-system%EB%9E%80\" aria-label=\"2 cifscommon interest file system란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. CIFS(Common Interest File System)란?</h2>\n<h3 id=\"1-smbserver-message-block란\" style=\"position:relative;\"><a href=\"#1-smbserver-message-block%EB%9E%80\" aria-label=\"1 smbserver message block란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. SMB(Server Message Block)란?</h3>\n<ul>\n<li><strong>Server Message Block</strong>의 약어</li>\n<li>마이크로소프트(Microsoft)와 인텔(Intel)에서 개발</li>\n<li>윈도우 시스템에서 다른 시스템의 디스크나 프린터와 같은 자원을 공유하기 위해 개발된 프로토콜</li>\n<li>TCP/IP 기반 하의 NetBIOS 프로토콜을 사용하며 NFS, NIS, LPD와 같은 유닉스 분산 인증 구조와 유사</li>\n</ul>\n<h3 id=\"2-cifscommon-interest-file-system란-1\" style=\"position:relative;\"><a href=\"#2-cifscommon-interest-file-system%EB%9E%80-1\" aria-label=\"2 cifscommon interest file system란 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. CIFS(Common Interest File System)란?</h3>\n<ul>\n<li><strong>Common Interest File System</strong>의 약어</li>\n<li>SMB 파일공유 프로토콜의 확장된 버전</li>\n<li><strong>윈도우</strong>, 유닉스 환경을 동시에 지원하는 인터넷 표준 파일 규약의 프로토콜</li>\n<li>폐쇄적인 SMB 프로토콜과 달리 CIFS의 규약 정의는 여러 유닉스 업체의 참여 하에 결정</li>\n<li>사용방법: 윈도우 탐색기 ⇒ 내 PC ⇒ 네트워크 드라이브 연결 ⇒ NAS 정보 입력(이름 형식: \\서버IP혹은Name\\공유name)</li>\n</ul>\n<h3 id=\"2-samba란\" style=\"position:relative;\"><a href=\"#2-samba%EB%9E%80\" aria-label=\"2 samba란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Samba란?</h3>\n<ul>\n<li>SMB/CIFS 네트워킹 프로토콜을 다시 구현한 소프트웨어(버전 2.2 이상부터 CIFS 규약을 준수)</li>\n<li>오스트리아의 Andrew Tridgell이 최초 개발(GNU 라이선스)</li>\n<li>삼바(Samba)의 이름은 SMB에서 따온 것</li>\n</ul>\n<h2 id=\"3-nfsnetwork-file-system란\" style=\"position:relative;\"><a href=\"#3-nfsnetwork-file-system%EB%9E%80\" aria-label=\"3 nfsnetwork file system란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. NFS(Network File System)란?</h2>\n<ul>\n<li><strong>Network File System</strong>의 약어.</li>\n<li>1985년 Sun Microsystems사에서 개발된 네트워크를 통한 분산 파일 시스템 프로토콜</li>\n<li>유닉스/<strong>리눅스</strong>의 로컬 파일 시스템을 공유하는 방식</li>\n<li>다른 호스트(host)에 있는 파일 시스템 일부를 자신의 디렉토리인 것 처럼 마운트(mount)하여 사용할 수 있다.</li>\n<li>사용 방법: <code class=\"language-text\">mount -t 서버(IP)주소:/디렉토리경로 마운트포인트</code> 명령어를 사용하여 마운트하며, <code class=\"language-text\">df</code> 명령어로 마운트 된 것을 확인할 수 있다.</li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"June 07, 2022","title":"NAS/CIFS/NFS 개념","categories":"CS","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220607-cs-nfs/"}},"prev":{"id":"91a4eaf2-e748-5aa5-9884-e89bd01589fe","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 map, filter함수를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-08-Python-Photo/2022-06-08-Python-Photo1.jpg\" alt=\"2022-06-08-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-08-Python-Photo/2022-06-08-Python-Photo2.jpg\" alt=\"2022-06-08-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"04-map-filter-함수\" style=\"position:relative;\"><a href=\"#04-map-filter-%ED%95%A8%EC%88%98\" aria-label=\"04 map filter 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. map, filter 함수</h1>\n<h2 id=\"1-map-함수\" style=\"position:relative;\"><a href=\"#1-map-%ED%95%A8%EC%88%98\" aria-label=\"1 map 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. map 함수</h2>\n<ul>\n<li>map 함수 사용 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>함수<span class=\"token punctuation\">,</span> 순서가있는자료형<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>순서가 있는 자료형: 리스트(<code class=\"language-text\">[]</code>), 튜플(<code class=\"language-text\">()</code>), 딕셔너리(<code class=\"language-text\">{}</code>), range 객체</li>\n<li>함수 = int (데이터를 정수형으로 바꿔주는 함수)</li>\n</ul>\n<p><img src=\"/assets/images/2022-06-08-Python-Photo/2022-06-08-Python-Photo3.png\" alt=\"2022-06-08-Python-Photo3\"></p>\n<ul>\n<li>\n<p>리스트의 각각의 데이터가 int 함수를 거쳐 그 결과를 map 오브젝트로 만들어낸다.</p>\n</li>\n<li>\n<p>map 함수를 리스트로 감싸주면 리스트로 결과를 받을 수 있다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>함수<span class=\"token punctuation\">,</span> 순서가있는자료형<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"map-함수를-이용한-간단한-예제-리스트-모든-요소의-공백-제거\" style=\"position:relative;\"><a href=\"#map-%ED%95%A8%EC%88%98%EB%A5%BC-%EC%9D%B4%EC%9A%A9%ED%95%9C-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%98%88%EC%A0%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8-%EB%AA%A8%EB%93%A0-%EC%9A%94%EC%86%8C%EC%9D%98-%EA%B3%B5%EB%B0%B1-%EC%A0%9C%EA%B1%B0\" aria-label=\"map 함수를 이용한 간단한 예제 리스트 모든 요소의 공백 제거 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Map 함수를 이용한 간단한 예제: 리스트 모든 요소의 공백 제거</h3>\n<ul>\n<li>for문 사용했을 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' 로지덱마우스 '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' 앱솔키보드 '</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>map 사용했을 때 (1)</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">strip_all</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' 로지덱마우스 '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' 앱솔키보드 '</span><span class=\"token punctuation\">]</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>strip_all<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>strip_all 이라는 함수를 정의하고, 매개변수로는 x를 받는다.</li>\n</ul>\n<p><img src=\"/assets/images/2022-06-08-Python-Photo/2022-06-08-Python-Photo4.png\" alt=\"2022-06-08-Python-Photo4\"></p>\n<ul>\n<li>\n<p>strip_all 함수를 거쳐 앞뒤 공백이 사라진 데이터가 map객체에 담긴다.</p>\n</li>\n<li>\n<p>list 함수를 거쳐 각 데이터가 다시 리스트로 만들어진 뒤 items에 할당된다.</p>\n</li>\n<li>\n<p>map 사용했을 때 (2)</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">strip_all</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' 로지덱마우스 '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' 앱솔키보드 '</span><span class=\"token punctuation\">]</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>strip_all<span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>한번 쓰고 말 함수에 이름을 붙이기 귀찮은 경우 ⇒ <strong>람다 함수</strong> 이용</p>\n</li>\n<li>\n<p>람다 함수를 사용했을 때</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">items <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">' 로지덱마우스 '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' 앱솔키보드 '</span><span class=\"token punctuation\">]</span>\n\nitems <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span>x<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> items<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"2-filter-함수\" style=\"position:relative;\"><a href=\"#2-filter-%ED%95%A8%EC%88%98\" aria-label=\"2 filter 함수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. filter 함수</h2>\n<ul>\n<li>filter 함수 사용 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>함수<span class=\"token punctuation\">,</span> 순서가있는 자료형<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">&lt;</span><span class=\"token number\">0</span>\n\n<span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>동작 과정</li>\n</ul>\n<p><img src=\"/assets/images/2022-06-08-Python-Photo/2022-06-08-Python-Photo5.png\" alt=\"2022-06-08-Python-Photo5\"></p>\n<ul>\n<li>리스트 중 func함수가 true일 때 결과를 filter 오브젝트로 만들어 낸다.</li>\n</ul>\n<h3 id=\"filter-함수-예제-리스트에서-길이가-3이하인-문자들만-필터링\" style=\"position:relative;\"><a href=\"#filter-%ED%95%A8%EC%88%98-%EC%98%88%EC%A0%9C-%EB%A6%AC%EC%8A%A4%ED%8A%B8%EC%97%90%EC%84%9C-%EA%B8%B8%EC%9D%B4%EA%B0%80-3%EC%9D%B4%ED%95%98%EC%9D%B8-%EB%AC%B8%EC%9E%90%EB%93%A4%EB%A7%8C-%ED%95%84%ED%84%B0%EB%A7%81\" aria-label=\"filter 함수 예제 리스트에서 길이가 3이하인 문자들만 필터링 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Filter 함수 예제: 리스트에서 길이가 3이하인 문자들만 필터링</h3>\n<ul>\n<li>for문 사용했을 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tiger'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'monkey'</span><span class=\"token punctuation\">]</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> animals<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">:</span>\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>filter문 사용했을 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tiger'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'monkey'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">word_check</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span>word_check<span class=\"token punctuation\">,</span> animals<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>람다 함수를 사용했을 때</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">animals <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'cat'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'tiger'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'dog'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bird'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'monkey'</span><span class=\"token punctuation\">]</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> animals<span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 map, filter함수를 알아보았다. 다음 포스팅에서는 map, filter 함수를 실습해 보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 08, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 52일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220608-python-day52/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220607-python-day51/","nextSlug":"/220607-cs-nfs/","prevSlug":"/220608-python-day52/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}