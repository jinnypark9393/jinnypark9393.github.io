{"componentChunkName":"component---src-templates-blog-template-js","path":"/220802-kubernetes-pod-to-local/","result":{"data":{"cur":{"id":"a6e51229-04e4-592c-810e-81fca7b7f50f","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>쿠버네티스 기반 컨테이너 마이그레이션 프로젝트에서 Pod 내의 파일을 local로 다운받아달라는 요청이 들어왔다.</p>\n<br/>\n<p>이전 담당 시스템에서도 비슷한 요청(로그 파일을 다운받아달라는 요청)이 있었으나 그 때 당시 알아보았을 때에는 다운로드가 되지 않아 다른 방법을 취했었는데, 이번에 요청을 받고 알아보니 당시와는 환경이 달라 아주 간단하게 파드(Pod)에서 로컬(local)로 파일을 다운로드 받을 수 있었다.</p>\n<br/>\n<p>참고로 이전 담당시스템에서 local 복사가 불가했던 이유는 시스템에서 내가 kubectl을 사용할 수 없었기 떄문(kubectl을 사용할 수 있는 권한이 없었기 때문)이었다. 이 때에는 로컬 다운로드 대신 해당 파일을 파드에 마운트해 둔 NAS로 옮겨 운영팀에서 직접 NAS에 접속해 확인 및 다운로드를 하실 수 있도록 처리 했었다.</p>\n<br/>\n<h1 id=\"2-쿠버네티스-pod---local-환경간-파일-복사\" style=\"position:relative;\"><a href=\"#2-%EC%BF%A0%EB%B2%84%EB%84%A4%ED%8B%B0%EC%8A%A4-pod---local-%ED%99%98%EA%B2%BD%EA%B0%84-%ED%8C%8C%EC%9D%BC-%EB%B3%B5%EC%82%AC\" aria-label=\"2 쿠버네티스 pod   local 환경간 파일 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 쿠버네티스 Pod - Local 환경간 파일 복사</h1>\n<p>쿠버네티스 파드에서 local로 파일을 복사하려면 <code class=\"language-text\">kubectl cp</code> 명령어를 사용해주면 된다(docker의 경우도 <code class=\"language-text\">docker cp</code> 로 컨테이너 → 로컬로 복사가 가능하다고 함).</p>\n<br/>\n<h2 id=\"pod에서-local-환경으로-파일-복사\" style=\"position:relative;\"><a href=\"#pod%EC%97%90%EC%84%9C-local-%ED%99%98%EA%B2%BD%EC%9C%BC%EB%A1%9C-%ED%8C%8C%EC%9D%BC-%EB%B3%B5%EC%82%AC\" aria-label=\"pod에서 local 환경으로 파일 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pod에서 Local 환경으로 파일 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl --kubeconfig <span class=\"token operator\">&lt;</span>유저정보 파일<span class=\"token operator\">></span> -n <span class=\"token operator\">&lt;</span>네임스페이스명<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>Pod명<span class=\"token operator\">></span>:경로/파일 로컬경로/파일</code></pre></div>\n<p>만약 Local에서 Pod로 파일을 복사하고 싶다면 Pod경로와 local 경로의 순서를 바꾸어 명령어를 입력해주면 된다.</p>\n<br/>\n<h2 id=\"local-환경에서-pod로-파일-복사\" style=\"position:relative;\"><a href=\"#local-%ED%99%98%EA%B2%BD%EC%97%90%EC%84%9C-pod%EB%A1%9C-%ED%8C%8C%EC%9D%BC-%EB%B3%B5%EC%82%AC\" aria-label=\"local 환경에서 pod로 파일 복사 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Local 환경에서 Pod로 파일 복사</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl --kubeconfig <span class=\"token operator\">&lt;</span>유저정보 파일<span class=\"token operator\">></span> -n <span class=\"token operator\">&lt;</span>네임스페이스명<span class=\"token operator\">></span> 로컬경로/파일 로컬경로/파일<span class=\"token operator\">&lt;</span>Pod명<span class=\"token operator\">></span>:경로/파일</code></pre></div>\n<br/>\n<h1 id=\"3-tar-removing-leading--from-member-names\" style=\"position:relative;\"><a href=\"#3-tar-removing-leading--from-member-names\" aria-label=\"3 tar removing leading  from member names permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. tar: Removing leading ‘/‘ from member names</h1>\n<p>다만 tar 파일을 복사하다보니 아래와 같은 에러 메시지가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token literal-property property\">tar</span><span class=\"token operator\">:</span> Removing leading <span class=\"token string\">'/'</span> from member names</code></pre></div>\n<br/>\n<p>해당 명령어는 알아보니 최상위 /를 제거한다는 알림 메시지였다. 최상위 경로를 제거해 상대경로로 만들어야 압축 해제 시 안전하다는 내용으로, 에러라고 표시되긴 했지만 에러라기보다는 경고성 메시지이기 때문에 명령어 자체를 실행하는 데에는 문제가 없다.</p>\n<br/>\n<p>실제로 해당 경로에 들어가 파일이 잘 다운로드 되었는지 확인한 결과 잘 다운로드 된 것을 확인할 수 있다.</p>","excerpt":"1. 배경 상황 쿠버네티스 기반 컨테이너 마이그레이션 프로젝트에서 Pod 내의 파일을 local로 다운받아달라는 요청이 들어왔다. 이전 담당 시스템에서도 비슷한 요청(로그 파일을 다운받아달라는 요청)이 있었으나 그 때 당시 알아보았을 때에는 다운로드가 되지 않아 다른 방법을 취했었는데, 이번에 요청을 받고 알아보니 당시와는 환경이 달라 아주 간단하게 파드(Pod)에서 로컬(local)로 파일을 다운로드 받을 수 있었다. 참고로 이전 담당시스템에서 local 복사가 불가했던 이유는 시스템에서 내가 kubectl을 사용할 수 없었기 떄문(kubectl을 사용할 수 있는 권한이 없었기 때문)이었다. 이 때에는 로컬 다운로드 대신 해당 파일을 파드에 마운트해 둔 NAS로 옮겨 운영팀에서 직접 NAS에 접속해 확인 및 다운로드를 하실 수 있도록 처리 했었다. 2. 쿠버네티스 Pod - Local 환경간 파일 복사 쿠버네티스 파드에서 local로 파일을 복사하려면  명령어를 사용해주면 된다(…","frontmatter":{"date":"August 02, 2022","title":"쿠버네티스(Kubernetes) Pod to Local 파일 복사하는 방법","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220802-kubernetes-pod-to-local/"}},"next":{"id":"b455ba9a-d964-553f-96fb-67825394dbf1","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>오픈소스 컨트리뷰션 아카데미에서 쿠버네티스 한글화 프로젝트를 진행중인데, 커밋들이 섞여 올라가서 중간 커밋을 삭제해야하는 상황이 발생했다.</p>\n<br/>\n<p>조금 더 구체적으로 설명하자면, 내가 한글화 작업을 진행할 때에는 task별로 이슈를 생성하고(혹은 이미 생성된 이슈에 코멘트를 달아 task를 할당 받고), 이슈별로 PR을 생성해 올리고 있다. 그리고 이슈별로 로컬 브랜치를 생성해 작업 내역들을 분리해 관리하고 있는데… 작업 도중에 외출하고 다녀와서 다른 브랜치로 전환해 작업하다보니  다른 이슈에 대한 작업 커밋을 같이 섞어 올려버렸다🤦 (<strong>PR을 생성하기 전에는 항상 git log와 git status를 생활화 하도록 하자…</strong>)</p>\n<br/>\n<h1 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h1>\n<p>순간 PR을 얼른 삭제하고 git reset으로 커밋내역을 싹 감아올린 다음에 새로 작업해서 올릴까 했지만 아무리 생각해도 너무 비효율적인 방법인 듯 해 구글링을 해보니 중간 커밋 내역만 삭제하는 방법이 있었다.</p>\n<br/>\n<p>먼저 <code class=\"language-text\">rebase -i</code> 로 interactive한 rebase를 시작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">rebase -i HEAD~2</code></pre></div>\n<p>여기서 HEAD<del>2는 rebase를 할 커밋의 범위를 나타낸다. (<code class=\"language-text\">HEAD~n</code> 가장 최신 커밋으로부터 n번째 커밋까지 수정하겠다는 뜻) 나는 가장 최신 커밋을 남겨두고, 그 바로 전(최신으로부터 두 번째) 커밋을 지울 것이기 때문에 HEAD</del>2 로 지정하였다.</p>\n<br/>\n<p>명령어를 실행하면 아래와 같이 내가 앞서 지정한 커밋내역과 함께 interactive rebase에서 적용할 수 있는 옵션 값들이 표시된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">pick 4bb2624993 1st commit\npick 8ef677a62b 2nd commit\n\n<span class=\"token comment\"># Rebase 36bee81493..8ef677a62b onto 36bee81493 (2 commands)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Commands:</span>\n<span class=\"token comment\"># p, pick &lt;commit> = use commit</span>\n<span class=\"token comment\"># r, reword &lt;commit> = use commit, but edit the commit message</span>\n<span class=\"token comment\"># e, edit &lt;commit> = use commit, but stop for amending</span>\n<span class=\"token comment\"># s, squash &lt;commit> = use commit, but meld into previous commit</span>\n<span class=\"token comment\"># f, fixup [-C | -c] &lt;commit> = like \"squash\" but keep only the previous</span>\n<span class=\"token comment\">#                    commit's log message, unless -C is used, in which case</span>\n<span class=\"token comment\">#                    keep only this commit's message; -c is same as -C but</span>\n<span class=\"token comment\">#                    opens the editor</span>\n<span class=\"token comment\"># x, exec &lt;command> = run command (the rest of the line) using shell</span>\n<span class=\"token comment\"># b, break = stop here (continue rebase later with 'git rebase --continue')</span>\n<span class=\"token comment\"># d, drop &lt;commit> = remove commit</span>\n<span class=\"token comment\"># l, label &lt;label> = label current HEAD with a name</span>\n<span class=\"token comment\"># t, reset &lt;label> = reset HEAD to a label</span>\n<span class=\"token comment\"># m, merge [-C &lt;commit> | -c &lt;commit>] &lt;label> [# &lt;oneline>]</span>\n<span class=\"token comment\"># .       create a merge commit using the original merge commit's</span>\n<span class=\"token comment\"># .       message (or the oneline, if no original merge commit was</span></code></pre></div>\n<br/>\n<p>여기서 우리는 drop으로 커밋을 삭제할 것이니 삭제할 커밋을 pick에서 drop으로 변경해준다(수정하기 전 키보드의 i를 눌러 수정모드로 변경한 뒤 수정 후 esc키 ⇒ :wq 를 입력해 빠져나오면 된다).</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">drop 4bb2624993 1st commit\npick 8ef677a62b 2nd commit\n\n<span class=\"token comment\"># Rebase 36bee81493..8ef677a62b onto 36bee81493 (2 commands)</span>\n<span class=\"token comment\">#</span>\n<span class=\"token comment\"># Commands:</span>\n<span class=\"token comment\"># p, pick &lt;commit> = use commit</span>\n<span class=\"token comment\"># r, reword &lt;commit> = use commit, but edit the commit message</span>\n<span class=\"token comment\"># e, edit &lt;commit> = use commit, but stop for amending</span>\n<span class=\"token comment\"># s, squash &lt;commit> = use commit, but meld into previous commit</span>\n<span class=\"token comment\"># f, fixup [-C | -c] &lt;commit> = like \"squash\" but keep only the previous</span>\n<span class=\"token comment\">#                    commit's log message, unless -C is used, in which case</span>\n<span class=\"token comment\">#                    keep only this commit's message; -c is same as -C but</span>\n<span class=\"token comment\">#                    opens the editor</span>\n<span class=\"token comment\"># x, exec &lt;command> = run command (the rest of the line) using shell</span>\n<span class=\"token comment\"># b, break = stop here (continue rebase later with 'git rebase --continue')</span>\n<span class=\"token comment\"># d, drop &lt;commit> = remove commit</span>\n<span class=\"token comment\"># l, label &lt;label> = label current HEAD with a name</span>\n<span class=\"token comment\"># t, reset &lt;label> = reset HEAD to a label</span>\n<span class=\"token comment\"># m, merge [-C &lt;commit> | -c &lt;commit>] &lt;label> [# &lt;oneline>]</span>\n<span class=\"token comment\"># .       create a merge commit using the original merge commit's</span>\n<span class=\"token comment\"># .       message (or the oneline, if no original merge commit was</span></code></pre></div>\n<br/>\n<p>그 다음 <code class=\"language-text\">git log</code> 와 <code class=\"language-text\">git status</code> 로 변경 내역이 잘 적용되었는지 확인한 후, origin으로 다시 push(이 때 -f 옵션을 주어 강제 푸시를 해야 올라간다)하면 PR에서 불필요한 커밋 내역이 삭제된 것을 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">git</span> push -f origin <span class=\"token operator\">&lt;</span>push할 브랜치명<span class=\"token operator\">></span></code></pre></div>\n<ul>\n<li>참고로 지난 squash 포스팅에도 적어두었지만 upstream의 커밋 내역은 origin을 수정하게 되면 자동으로 업데이트 된다.</li>\n</ul>","frontmatter":{"date":"August 01, 2022","title":"깃헙(github) 중간 커밋 삭제하기(git rebase -i / git drop)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220801-git-rebase-drop/"}},"prev":{"id":"461b000e-6650-5607-9853-4eb382e99399","html":"<h1 id=\"1-그림으로-배우는-알고리즘-제-3장-자료구조-7\" style=\"position:relative;\"><a href=\"#1-%EA%B7%B8%EB%A6%BC%EC%9C%BC%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EC%A0%9C-3%EC%9E%A5-%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0-7\" aria-label=\"1 그림으로 배우는 알고리즘 제 3장 자료구조 7 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 그림으로 배우는 알고리즘 제 3장: 자료구조 (7)</h1>\n<h2 id=\"35-정점과-간선으로-항목들의-관계를-그림으로-표현한-것이-그래프\" style=\"position:relative;\"><a href=\"#35-%EC%A0%95%EC%A0%90%EA%B3%BC-%EA%B0%84%EC%84%A0%EC%9C%BC%EB%A1%9C-%ED%95%AD%EB%AA%A9%EB%93%A4%EC%9D%98-%EA%B4%80%EA%B3%84%EB%A5%BC-%EA%B7%B8%EB%A6%BC%EC%9C%BC%EB%A1%9C-%ED%91%9C%ED%98%84%ED%95%9C-%EA%B2%83%EC%9D%B4-%EA%B7%B8%EB%9E%98%ED%94%84\" aria-label=\"35 정점과 간선으로 항목들의 관계를 그림으로 표현한 것이 그래프 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>35. 정점과 간선으로 항목들의 관계를 그림으로 표현한 것이 그래프</h2>\n<ul>\n<li>그래프: 2개 이상의 항목이 어떤 관계를 맺고 있는지 주목하고 그 관계를 그림으로 표현한 것.</li>\n<li>정점(노드): 표현하는 항목</li>\n<li>간선(Edge): 각 항목들의 관계를 표현하는 선</li>\n<li>그래프의 간선에는 방향성이라는 특성을 부여할 수 있다 ⇒ 방향있는 그래프 (ex. 일방통행)</li>\n<li>방향성이 없는 간선 ⇒ 방향없는 그래프</li>\n<li>간선에 가중치(비용)이 있는 그래프. ⇒ 가중 그래프</li>\n</ul>\n<br/>\n<h2 id=\"칼럼-base를-0으로-base를-1로\" style=\"position:relative;\"><a href=\"#%EC%B9%BC%EB%9F%BC-base%EB%A5%BC-0%EC%9C%BC%EB%A1%9C-base%EB%A5%BC-1%EB%A1%9C\" aria-label=\"칼럼 base를 0으로 base를 1로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>칼럼. BASE를 0으로? BASE를 1로?</h2>\n<ul>\n<li>1번째 요소 번호를 1로 정한 프로그래밍 언어\n<ul>\n<li>컴퓨터 개발 초창기의 프로그래밍에 자주 사용되던 언어들: Fortran, Pascal, Basic(초기형)</li>\n</ul>\n</li>\n<li>1번째 요소를 0으로 정한 프로그래밍 언어\n<ul>\n<li>현재 주류 언어들\n<ul>\n<li>C, C++, Java, C#, VisualBasic(BASIC)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"date":"August 03, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 자료구조 (7)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220803-algorithm-book-with-pic/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220802-kubernetes-pod-to-local/","nextSlug":"/220801-git-rebase-drop/","prevSlug":"/220803-algorithm-book-with-pic/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}