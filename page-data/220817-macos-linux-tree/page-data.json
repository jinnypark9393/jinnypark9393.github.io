{"componentChunkName":"component---src-templates-blog-template-js","path":"/220817-macos-linux-tree/","result":{"data":{"cur":{"id":"19fd73fd-5c12-58a3-b2ad-01aebdf9fa65","html":"<p>최근 Django 튜토리얼에 따라 실습을 진행하고 있는데, IDE외에 CLI도 꽤 사용하고 있어서 CLI환경에서 디렉터리 구조를 한 눈에 보고 싶어 <code class=\"language-text\">tree</code> 를 다운받았다. <code class=\"language-text\">tree</code> 는 CLI 환경에서 디렉터리 구조를 표시해주는 패키지로 MacOS나 Ubuntu의 경우 기본설치가 되어있지 않아 별도로 다운받아야 한다.</p>\n<br/>\n<h1 id=\"1-설치-방법\" style=\"position:relative;\"><a href=\"#1-%EC%84%A4%EC%B9%98-%EB%B0%A9%EB%B2%95\" aria-label=\"1 설치 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 설치 방법</h1>\n<p>macOS의 경우 패키지 매니저인 <code class=\"language-text\">brew</code>로 간단하게 <code class=\"language-text\">tree</code>를 다운로드 받을 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  myfirstsite git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ brew <span class=\"token function\">install</span> tree\nRunning <span class=\"token variable\"><span class=\"token variable\">`</span>brew update --auto-update<span class=\"token variable\">`</span></span><span class=\"token punctuation\">..</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Auto-updated Homebrew<span class=\"token operator\">!</span>\nUpdated <span class=\"token number\">2</span> taps <span class=\"token punctuation\">(</span>homebrew/core and homebrew/cask<span class=\"token punctuation\">)</span>.\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> New Formulae\naws2-wrap           glib-utils          ocl-icd             treefmt\ncargo-nextest       helix               openvi              ttdl\ncargo-udeps         libbpf              pocl                vile\ngit-codereview      nmrpflash           spr                 vulkan-loader\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> New Casks\nastrofox                   drawpile                   ved\ncalhash                    opencore-patcher\n\nYou have <span class=\"token number\">8</span> outdated formulae installed.\nYou can upgrade them with brew upgrade\nor list them with brew outdated.\n\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading https://ghcr.io/v2/homebrew/core/tree/manifests/2.0.2\n<span class=\"token comment\">######################################################################## 100.0%</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading https://ghcr.io/v2/homebrew/core/tree/blobs/sha256:ea1c2527bde74\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sh\n<span class=\"token comment\">######################################################################## 100.0%</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Pouring tree--2.0.2.monterey.bottle.tar.gz\n🍺  /usr/local/Cellar/tree/2.0.2: <span class=\"token number\">8</span> files, 151KB\n<span class=\"token operator\">==</span><span class=\"token operator\">></span> Running <span class=\"token variable\"><span class=\"token variable\">`</span>brew cleanup tree<span class=\"token variable\">`</span></span><span class=\"token punctuation\">..</span>.\nDisable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.\nHide these hints with HOMEBREW_NO_ENV_HINTS <span class=\"token punctuation\">(</span>see <span class=\"token variable\"><span class=\"token variable\">`</span><span class=\"token function\">man</span> brew<span class=\"token variable\">`</span></span><span class=\"token punctuation\">)</span>.</code></pre></div>\n<p>리눅스의 경우 마찬가지로 <code class=\"language-text\">apt-get</code> 혹은 <code class=\"language-text\">yum</code>과 같은 패키지 매니저를 이용해 다운로드 받을 수 있다.</p>\n<br/>\n<h1 id=\"2-사용-예시\" style=\"position:relative;\"><a href=\"#2-%EC%82%AC%EC%9A%A9-%EC%98%88%EC%8B%9C\" aria-label=\"2 사용 예시 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 사용 예시</h1>\n<p>디렉터리 구조를 파악하고 싶은 디렉터리로 이동해 tree 명령어를 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  myfirstsite git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ tree\n<span class=\"token builtin class-name\">.</span>\n├── manage.py\n└── myfirstsite\n    ├── __init__.py\n    ├── asgi.py\n    ├── settings.py\n    ├── urls.py\n    └── wsgi.py</code></pre></div>\n<br/>","excerpt":"최근 Django 튜토리얼에 따라 실습을 진행하고 있는데, IDE외에 CLI도 꽤 사용하고 있어서 CLI환경에서 디렉터리 구조를 한 눈에 보고 싶어  를 다운받았다.  는 CLI 환경에서 디렉터리 구조를 표시해주는 패키지로 MacOS나 Ubuntu의 경우 기본설치가 되어있지 않아 별도로 다운받아야 한다. 1. 설치 방법 macOS의 경우 패키지 매니저인 로 간단하게 를 다운로드 받을 수 있다. 리눅스의 경우 마찬가지로  혹은 과 같은 패키지 매니저를 이용해 다운로드 받을 수 있다. 2. 사용 예시 디렉터리 구조를 파악하고 싶은 디렉터리로 이동해 tree 명령어를 사용하면 된다.","frontmatter":{"date":"August 17, 2022","title":"MacOS/Linux - CLI환경에서 디렉터리 구조 한눈에 보는 방법(tree 명령어 다운로드)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220817-macos-linux-tree/"}},"next":{"id":"7775c163-6a42-58b2-bbdc-53db4e7637a6","html":"<p>이번에 Google Cloud Platform 클라우드 스터디잼 GKE 중급을 신청하게 되었는데, 강의를 들으며 정리한 내용을 올려보려 한다.</p>\n<h1 id=\"1-클라우드-컴퓨팅과-구글-클라우드\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85%EA%B3%BC-%EA%B5%AC%EA%B8%80-%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C\" aria-label=\"1 클라우드 컴퓨팅과 구글 클라우드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클라우드 컴퓨팅과 구글 클라우드</h1>\n<h2 id=\"클라우드-컴퓨팅의-특성\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EC%BB%B4%ED%93%A8%ED%8C%85%EC%9D%98-%ED%8A%B9%EC%84%B1\" aria-label=\"클라우드 컴퓨팅의 특성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클라우드 컴퓨팅의 특성</h2>\n<ul>\n<li>온디맨드 &#x26; 셀프서비스: 필요한 처리능력, 스토리지, 네트워크를 사람의 노력 없이 확보 수 있다.</li>\n<li>넓은 네트워크 액세스: 어디서나 네트워크를 통해 리소스에 접근</li>\n<li>리소스 풀링: 제공업체에서 대규모 풀의 리소스를 고객에게 할당(규모의 경제)</li>\n<li>리소스 탄력적 공급: 리소스가 추가로 필요하면 신속히 확보할 수 있고 적게 필요하면 축소</li>\n<li>측정된 서비스: 서비스를 사용하거나 예약하는 만큼만 지불</li>\n</ul>\n<h2 id=\"google-cloud-platformgcp\" style=\"position:relative;\"><a href=\"#google-cloud-platformgcp\" aria-label=\"google cloud platformgcp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Google Cloud Platform(GCP)</h2>\n<p>구글 클라우드는 다양한 서비스를 제공한다. 예를들어 코드를 클라우드에서 실행하고 싶을  경우, 아래와 같은 컴퓨팅 리소스 옵션을 제공한다.</p>\n<ul>\n<li>Compute Engine: 주문형 가상 머신을 실행하게 해 주는 Google Cloud Infrastructure-as-a-Service 솔루션</li>\n<li>GKE:  클라우드 환경에서 컨테이너화된 애플리케이션을 실행하며, 코드를 패키지화하는 방식으로 Kubernetes는 컨테이너 내부에서 코드를 조정</li>\n<li>App Engine: 완전 관리형 Platform-as-a-Service 프레임워크입니다 즉 인프라에 대한 걱정 없이 클라우드에서 코드를 실행</li>\n<li>Cloud Functions: 완전 서버리스 실행 환경 또는 Function-as-a-Service</li>\n</ul>\n<p>데이터베이스의 경우, 아래와 같은 옵션을 제공한다.</p>\n<ul>\n<li>사용자 직접 설치: Compute Engine / GKE</li>\n<li>구글의 관리형 서비스\n<ul>\n<li>Cloud Bigtable</li>\n<li>Cloud Storage</li>\n<li>Cloud SQL</li>\n<li>Cloud Spanner</li>\n<li>Datastore</li>\n</ul>\n</li>\n</ul>\n<p>또한, GCP는 완전 관리형 및 빅데이터 머신러닝 서비스를 제공한다.</p>\n<ul>\n<li>빅테이터\n<ul>\n<li>BigQuery</li>\n<li>Pub / Sub</li>\n<li>Dataflow</li>\n<li>Dataproc</li>\n<li>AI Platform Notebooks</li>\n</ul>\n</li>\n<li>머신러닝\n<ul>\n<li>Vision API</li>\n<li>AI Platform</li>\n<li>Speech-to-Text API</li>\n<li>Cloud Translation API</li>\n<li>Cloud Natural Language API</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"2-리소스-관리\" style=\"position:relative;\"><a href=\"#2-%EB%A6%AC%EC%86%8C%EC%8A%A4-%EA%B4%80%EB%A6%AC\" aria-label=\"2 리소스 관리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 리소스 관리</h1>\n<p>구글 클라우드는 멀티 리전, 리전, 영역(zone)을 통해 리소스를 제공한다.</p>\n<p><strong>멀티 리전</strong>은 전 세계를 크게 <strong>아메리카, 유럽, 아시아 태평양</strong> 세 지역으로 나눈다.</p>\n<p>이 멀티 리전들은 리전으로 나뉘게 되는데, 리전은 같은 대륙 내에서 독립된 지리적 위치이다. 리전 내에서는 네트워크 연결이 빠르다(95 percentile에서 1ms 미만의 TTS).</p>\n<p>리전은 영역으로 나뉘게 되는데, 영역이란 집중된 지리적 위치 내에 있는 GCP 리소스의 배포 위치(한 리전 내에 위치한 데이터센터 혹은 데이터센터들)를 뜻한다.</p>\n<p>Compute Engine 가상 머신 인스턴스는 특정 영역 내에 위치하기 때문에, 해당 영역이 사용 불가 상태가 되면 가상 머신과 워크로드 또한 사용할 수 없게 된다. GKE도 마찬가지로 GCE를 사용해 비슷한 영향을 받을 수 있다. 따라서 멀티 영역에 애플리케이션을 배포하여 내결함성과 고가용성을 확보한다.</p>\n<p>Google 데이터 센터는 Google 네트워크를 통해 연결된다. 공개된 추정치에 ,먄 Google 네트워크는 매일 전 세계 인터넷 트래픽의 40%를 담당하는데, 이는 지구에서 가장 큰 네트워크이다.</p>\n<p>Google 네트워크는 사용자 앱을 포함한 모든 애플리케이션에 최대 처리량과 최소 지연 시간을 제공하도록 설계되었고, Google 네트워크는 전 세계 90개 이상의 인터넷 교환 시설(Internet Exchange: IX)과 100개 이상의 접속 지점(Point of Presence: PoP)을 통해 공개 인터넷을 연결한다.</p>\n<p>사용자가 Google 리소스로 트래픽을 전송하면, Google은 지연 시간이 가장 낮은 에지(edge) 네트워크 위치에서 사용자의 요청에 응답한다. Google의 에지 캐싱 네트워크는 지연 시간을 최소화하도록 사용자 가까이에 콘텐츠를 배치하게 되며, GKE를 비롯한 GCP상의 애플리케이션들은 이 에지 네트워크의 이점을 활용할 수 있다.</p>\n<p>GCP 리소스는 지리적 위치를 지정할 수 있고, 대부분 멀티 리전 수준, 리전 수준, 영역 수준 중 어느 수준에서 지정할지도 결정할 수 있다.</p>\n<p><strong>영역(Zone) 리소스</strong>는 단일 영역 내에서 실행된다. 따라서 해당 영역을 사용할 수 없게 되면 리소스 역시 사용할 수 없다. 예를 들어 GCE 가상 머신 인스턴스와 영구 디스크, GKE의 구성요소의 하나인 ‘노드’가 영역 리소스에 해당한다.</p>\n<p><strong>리전(Region) 리소스</strong>는 하나의 리전 내, 여러 영역에 걸쳐 실행된다. 리전 리소스를 사용하는 앱은 가용성을 높이기 위해 중복 배포될 수 있다. GKE를 사용해 한 리전 내의 여러 영역에 리소스를 분산할 수 있으며, Cloud Datastore도 중복 방식을 통해 배포할 수 있다.</p>\n<p>마지막으로 <strong>전역(Global) 리소스</strong>는 멀티 리전을 통해 관리된다. 전역 리소스는 애플리케이션의 가용성을 극대화한다. 예를 들어 HTTPS 로드밸런서와 VPC 네트워크가 해당된다.</p>\n<p>GCP 리소스는 위치와 상관없이 **프로젝트(Project)**에 속하게 된다. </p>\n<ul>\n<li>\n<p>프로젝트(Project): GCP 리소스들를 구성하는 기본 수준</p>\n</li>\n<li>\n<p>리소스 및 서비스의 생성 및 사용은 물론 결제, API, 권한 관리의 기초</p>\n</li>\n<li>\n<p>리전과 영역 = 물리적 구성 vs 프로젝트 = 논리적 구성</p>\n</li>\n<li>\n<p>프로젝트는 손쉽게 생성, 관리, 삭제가 가능하며 실수로 삭제할 경우 복구할 수 있다.</p>\n</li>\n<li>\n<p>각 프로젝트는 고유한 프로젝트 ID와 프로젝트 번호가 부여된다.</p>\n</li>\n<li>\n<p>프로젝트 이름, 필터링을 위한 라벨 지정 가능(라벨 = 변경가능 / 프로젝트 ID &#x26; 프로젝트 번호= 고정)</p>\n</li>\n<li>\n<p>프로젝트는 ’<strong>폴더(folder)</strong>‘라는 그룹으로 묶어(프로젝트 &#x3C; 폴더) 기업의 계층 구조를 반영 및 기업의 정책을 알맞은 수준에서 적용</p>\n<ul>\n<li>폴더 내 다른 폴더 중첩 가능(부서별 폴더 > 팀별 하위 폴더 생성)</li>\n<li>폴더를 사용하려면 조직이 필요</li>\n</ul>\n</li>\n<li>\n<p>모든 폴더는 하나의 **조직(organization)**에 포함(프로젝트 &#x3C; 폴더 &#x3C; 조직)</p>\n<ul>\n<li>조직: GCP 리소스 계층 구조의 루트 노드</li>\n<li>조직이 없더라도 GCP를 사용할 수 있다.</li>\n<li>조직을 이용해 기업 전반에 적용되는 정책을 설정</li>\n<li>조직 설정은 무료</li>\n<li>조직 ID(고정) &#x26; 표시 이름(변경 가능)</li>\n<li>여러 부서와 팀의 리소스 관리 편리</li>\n</ul>\n</li>\n<li>\n<p>Cloud IAM(Cloud Identity and Access Management)</p>\n<ul>\n<li>사용자가 사용하는 GCP 리소스에 세부 액세스 제어</li>\n<li>신뢰 경계(Trust boundary) &#x26; 리소스 격리 구현하는 계층구조 정의 가능</li>\n<li>정책은 낮은 레벨로 상속된다 (조직 레벨 적용 → 폴더, 프로젝트, 리소스에 정책 적용)</li>\n<li>낮은 레벨에서 정책을 적용해 추가 권한 부여</li>\n</ul>\n</li>\n<li>\n<p>결제(Billing) → 프로젝트 수준에서 누적</p>\n</li>\n<li>\n<p>리소스 계층 구조 = 인사 조직도 vs. 프로젝트 결제: 비용 센터 구조</p>\n<ul>\n<li>리소스 계층 구조 → GCP 공유 보안 모델에서 중요</li>\n<li>GCP 상의 애플리케이션의 경우 하위 레이어 보안을 구글이 담당</li>\n<li>데이터 보안 등 상위 레이어는 사용자 책임 → 리소스 계층구조, Cloud IAM 등으로 구현</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"3-청구billing\" style=\"position:relative;\"><a href=\"#3-%EC%B2%AD%EA%B5%ACbilling\" aria-label=\"3 청구billing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 청구(Billing)</h1>\n<ul>\n<li>\n<p>GCP 결제: GCP 프로젝트 수준에서 설정</p>\n</li>\n<li>\n<p>GCP 프로젝트를 정의할 때 **결제 계정(Billing Account)**을 연결해야 한다.</p>\n<ul>\n<li>결제 계정에서 지불 옵션 등 모든 결제 정보를 설정</li>\n<li>결제 계정은 하나 이상의 프로젝트에 연결할 수 있다</li>\n<li>결제 계정을 연결하지 않은 프로젝트는 무료 GCP 서비스만 사용 가능</li>\n<li>결제 계정은 매월 또는 기준액 도달 시 자동으로 청구 및 인보이스 되도록 설정 가능</li>\n<li>결제 하위 계정을 설정하면 프로젝트 결제를 분리할 수 있다(Reseller의 경우 고객별로 하위 계정 사용)</li>\n</ul>\n</li>\n<li>\n<p>과다 청구 방지 도구</p>\n<ul>\n<li>예산 및 알림\n<ul>\n<li>결제 계정 수준 혹은 프로젝트 수준에서 예산 정의 가능</li>\n<li>알림 설정으로 비용이 예산 한도에 근접할 때 알림 &#x26; 알림에 대한 응답으로 웹훅이 호출되도록 설정 및 자동화 제어 가능(예: 알림 발생 시 리소스 종료 스크립트 트리거 및 장애 신고 등 기능)</li>\n</ul>\n</li>\n<li>결제 내보내기에서 보기\n<ul>\n<li>외부 분석 검색이 손쉬운 곳에 결제 세부정보를 저장(예: BigQuery 데이터 셋 &#x26; Cloud Storage 버킷)</li>\n</ul>\n</li>\n<li>보고서 보기\n<ul>\n<li>콘솔의 시각적 도구로 프로젝트 또는 서비스를 기준으로 지출을 모니터링</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>할당량(Quotas) 설정</p>\n<ul>\n<li>예기치 못한 추가적인 결제 청구를 제한</li>\n<li>할당량은 오류나 악성 공격으로 인해 리소스를 과소비하는 것을 방지하기 위해 설계</li>\n<li>프로젝트 수준에서 적용</li>\n<li>할당량 종류\n<ul>\n<li>비율 할당량: 특정 시점을 기준으로 재설정 가능</li>\n<li>배정 할당량: 프로젝트 내에서 보유할 수 있는 리소스 수를 제어(시간이 지나도 재설정되지 않음)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"4-google-cloud-와-상호-작용\" style=\"position:relative;\"><a href=\"#4-google-cloud-%EC%99%80-%EC%83%81%ED%98%B8-%EC%9E%91%EC%9A%A9\" aria-label=\"4 google cloud 와 상호 작용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. Google Cloud 와 상호 작용</h1>\n<ul>\n<li>\n<p>Google 도구 및 인터페이스</p>\n<ul>\n<li>Google Cloud Platform Console / 모바일 앱</li>\n<li>Cloud SDK Cloud Console</li>\n<li>Cloud Shell</li>\n<li>REST 기반 API (해당 강의에서는 생략): 개발자가 GCP 리소스를 할당 및 관리하는 앱 구축</li>\n</ul>\n</li>\n<li>\n<p><strong>GCP Console</strong></p>\n<ul>\n<li>웹 기반 그래픽 사용자 인터페이스</li>\n<li>마우스 클릭으로 리소스 관리</li>\n<li>GCP 프로젝트와 리소스를 가시적으로 파악</li>\n<li>사용 방법: 웹브라우저로 console.cloud.google.com에 접속하여 GCP Console에 로그인</li>\n</ul>\n</li>\n<li>\n<p><strong>Cloud Console 모바일 앱</strong></p>\n<ul>\n<li>iOS와 Android에서 사용 가능</li>\n<li>가상 머신 관리, 가상 머신 로그 조회, 프로젝트의 최신 결제 정보 확인, 예산을 초과하는 프로젝트에 대해 결제 알림 받기, 커스텀 그래프를 설정하여 CPU 사용량과 네트워크 사용량 초당 요청 수, 서버 오류와 같은 주요 항목 표시 등</li>\n</ul>\n</li>\n<li>\n<p><strong>Google Cloud SDK</strong></p>\n<ul>\n<li>Cloud SDK를 다운로드 및 원하는 컴퓨터에 설치하여 사용</li>\n<li>Google Cloud Platform용 명령줄 도구 모음: gcloud 및 kubectl 명령어, gsutil 및 bq 유틸리티 등</li>\n<li>위의 CLI 도구를 대화형으로 사용하거나, 자동화 스크립트에서 사용 가능</li>\n<li>다양한 프로그래밍 언어를 위한 클라이언트 라이브러리 포함</li>\n</ul>\n</li>\n<li>\n<p><strong>Cloud Shell</strong></p>\n<ul>\n<li>사용 중인 머신에서 Cloud SDK 설치가 어려운 경우 사용: 인증된 &#x26; 최신 상태로 사용 가능\n<ul>\n<li>실제로는 과금이 되지 않는 임시 GCE 가상 머신 인스턴스를 이용해 빌드되어있음 (5GB 영구 디스크 스토리지가 연결)</li>\n<li>사용자가 상호작용을 멈추면 가상머신의 작동이 중단되며, 다시 접속시 작동을 재시작</li>\n<li>따라서 Cloud Shell에서 Production 웹서버 사용하지 않는 것을 권장</li>\n</ul>\n</li>\n<li>브라우저에서 직접 명령줄을 통해 클라우드 리소스에 액세스</li>\n<li>웹 미리보기 기능 탑재</li>\n<li>GKE 리소스를 비롯한 GCP Console 프로젝트 및 리소스에 대한 액세스 인증 기본 제공</li>\n<li>Cloud Shell 코드 편집기로 브라우저에서 Cloud Shell 환경 내 파일을 실시간으로 편집 가능</li>\n<li>Cloud Shell 명령 프롬프트에서 텍스트 편집기 사용 가능</li>\n<li>코드 우선 앱, 컨테이너 기반 워크로드 작업 시 편리: 변경사항을 다운로드, 업로드하지 않아도 간편하게 파일을 편집(다른 경우에는 적합하지 않을 수 있음)</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"5-컴퓨팅-옵션\" style=\"position:relative;\"><a href=\"#5-%EC%BB%B4%ED%93%A8%ED%8C%85-%EC%98%B5%EC%85%98\" aria-label=\"5 컴퓨팅 옵션 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 컴퓨팅 옵션</h1>\n<p><a href=\"https://cloud.google.com/hosting-options\">컴퓨팅 워크로드를 다루기 위한 옵션</a>들은 아래와 같다.</p>\n<table>\n<thead>\n<tr>\n<th>서비스명</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Kubernetes Engine</td>\n<td>컨테이너화 된 앱들을 배포하기 위한 관리형 환경</td>\n</tr>\n<tr>\n<td>Compute Engine</td>\n<td>가상 머신을 배포하기 위한 관리형 환경</td>\n</tr>\n<tr>\n<td>App Engine</td>\n<td>애플리케이션을 배포하기 위한 관리형 서버리스 플랫폼</td>\n</tr>\n<tr>\n<td>Cloud Functions</td>\n<td>이벤트 주도형 함수를 배포하기 위한 관리형 서버리스 플랫폼</td>\n</tr>\n</tbody>\n</table>\n<p>우리는 이 중에서 Kubernetes Engine에 대해 중점적으로 다룰 것이다.</p>\n<br/>","frontmatter":{"date":"August 16, 2022","title":"GCP - Cloud Study Jam Korea GKE 중급","categories":"클라우드","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220816-cloud-gcp-gke-intermediate1/"}},"prev":{"id":"07693753-4f44-5a65-ab72-642f4f22570a","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>최근 쿠버네티스 한글화 프로젝트를 비롯한 오픈소스 프로젝트에 기여를 진행하고 있는데, 필요할 때 매번 관련 명령어를 찾기 귀찮아서(?) 블로그에 기록해놓으려고 한다.</p>\n<br/>\n<h1 id=\"2-upstream이란\" style=\"position:relative;\"><a href=\"#2-upstream%EC%9D%B4%EB%9E%80\" aria-label=\"2 upstream이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. upstream이란?</h1>\n<p>쿠버네티스 공식문서와 같은 오픈소스 프로젝트의 경우에는 작업자가 로컬에서 바로 원본 저장소로 코드를 push하는 형태가 아니라 개인 원격 저장소(ex. 깃허브)에 fork(소스코드를 복사하는 개념과 유사하다고 생각하면 된다) 한다. 그리고 로컬에서 작업한 내용을 먼저 개인 원격 저장소에 push한 뒤, 원본 저장소에 pull request(repository 측에서 내 수정사항을 당겨받아(pull)달라는 요청)를 올려 관리자의 승인을 받아 반영을 하게 된다. 이 때, 원본 브랜치를 <code class=\"language-text\">upstream</code>, 내 개인 원격 저장소를 <code class=\"language-text\">origin</code>이라고 한다.</p>\n<br/>\n<p>이렇듯, <code class=\"language-text\">upstream</code>은 일반적으로 fork한 원본 저장소를 뜻하고, <code class=\"language-text\">origin</code>은 fork한 저장소를 뜻하게 된다(다만 fork를 하지 않고, 원본 저장소에 작업자가 바로 push하게 될 경우 원본 저장소를 origin으로 설정하기도 한다).</p>\n<br/>\n<h1 id=\"3-upstream-브랜치-설정-방법\" style=\"position:relative;\"><a href=\"#3-upstream-%EB%B8%8C%EB%9E%9C%EC%B9%98-%EC%84%A4%EC%A0%95-%EB%B0%A9%EB%B2%95\" aria-label=\"3 upstream 브랜치 설정 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. upstream 브랜치 설정 방법</h1>\n<p>따라서, 오픈소스 프로젝트를 포크해 git clone으로 로컬에 소스코드를 다운받았을 경우, 이미 upstream 브랜치가 설정되어있지 않았다면 upstream을 설정해 주어야 한다.</p>\n<br/>\n<p>참고로, upstream을 설정하지 않아도 origin만 존재한다면 코드를 origin에 push해 upstream으로 pull request를 생성하는 것 자체에는 문제가 없을 수 있다. 하지만, 로컬에 upstream을 생성하지 않을 경우, upstream과 싱크를 맞출 수 없어 conflict이 발생하거나, 소스코드를 fork한 이후 upstream에 새로운 브랜치가 생성되어있을 경우 브랜치를 로컬에 받아올 수 없으니 반드시 설정해 주도록 하자.</p>\n<br/>\n<p>먼저 upstream branch가 추가되어있는지 확인하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote -v\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></code></pre></div>\n<p>origin만 존재하고 upstream이 추가되어있지 않다.</p>\n<br/>\n<p><code class=\"language-text\">git remote add</code> 명령어를 사용해 upstream을 추가해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote <span class=\"token function\">add</span> upstream https://github.com/kubernetes/website.git</code></pre></div>\n<br/>\n<p>다시 확인해보면 upstream이 추가된 것을 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> remote -v\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\norigin\thttps://github.com/jinnypark9393/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span>\nupstream\thttps://github.com/kubernetes/website.git <span class=\"token punctuation\">(</span>fetch<span class=\"token punctuation\">)</span>\nupstream\thttps://github.com/kubernetes/website.git <span class=\"token punctuation\">(</span>push<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>이 상황에서 만약 새로운 브랜치를 업데이트 하고싶다면 아래와 같이 <code class=\"language-text\">fetch</code>명령어를 작성해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  website git:<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token function\">git</span> fetch upstream dev-1.24-ko.3\nremote: Enumerating objects: <span class=\"token number\">8067</span>, done.\nremote: Counting objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3264</span>/3264<span class=\"token punctuation\">)</span>, done.\nremote: Compressing objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">3</span>/3<span class=\"token punctuation\">)</span>, done.\nremote: Total <span class=\"token number\">8067</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3262</span><span class=\"token punctuation\">)</span>, reused <span class=\"token number\">3261</span> <span class=\"token punctuation\">(</span>delta <span class=\"token number\">3261</span><span class=\"token punctuation\">)</span>, pack-reused <span class=\"token number\">4803</span>\nReceiving objects: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">8067</span>/8067<span class=\"token punctuation\">)</span>, <span class=\"token number\">2.66</span> MiB <span class=\"token operator\">|</span> <span class=\"token number\">2.86</span> MiB/s, done.\nResolving deltas: <span class=\"token number\">100</span>% <span class=\"token punctuation\">(</span><span class=\"token number\">6258</span>/6258<span class=\"token punctuation\">)</span>, completed with <span class=\"token number\">985</span> <span class=\"token builtin class-name\">local</span> objects.\nFrom https://github.com/kubernetes/website\n * branch                  dev-1.24-ko.3 -<span class=\"token operator\">></span> FETCH_HEAD\n * <span class=\"token punctuation\">[</span>new branch<span class=\"token punctuation\">]</span>            dev-1.24-ko.3 -<span class=\"token operator\">></span> upstream/dev-1.24-ko.3</code></pre></div>\n<br/>","frontmatter":{"date":"August 18, 2022","title":"Git/Github - upstream이란? upstream 원격 저장소 추가하는 방법","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220818-git-remote-upstream/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220817-macos-linux-tree/","nextSlug":"/220816-cloud-gcp-gke-intermediate1/","prevSlug":"/220818-git-remote-upstream/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}