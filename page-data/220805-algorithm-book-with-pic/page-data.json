{"componentChunkName":"component---src-templates-blog-template-js","path":"/220805-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"777e46e5-3691-567a-a539-5aa0788ae072","html":"<h1 id=\"제-4장-기본적인-알고리즘2\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-4%EC%9E%A5-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%982\" aria-label=\"제 4장 기본적인 알고리즘2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 4장: 기본적인 알고리즘(2)</h1>\n<h2 id=\"38-배열-데이터의-합을-계산하려면-더한-값을-저장할-변수를-준비한다\" style=\"position:relative;\"><a href=\"#38-%EB%B0%B0%EC%97%B4-%EB%8D%B0%EC%9D%B4%ED%84%B0%EC%9D%98-%ED%95%A9%EC%9D%84-%EA%B3%84%EC%82%B0%ED%95%98%EB%A0%A4%EB%A9%B4-%EB%8D%94%ED%95%9C-%EA%B0%92%EC%9D%84-%EC%A0%80%EC%9E%A5%ED%95%A0-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%A4%80%EB%B9%84%ED%95%9C%EB%8B%A4\" aria-label=\"38 배열 데이터의 합을 계산하려면 더한 값을 저장할 변수를 준비한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>38. 배열 데이터의 합을 계산하려면 더한 값을 저장할 변수를 준비한다</h2>\n<ul>\n<li>\n<p>여러 데이터의 합을 구하는 처리 ⇒ 배열 합계 알고리즘</p>\n<ul>\n<li>예시\n<ul>\n<li>시험점수의 총 합 계산</li>\n<li>일일 입장객의 수를 통해 해당 월 전체 입장객 수 구하기</li>\n<li>각 지점의 매출액을 합해 전 지점 매출액 구하기</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>데이터 N개의 합을 구하는 계산식</p>\n<ul>\n<li>DATA[0] + DATA[1] + … + DATA[N-1]</li>\n</ul>\n</li>\n<li>\n<p>다음과 같은 반복처리를 통해 구할 수 있다.</p>\n<p><strong>1단계</strong>: 합계를 저장하는 변수 SUM 을 0으로 초기화</p>\n<p><strong>2단계</strong>: 합계에 더하는 배열 요소를 가리키는 첨자를 저장하는 변수 I를 0으로 초기화</p>\n<p><strong>3단계</strong>: I가 N 미만이라면 다음 4~5단계를 반복한다</p>\n<p><strong>4단계</strong>: SUM + DATA[I]를 계산하여 그 값을 SUM에 대입한다</p>\n<p><strong>5단계</strong>: I의 값에 1을 더한다</p>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"39-배열-안-요소의-개수를-구하려면-카운터를-준비한다\" style=\"position:relative;\"><a href=\"#39-%EB%B0%B0%EC%97%B4-%EC%95%88-%EC%9A%94%EC%86%8C%EC%9D%98-%EA%B0%9C%EC%88%98%EB%A5%BC-%EA%B5%AC%ED%95%98%EB%A0%A4%EB%A9%B4-%EC%B9%B4%EC%9A%B4%ED%84%B0%EB%A5%BC-%EC%A4%80%EB%B9%84%ED%95%9C%EB%8B%A4\" aria-label=\"39 배열 안 요소의 개수를 구하려면 카운터를 준비한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>39. 배열 안 요소의 개수를 구하려면 카운터를 준비한다</h2>\n<ul>\n<li>\n<p>배열 데이터의 요소 개수</p>\n<ol>\n<li>미리 고정 값으로 정함</li>\n<li>다른 변수로 관리</li>\n<li>배열 마지막 요소의 끝에 보초 값 저장</li>\n</ol>\n</li>\n<li>\n<p>보초 값으로 배열 마지막 요소를 관리하는 배열에서 요소의 개수를 구하는 알고리즘</p>\n<ul>\n<li>예시: 어떤 시험에 응시한 모든 학생의 점수가 저장된 배열 JUM\n<ul>\n<li>배열 JUM의 끝에 ‘-1’을 저장해 응시자 수를 관리(예: 응시자 수가 5명일 경우 JUM[5]에 -1이 저장</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>요소의 개수를 세는 변수 COUNT를 이용해 다음과 같이 반복처리한다.</p>\n<p><strong>1단계</strong>: 요소의 개수를 센다(카운터). 변수 COUNT를 0으로 초기화 한다.</p>\n<p><strong>2단계</strong>: 요소의 값을 가리키기 위한 첨자를 저장하는 변수 I를 0으로 초기화 한다.</p>\n<p><strong>3단계</strong>: JUM[I]가 보초값(-1)을 가리키지 않는 동안 당므의 4~5단계를 반복한다.</p>\n<p><strong>4단계</strong>: COUNT 값에 1을 더한다.</p>\n<p><strong>5단계</strong>: I 값에 1을 더한다.</p>\n</li>\n</ul>\n<p><br/><br/></p>","excerpt":"제 4장: 기본적인 알고리즘(2) 38. 배열 데이터의 합을 계산하려면 더한 값을 저장할 변수를 준비한다 여러 데이터의 합을 구하는 처리 ⇒ 배열 합계 알고리즘 예시 시험점수의 총 합 계산 일일 입장객의 수를 통해 해당 월 전체 입장객 수 구하기 각 지점의 매출액을 합해 전 지점 매출액 구하기 데이터 N개의 합을 구하는 계산식 DATA[0] + DATA[1] + … + DATA[N-1] 다음과 같은 반복처리를 통해 구할 수 있다. 1단계: 합계를 저장하는 변수 SUM 을 0으로 초기화 2단계: 합계에 더하는 배열 요소를 가리키는 첨자를 저장하는 변수 I를 0으로 초기화 3단계: I가 N 미만이라면 다음 4~5단계를 반복한다 4단계: SUM + DATA[I]를 계산하여 그 값을 SUM에 대입한다 5단계: I의 값에 1을 더한다  39. 배열 안 요소의 개수를 구하려면 카운터를 준비한다 배열 데이터의 요소 개수 미리 고정 값으로 정함 다른 변수로 관리 배열 마지막 요소의 끝에 보초 값…","frontmatter":{"date":"August 05, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(2)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220805-algorithm-book-with-pic/"}},"next":{"id":"124907a4-11c5-5781-a21a-ae0725b8d13f","html":"<h1 id=\"36-1n의-합을-구하려면-반복-처리한다\" style=\"position:relative;\"><a href=\"#36-1n%EC%9D%98-%ED%95%A9%EC%9D%84-%EA%B5%AC%ED%95%98%EB%A0%A4%EB%A9%B4-%EB%B0%98%EB%B3%B5-%EC%B2%98%EB%A6%AC%ED%95%9C%EB%8B%A4\" aria-label=\"36 1n의 합을 구하려면 반복 처리한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>36. 1~N의 합을 구하려면 반복 처리한다.</h1>\n<ul>\n<li>\n<p>1~N의 합은 다음 계산식으로 구할 수 있다.</p>\n<ul>\n<li>1 + 2 + 3 + … + (N-1) + N</li>\n</ul>\n</li>\n<li>\n<p>다음과 같이 반복처리를 통해 구할 수 있다.</p>\n<p><strong>1단계</strong>: 합계를 저장하는 변수 SUM을 0으로 초기화한다.</p>\n<p><strong>2단계</strong>: 합계에 더할 값을 저장하는 변수 VALUE에 1을 저장한다.</p>\n<p><strong>3단계</strong>: VALUE에 N 이하인 동안에 다음 4~5단계를 반복한다.</p>\n<p><strong>4단계</strong>: SUM + VALUE를 계산해 그 값을 SUM에 대입한다.</p>\n<p><strong>5단계</strong>: VALUE값을 1 증가시킨다.</p>\n</li>\n</ul>\n<br/>\n<h1 id=\"37-수열의-값을-유지하려면-배열을-사용한다\" style=\"position:relative;\"><a href=\"#37-%EC%88%98%EC%97%B4%EC%9D%98-%EA%B0%92%EC%9D%84-%EC%9C%A0%EC%A7%80%ED%95%98%EB%A0%A4%EB%A9%B4-%EB%B0%B0%EC%97%B4%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"37 수열의 값을 유지하려면 배열을 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>37. 수열의 값을 유지하려면 배열을 사용한다</h1>\n<ul>\n<li>\n<p>다양한 수열의 값을 유지하려면 배열을 사용하는 것이 가장 간단하다.</p>\n</li>\n<li>\n<p>예: 피보나치 수열을 배열에 저장하고 유지하자</p>\n<ul>\n<li>피보나치 수열: n번째(n ≥ 0)의 값을 Fn이라고 했을 때, 아래 조건을 만족하는 수열.</li>\n<li>F0=0</li>\n<li>F1=1</li>\n<li>Fn+2 = Fn + Fn+1 (n≥0)</li>\n</ul>\n</li>\n<li>\n<p>1번째 요소부터 N개(n ≥ 2)의 피보나치 수열을 배열 F에 저장하는 알고리즘은 아래와 같다.</p>\n<p><strong>1단계</strong>: F[0]에 0을, F[1]에 1을 대입한다.</p>\n<p><strong>2단계</strong>: 변수 I에 2를 대입한다.</p>\n<p><strong>3단계</strong>: F[4] = F[2] + F[3]</p>\n<p><strong>4단계</strong>: I가 N 미만인 동안, 아래 5~6단계를 반복한다.</p>\n<p><strong>5단계</strong>: F[I] 에 F[I-2] + F[I-1]을 대입한다.</p>\n<p><strong>6단계</strong>: I의 값을 1 더한다.</p>\n</li>\n</ul>","frontmatter":{"date":"August 04, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220804-algorithm-book-with-pic/"}},"prev":{"id":"0c820bc9-e72c-5739-855f-28252493dcdf","html":"<p>gatsby(정적 웹사이트 생성기)에서 맘에 드는 테마를 발견해 gatsby로 이관하였다.\n기존 포스팅은 아직 이관중.</p>","frontmatter":{"date":"August 08, 2022","title":"블로그 리뉴얼(jekyll 에서 gatsby로)","categories":"etc","author":"jinnypark9393","emoji":"📔"},"fields":{"slug":"/220808-etc-renew-blog/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220805-algorithm-book-with-pic/","nextSlug":"/220804-algorithm-book-with-pic/","prevSlug":"/220808-etc-renew-blog/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}