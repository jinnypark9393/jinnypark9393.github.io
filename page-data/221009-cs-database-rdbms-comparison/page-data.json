{"componentChunkName":"component---src-templates-blog-template-js","path":"/221009-cs-database-rdbms-comparison/","result":{"data":{"cur":{"id":"77bae7c1-425b-50ad-b415-5f3d74ae524a","html":"<h1 id=\"데이터베이스database-비교---oracle-mysql-postgresql-sqlite\" style=\"position:relative;\"><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4database-%EB%B9%84%EA%B5%90---oracle-mysql-postgresql-sqlite\" aria-label=\"데이터베이스database 비교   oracle mysql postgresql sqlite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>데이터베이스(Database) 비교 - Oracle, MySQL, PostgreSQL, SQLite</h1>\n<h2 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h2>\n<p>이전 회사 팀원분들과 토이 프로젝트를 준비하고 있는데, 데이터베이스를 선정하기 전 각 데이터베이스에 어떤 장단점이 있는지 살펴보았다. 데이터베이스는 필요에 따라 데이터를 일정한 형태로 저장해 놓는 것을 뜻하는데, 이 데이터베이스를 관리할 수 있는 시스템을 DBMS라고 한다. DBMS에는 관리형 데이터베이스 시스템(RDBMS: Relational Database System)과, NoSQL로 구분되는데, 이번에는 RDBMS의 대표격인 Oracle, MySQL, PostgreSQL, 그리고 Django 프레임워크에서 기본적인 연동이 제공되는 SQLite를 비교해보도록 하겠다.</p>\n<br/>\n<h2 id=\"2-oracle\" style=\"position:relative;\"><a href=\"#2-oracle\" aria-label=\"2 oracle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Oracle</h2>\n<ul>\n<li>장점\n<ul>\n<li>고성능(빠른 속도)</li>\n<li>여러 가지 기능 제공</li>\n<li>백업 등 안정성</li>\n<li>대기업에서 많이 사용</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>라이선스 비용이 비쌈</li>\n<li>유지보수 비용 비쌈</li>\n<li>무료 버전의 용량 및 기간 제한 존재</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"3-mysqlmariadb\" style=\"position:relative;\"><a href=\"#3-mysqlmariadb\" aria-label=\"3 mysqlmariadb permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. MySQL(MariaDB)</h2>\n<ul>\n<li>장점\n<ul>\n<li>오픈소스로 무료 사용 가능 (상업용으로는 유료)</li>\n<li>MySQL과 거의 유사한 MariaDB는 상업용일 경우에도 무료 사용 가능(MariaDB는 MySQL이 오라클에 인수되며 오픈소스 진영에서 MySQL 소스코드를 기반으로 만들어진 DBMS)</li>\n<li>속도, 성능 일반적인 수준 만족</li>\n<li>상위 몇 개 레코드를 가져오는 등 작은 범위 조회에 유리</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>복잡한 쿼리에서 성능 저하</li>\n<li>대량 데이터 조회 시 성능 저하가 발생</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"4-postgresql\" style=\"position:relative;\"><a href=\"#4-postgresql\" aria-label=\"4 postgresql permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. PostgreSQL</h2>\n<ul>\n<li>장점\n<ul>\n<li>오픈소스로 상업용으로도 무료 사용 가능</li>\n<li>오라클만큼 기능도 풍부하며 성능 보장</li>\n<li>신뢰성 및 안정성 높음</li>\n<li>데이터 대량 입력 시 성능 좋음</li>\n<li>인스타그램, 스카이프 등 기업에서 사용하여 안정성 및 신뢰성 있는 데이터베이스</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>업데이트 시 Update 대신 Delete 후 Insert를 하게 되어있어 업데이트 속도가 저하됨</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"5-sqlite\" style=\"position:relative;\"><a href=\"#5-sqlite\" aria-label=\"5 sqlite permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. SQLite</h2>\n<ul>\n<li>장점\n<ul>\n<li>Django와 기본 연동 되어있어 별도 설정이 필요 없다</li>\n<li>백업이 간편(파일을 통째로 복사)</li>\n<li>경량화되어있으며, 적은 메모리 환경에서도 좋은 성능을 보임</li>\n</ul>\n</li>\n<li>단점\n<ul>\n<li>서버 없이 로컬 파일에 데이터를 저장하므로 외부 접속 시 복잡한 우회방법 필요</li>\n<li>한 명의 사용자만 동시접근 가능, 멀티 유저 사용 시 프록시 레이어 필요</li>\n<li>편의 기능 부족</li>\n<li>테스트 목적 외 부적합</li>\n</ul>\n</li>\n</ul>\n<br/>","excerpt":"데이터베이스(Database) 비교 - Oracle, MySQL, PostgreSQL, SQLite 1. 배경 상황 이전 회사 팀원분들과 토이 프로젝트를 준비하고 있는데, 데이터베이스를 선정하기 전 각 데이터베이스에 어떤 장단점이 있는지 살펴보았다. 데이터베이스는 필요에 따라 데이터를 일정한 형태로 저장해 놓는 것을 뜻하는데, 이 데이터베이스를 관리할 수 있는 시스템을 DBMS라고 한다. DBMS에는 관리형 데이터베이스 시스템(RDBMS: Relational Database System)과, NoSQL로 구분되는데, 이번에는 RDBMS의 대표격인 Oracle, MySQL, PostgreSQL, 그리고 Django 프레임워크에서 기본적인 연동이 제공되는 SQLite를 비교해보도록 하겠다. 2. Oracle 장점 고성능(빠른 속도) 여러 가지 기능 제공 백업 등 안정성 대기업에서 많이 사용 단점 라이선스 비용이 비쌈 유지보수 비용 비쌈 무료 버전의 용량 및 기간 제한 존재 3. MyS…","frontmatter":{"date":"October 09, 2022","title":"데이터베이스(Database) 비교 - Oracle, MySQL, PostgreSQL, SQLite","categories":"CS","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221009-cs-database-rdbms-comparison/"}},"next":{"id":"256c7aeb-537a-5dc8-b3b6-6f658d82a816","html":"<h1 id=\"python-django-no-changes-detected-해결\" style=\"position:relative;\"><a href=\"#python-django-no-changes-detected-%ED%95%B4%EA%B2%B0\" aria-label=\"python django no changes detected 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Python Django No changes detected 해결</h1>\n<h2 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h2>\n<p>토이 프로젝트 시작 전 테스트 용으로 Django REST framework 사용 실습을 하고 있었는데, Model을 잘못 정의해서 한 번 날리고(…) 다시 <code class=\"language-text\">makemigrations</code> 명령어를 실행 하려고 하니 아래와 같이 No changes detected라는 메시지가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  restProject git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ python3 manage.py makemigrations\nNo changes detected</code></pre></div>\n<br/>\n<h2 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h2>\n<p>프로젝트 내에 캐시 파일, migrations 폴더, db.sqlite3 파일을 모두 삭제해도 인식을 못하고 같은 메시지가 발생해서 구글링을 해보니, <code class=\"language-text\">makemigrations</code> 명령어를 실행할 때 아래와 같이 앱 이름을 명시하면 해결이 된다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">python3 manage.py makemigrations <span class=\"token operator\">&lt;</span>앱 이름<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<p>아래와 같이 <code class=\"language-text\">rest</code> 라고 앱 이름을 명시해주니 Migration이 잘 생성 되었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">➜  restProject git:<span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ python3 manage.py makemigrations rest\nMigrations <span class=\"token keyword\">for</span> <span class=\"token string\">'rest'</span><span class=\"token builtin class-name\">:</span>\n  rest/migrations/0001_initial.py\n    - Create model Rest</code></pre></div>\n<br/>","frontmatter":{"date":"October 08, 2022","title":"Python Django No changes detected 해결","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/221008-programming-python-django-no-changes-detected/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/221009-cs-database-rdbms-comparison/","nextSlug":"/221008-programming-python-django-no-changes-detected/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}