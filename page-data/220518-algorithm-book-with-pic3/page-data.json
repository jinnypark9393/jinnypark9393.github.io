{"componentChunkName":"component---src-templates-blog-template-js","path":"/220518-algorithm-book-with-pic3/","result":{"data":{"cur":{"id":"4966ed77-66d5-5a3e-b32b-f257c8d05c9e","html":"<h1 id=\"제-2장-변수와-배열\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-2%EC%9E%A5-%EB%B3%80%EC%88%98%EC%99%80-%EB%B0%B0%EC%97%B4\" aria-label=\"제 2장 변수와 배열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 2장 변수와 배열</h1>\n<h2 id=\"12-변수를-변수에-대입하면-변수에-저장된-값이-다른-변수에-복사된다\" style=\"position:relative;\"><a href=\"#12-%EB%B3%80%EC%88%98%EB%A5%BC-%EB%B3%80%EC%88%98%EC%97%90-%EB%8C%80%EC%9E%85%ED%95%98%EB%A9%B4-%EB%B3%80%EC%88%98%EC%97%90-%EC%A0%80%EC%9E%A5%EB%90%9C-%EA%B0%92%EC%9D%B4-%EB%8B%A4%EB%A5%B8-%EB%B3%80%EC%88%98%EC%97%90-%EB%B3%B5%EC%82%AC%EB%90%9C%EB%8B%A4\" aria-label=\"12 변수를 변수에 대입하면 변수에 저장된 값이 다른 변수에 복사된다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. 변수를 변수에 대입하면 변수에 저장된 값이 다른 변수에 복사된다</h2>\n<ul>\n<li>변수명에 다른 변수명을 대입할 수 있다.\n<ul>\n<li>예: A = 10 일때, Y = A 로 A를 Y에 대입할 수 있다.</li>\n</ul>\n</li>\n<li>변수명을 변수명에 대입했을 경우, 변수 자체가 들어가는 것이 아니라 변수의 값이 대입된다.\n<ul>\n<li>예: Y = A로 대입했을 때, 실제로는 Y = 10 처럼 A의 값인 10이 대입된다.</li>\n</ul>\n</li>\n<li>변수를 포함한 계산식도 변수에 대입할 수 있다.\n<ul>\n<li>예: Y = A + 4 (Y = 14가 된다)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"13-변수에도-데이터-타입이-있다\" style=\"position:relative;\"><a href=\"#13-%EB%B3%80%EC%88%98%EC%97%90%EB%8F%84-%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%83%80%EC%9E%85%EC%9D%B4-%EC%9E%88%EB%8B%A4\" aria-label=\"13 변수에도 데이터 타입이 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13. 변수에도 데이터 타입이 있다.</h2>\n<ul>\n<li>변수를 정의할때 변수명과 ‘어떤 데이터 타입의 값을 담을 수 있을지’를 함께 정의하게 된다.</li>\n<li>변수의 데이터 타입과 일치하는 데이터만 변수에 대입할 수 있다.\n<ul>\n<li>예시\n<ul>\n<li>정수 타입: 정수타입 데이터만 대입할 수 있다.</li>\n<li>실수 타입: 실수 타입 데이터만 대입할 수 있다.</li>\n<li>문자 타입: 문자 타입 데이터만 대입할 수 있다.</li>\n<li>문자열 타입: 문자열 타입 데이터만 대입할 수 있다.</li>\n<li>논리 타입: 논리 타입 데이터만 대입할 수 있다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>","excerpt":"제 2장 변수와 배열 12. 변수를 변수에 대입하면 변수에 저장된 값이 다른 변수에 복사된다 변수명에 다른 변수명을 대입할 수 있다. 예: A = 10 일때, Y = A 로 A를 Y에 대입할 수 있다. 변수명을 변수명에 대입했을 경우, 변수 자체가 들어가는 것이 아니라 변수의 값이 대입된다. 예: Y = A로 대입했을 때, 실제로는 Y = 10 처럼 A의 값인 10이 대입된다. 변수를 포함한 계산식도 변수에 대입할 수 있다. 예: Y = A + 4 (Y = 14가 된다) 13. 변수에도 데이터 타입이 있다. 변수를 정의할때 변수명과 ‘어떤 데이터 타입의 값을 담을 수 있을지’를 함께 정의하게 된다. 변수의 데이터 타입과 일치하는 데이터만 변수에 대입할 수 있다. 예시 정수 타입: 정수타입 데이터만 대입할 수 있다. 실수 타입: 실수 타입 데이터만 대입할 수 있다. 문자 타입: 문자 타입 데이터만 대입할 수 있다. 문자열 타입: 문자열 타입 데이터만 대입할 수 있다. 논리 타입: 논…","frontmatter":{"date":"May 18, 2022","title":"그림으로 배우는 알고리즘 제 2장 - 변수와 배열(4)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220518-algorithm-book-with-pic3/"}},"next":{"id":"8098b243-f634-54ab-8bc3-93d95c082cf8","html":"<p>모의고사 2.1 - ETCD 백업 파일 생성하기</p>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Take a backup of the etcd cluster and save it to <code class=\"language-text\">/opt/etcd-backup.db</code>.</p>\n<ul>\n<li>Backup Completed</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행했다면 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-etcd-백업파일-생성\" style=\"position:relative;\"><a href=\"#2-etcd-%EB%B0%B1%EC%97%85%ED%8C%8C%EC%9D%BC-%EC%83%9D%EC%84%B1\" aria-label=\"2 etcd 백업파일 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. ETCD 백업파일 생성</h3>\n<ul>\n<li>get 명령어로 etcd 파드 이름을 찾는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods -n kube-system \nNAME                                   READY   STATUS    RESTARTS   AGE\ncoredns-74ff55c5b-2cf6t                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\ncoredns-74ff55c5b-vcq46                <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\netcd-controlplane                      <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-apiserver-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-controller-manager-controlplane   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nkube-proxy-9wlvh                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-proxy-rmcf6                       <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          17m\nkube-scheduler-controlplane            <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          18m\nweave-net-h74h2                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">1</span>          17m\nweave-net-v77kn                        <span class=\"token number\">2</span>/2     Running   <span class=\"token number\">0</span>          17m</code></pre></div>\n<br/>\n<ul>\n<li>describe 명령어로 etcd 백업에 필요한 내용들을 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k describe pod -n kube-system etcd-controlplane \nName:                 etcd-controlplane\nNamespace:            kube-system\nPriority:             <span class=\"token number\">2000001000</span>\nPriority Class Name:  system-node-critical\nNode:                 controlplane/10.33.195.6\nStart Time:           Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:59 +0000\nLabels:               <span class=\"token assign-left variable\">component</span><span class=\"token operator\">=</span>etcd\n                      <span class=\"token assign-left variable\">tier</span><span class=\"token operator\">=</span>control-plane\nAnnotations:          kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.33.195.6:2379\n                      kubernetes.io/config.hash: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.mirror: fb131373ab567ef644cab42ba7a9234a\n                      kubernetes.io/config.seen: <span class=\"token number\">2022</span>-05-17T13:16:57.930616180Z\n                      kubernetes.io/config.source: <span class=\"token function\">file</span>\nStatus:               Running\nIP:                   <span class=\"token number\">10.33</span>.195.6\nIPs:\n  IP:           <span class=\"token number\">10.33</span>.195.6\nControlled By:  Node/controlplane\nContainers:\n  etcd:\n    Container ID:  docker://7c8ad68c241e98453154d077113bec3195c5fdf088fdb0a5383d3dce7d36405a\n    Image:         k8s.gcr.io/etcd:3.4.13-0\n    Image ID:      docker-pullable://k8s.gcr.io/etcd@sha256:4ad90a11b55313b182afc186b9876c8e891531b8db4c9bf1541953021618d0e2\n    Port:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Host Port:     <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Command:\n      etcd\n      --advertise-client-urls<span class=\"token operator\">=</span>https://10.33.195.6:2379\n      --cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt\n      --client-cert-auth<span class=\"token operator\">=</span>true\n      --data-dir<span class=\"token operator\">=</span>/var/lib/etcd\n      --initial-advertise-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --initial-cluster<span class=\"token operator\">=</span>controlplane<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n      --listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n      --listen-metrics-urls<span class=\"token operator\">=</span>http://127.0.0.1:2381\n      --listen-peer-urls<span class=\"token operator\">=</span>https://10.33.195.6:2380\n      --name<span class=\"token operator\">=</span>controlplane\n      --peer-cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.crt\n      --peer-client-cert-auth<span class=\"token operator\">=</span>true\n      --peer-key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/peer.key\n      --peer-trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n      --snapshot-count<span class=\"token operator\">=</span><span class=\"token number\">10000</span>\n      --trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n    State:          Running\n      Started:      Tue, <span class=\"token number\">17</span> May <span class=\"token number\">2022</span> <span class=\"token number\">13</span>:16:38 +0000\n    Ready:          True\n    Restart Count:  <span class=\"token number\">0</span>\n    Requests:\n      cpu:                100m\n      ephemeral-storage:  100Mi\n      memory:             100Mi\n    Liveness:             http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=8</span>\n    Startup:              http-get http://127.0.0.1:2381/health <span class=\"token assign-left variable\">delay</span><span class=\"token operator\">=</span>10s <span class=\"token assign-left variable\">timeout</span><span class=\"token operator\">=</span>15s <span class=\"token assign-left variable\">period</span><span class=\"token operator\">=</span>10s <span class=\"token comment\">#success=1 #failure=24</span>\n    Environment:          <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\n    Mounts:\n      /etc/kubernetes/pki/etcd from etcd-certs <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\n      /var/lib/etcd from etcd-data <span class=\"token punctuation\">(</span>rw<span class=\"token punctuation\">)</span>\nConditions:\n  Type              Status\n  Initialized       True \n  Ready             True \n  ContainersReady   True \n  PodScheduled      True \nVolumes:\n  etcd-certs:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /etc/kubernetes/pki/etcd\n    HostPathType:  DirectoryOrCreate\n  etcd-data:\n    Type:          HostPath <span class=\"token punctuation\">(</span>bare <span class=\"token function\">host</span> directory volume<span class=\"token punctuation\">)</span>\n    Path:          /var/lib/etcd\n    HostPathType:  DirectoryOrCreate\nQoS Class:         Burstable\nNode-Selectors:    <span class=\"token operator\">&lt;</span>none<span class=\"token operator\">></span>\nTolerations:       :NoExecute <span class=\"token assign-left variable\">op</span><span class=\"token operator\">=</span>Exists\nEvents:\n  Type    Reason  Age   From     Message\n  ----    ------  ----  ----     -------\n  Normal  Pulled  19m   kubelet  Container image <span class=\"token string\">\"k8s.gcr.io/etcd:3.4.13-0\"</span> already present on machine</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>trusted-ca-file<span class=\"token operator\">></span> --cert<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>cert-file<span class=\"token operator\">></span> --key<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>key-file<span class=\"token operator\">></span> <span class=\"token punctuation\">\\</span>\n  snapshot save <span class=\"token operator\">&lt;</span>backup-file-location<span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>etcdctl 실행 시 필요한 파라미터값들을 확인하며 메모로 남겨 놓은 뒤 알맞은 정보를 채워넣는다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">--listen-client-urls<span class=\"token operator\">=</span>https://127.0.0.1:2379,https://10.33.195.6:2379\n--cert-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt  \n--key-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key\n--trusted-ca-file<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\n<span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --endpoints<span class=\"token operator\">=</span>https://127.0.0.1:2379 <span class=\"token punctuation\">\\</span>\n  --cacert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/ca.crt --cert<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.crt --key<span class=\"token operator\">=</span>/etc/kubernetes/pki/etcd/server.key <span class=\"token punctuation\">\\</span>\n  snapshot save /opt/etcd-backup.db</code></pre></div>\n<br/>\n<ul>\n<li>ETCD 백업 파일이 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token assign-left variable\">ETCDCTL_API</span><span class=\"token operator\">=</span><span class=\"token number\">3</span> etcdctl --write-out<span class=\"token operator\">=</span>table snapshot status /opt/etcd-backup.db\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span>   HASH   <span class=\"token operator\">|</span> REVISION <span class=\"token operator\">|</span> TOTAL KEYS <span class=\"token operator\">|</span> TOTAL SIZE <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+\n<span class=\"token operator\">|</span> 6040e181 <span class=\"token operator\">|</span>     <span class=\"token number\">2738</span> <span class=\"token operator\">|</span>       <span class=\"token number\">1027</span> <span class=\"token operator\">|</span>     <span class=\"token number\">2.4</span> MB <span class=\"token operator\">|</span>\n+----------+----------+------------+------------+</code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>ETCD backup: <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster\">https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.1 - ETCD 백업 파일 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-01/"}},"prev":{"id":"42a3ada7-2253-595d-be8a-544cc8bd5ef1","html":"<h1 id=\"모의고사-23---커맨드를-지정한-파드pod-생성하기\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EC%9D%98%EA%B3%A0%EC%82%AC-23---%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%A5%BC-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1%ED%95%98%EA%B8%B0\" aria-label=\"모의고사 23   커맨드를 지정한 파드pod 생성하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모의고사 2.3 - 커맨드를 지정한 파드(POD) 생성하기</h1>\n<h2 id=\"1-문제-요건\" style=\"position:relative;\"><a href=\"#1-%EB%AC%B8%EC%A0%9C-%EC%9A%94%EA%B1%B4\" aria-label=\"1 문제 요건 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 문제 요건</h2>\n<p>Create a new pod called <code class=\"language-text\">super-user-pod</code> with image <code class=\"language-text\">busybox:1.28</code>. Allow the pod to be able to set <code class=\"language-text\">system_time</code>.</p>\n<p>The container should sleep for 4800 seconds.</p>\n<ul>\n<li>Pod: super-user-pod</li>\n<li>Container Image: busybox:1.28</li>\n<li>SYS_TIME capabilities for the conatiner?</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-내-풀이\" style=\"position:relative;\"><a href=\"#2-%EB%82%B4-%ED%92%80%EC%9D%B4\" aria-label=\"2 내 풀이 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 내 풀이</h2>\n<h3 id=\"1-사전-작업\" style=\"position:relative;\"><a href=\"#1-%EC%82%AC%EC%A0%84-%EC%9E%91%EC%97%85\" aria-label=\"1 사전 작업 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 사전 작업</h3>\n<ul>\n<li>kubectl 자동완성 설정을 미리 진행한다(이미 진행한 경우 불필요).</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token builtin class-name\">source</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>kubectl completion <span class=\"token function\">bash</span><span class=\"token punctuation\">)</span>\n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"source &lt;(kubectl completion bash)\"</span> <span class=\"token operator\">>></span> ~/.bashrc \n\nroot@controlplane ~ ➜  <span class=\"token builtin class-name\">alias</span> <span class=\"token assign-left variable\">k</span><span class=\"token operator\">=</span>kubectl\n\nroot@controlplane ~ ➜  complete -F __start_kubectl k</code></pre></div>\n<p><br/><br/></p>\n<h3 id=\"2-커맨드를-지정한-파드pod-생성\" style=\"position:relative;\"><a href=\"#2-%EC%BB%A4%EB%A7%A8%EB%93%9C%EB%A5%BC-%EC%A7%80%EC%A0%95%ED%95%9C-%ED%8C%8C%EB%93%9Cpod-%EC%83%9D%EC%84%B1\" aria-label=\"2 커맨드를 지정한 파드pod 생성 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 커맨드를 지정한 파드(POD) 생성</h3>\n<ul>\n<li>명령문으로 파드 매니페스트 파일을 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k run super-user-pod --image<span class=\"token operator\">=</span>busybox:1.28 --dry-run<span class=\"token operator\">=</span>client -o yaml <span class=\"token operator\">></span> super-user-pod.yaml</code></pre></div>\n<br/>\n<ul>\n<li>파드 매니페스트 파일에 수정할 부분이 없는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  <span class=\"token function\">vi</span> super-user-pod.yaml\n\n<span class=\"token operator\">==</span><span class=\"token operator\">==</span>\n\napiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: super-user-pod\n  name: super-user-pod\nspec:\n  containers:\n  - command:\n    - <span class=\"token function\">sleep</span>\n    - <span class=\"token string\">\"4800\"</span>\n    image: busybox:1.28\n    name: super-user-pod\n    resources: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>Command sleep, “4800” 추가</p>\n</li>\n<li>\n<p><code class=\"language-text\">system_time</code>을 추가해야한다: 쿠버네티스 공식문서에서 Security Context 검색 > Set capabilities for a Container 탭으로 이동</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: Pod\nmetadata:\n  name: security-context-demo-4\nspec:\n  containers:\n    image: gcr.io/google-samples/node-hello:1.0\n    name: sec-ctx-4\n    securityContexts:\n      capabilities:\n         add: <span class=\"token punctuation\">[</span><span class=\"token string\">\"NET_ADMIN\"</span>, <span class=\"token string\">\"SYS_TIME\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: super-user-pod\n  name: super-user-pod\nspec:\n  containers:\n  - command:\n    - <span class=\"token function\">sleep</span>\n    - <span class=\"token string\">\"4800\"</span>\n    image: busybox:1.28\n    name: super-user-pod\n    securityContexts:\n      capabilities:\n         add: <span class=\"token punctuation\">[</span><span class=\"token string\">\"SYS_TIME\"</span><span class=\"token punctuation\">]</span>\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>Pod 설정 예시파일을 보고 매니페스트 파일을 수정해준다.</li>\n</ul>\n<br/>\n<ul>\n<li>작성한 매니페스트 파일을 이용해 파드를 생성한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k create -f super-user-pod.yaml \npod/super-user-pod created</code></pre></div>\n<br/>\n<ul>\n<li>파드가 잘 생성되었는지 확인한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">root@controlplane ~ ➜  k get pods\nNAME             READY   STATUS              RESTARTS   AGE\nredis-storage    <span class=\"token number\">1</span>/1     Running             <span class=\"token number\">0</span>          4m5s\nsuper-user-pod   <span class=\"token number\">1</span>/1     ContainerCreating   <span class=\"token number\">0</span>          31s</code></pre></div>\n<h2 id=\"3-참고-url\" style=\"position:relative;\"><a href=\"#3-%EC%B0%B8%EA%B3%A0-url\" aria-label=\"3 참고 url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 참고 URL</h2>\n<ul>\n<li>Configure Security Context: <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/security-context/\">https://kubernetes.io/docs/tasks/configure-pod-container/security-context/</a></li>\n</ul>\n<br/>","frontmatter":{"date":"May 18, 2022","title":"쿠버네티스(Kubernetes) CKA 모의고사 2.3 - Security Context를 지정한 파드(POD) 생성하기","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220518-kubernetes-cka-mock-exam-2-03/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220518-algorithm-book-with-pic3/","nextSlug":"/220518-kubernetes-cka-mock-exam-2-01/","prevSlug":"/220518-kubernetes-cka-mock-exam-2-03/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}