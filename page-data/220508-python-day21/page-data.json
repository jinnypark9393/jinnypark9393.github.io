{"componentChunkName":"component---src-templates-blog-template-js","path":"/220508-python-day21/","result":{"data":{"cur":{"id":"9bafc905-6ffa-5c77-85ca-4a950e4b0a66","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 7-2. 딕셔너리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo1.jpg\" alt=\"2022-05-08-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo2.jpg\" alt=\"2022-05-08-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"1-클래스와-객체\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B0%9D%EC%B2%B4\" aria-label=\"1 클래스와 객체 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스와 객체</h1>\n<h2 id=\"1-클래스와-객체의-개념\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 클래스와 객체의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스와 객체의 개념</h2>\n<ul>\n<li>클래스: 객체를 만들기 위한 <strong>설계도</strong></li>\n<li>객체: 설계도로부터 만들어낸 <strong>제품</strong></li>\n</ul>\n<br/>\n<ul>\n<li>실습</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 클래스를 사용하는 이유</span>\nchampion1_name <span class=\"token operator\">=</span> <span class=\"token string\">\"이즈리얼\"</span>\nchampion1_health <span class=\"token operator\">=</span> <span class=\"token number\">700</span>\nchampion1_attack <span class=\"token operator\">=</span> <span class=\"token number\">90</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>champion1_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\nchampion2_name <span class=\"token operator\">=</span> <span class=\"token string\">\"리신\"</span>\nchampion2_health <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\nchampion2_attack <span class=\"token operator\">=</span> <span class=\"token number\">95</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>champion2_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">basic_attack</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 기본공격 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>attack<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nbasic_attack<span class=\"token punctuation\">(</span>champion1_name<span class=\"token punctuation\">,</span> champion1_attack<span class=\"token punctuation\">)</span>\nbasic_attack<span class=\"token punctuation\">(</span>champion2_name<span class=\"token punctuation\">,</span> champion2_attack<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">01.</span>클래스개념<span class=\"token punctuation\">.</span>py\n이즈리얼님 소환사의 협곡에 오신것을 환영합니다<span class=\"token punctuation\">.</span>\n리신님 소환사의 협곡에 오신것을 환영합니다<span class=\"token punctuation\">.</span>\n이즈리얼 기본공격 <span class=\"token number\">90</span>\n리신 기본공격 <span class=\"token number\">95</span></code></pre></div>\n<br/>\n<ul>\n<li>위의 프로그램을 클래스로 만들어보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=============클래스를 사용한 경우=============\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Champion</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">basic_attack</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 기본공격 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nezreal <span class=\"token operator\">=</span> Champion<span class=\"token punctuation\">(</span><span class=\"token string\">\"이즈리얼\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\nleesin <span class=\"token operator\">=</span> Champion<span class=\"token punctuation\">(</span><span class=\"token string\">\"리신\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">)</span>\nezreal<span class=\"token punctuation\">.</span>basic_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nleesin<span class=\"token punctuation\">.</span>basic_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>챔피언을 하나 더 추가해야하는 경우: <strong>클래스 미사용</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 클래스를 사용하는 이유</span>\nchampion1_name <span class=\"token operator\">=</span> <span class=\"token string\">\"이즈리얼\"</span>\nchampion1_health <span class=\"token operator\">=</span> <span class=\"token number\">700</span>\nchampion1_attack <span class=\"token operator\">=</span> <span class=\"token number\">90</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>champion1_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\nchampion2_name <span class=\"token operator\">=</span> <span class=\"token string\">\"리신\"</span>\nchampion2_health <span class=\"token operator\">=</span> <span class=\"token number\">800</span>\nchampion2_attack <span class=\"token operator\">=</span> <span class=\"token number\">95</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>champion2_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">#### 추가 및 수정이 필요한 부분 ####</span>\nchampion3_name <span class=\"token operator\">=</span> <span class=\"token string\">\"야스오\"</span>\nchampion3_health <span class=\"token operator\">=</span> <span class=\"token number\">750</span>\nchampion3_attack <span class=\"token operator\">=</span> <span class=\"token number\">92</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>champion3_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">#### /추가 및 수정이 필요한 부분 ####</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">basic_attack</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 기본공격 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>attack<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nbasic_attack<span class=\"token punctuation\">(</span>champion1_name<span class=\"token punctuation\">,</span> champion1_attack<span class=\"token punctuation\">)</span>\nbasic_attack<span class=\"token punctuation\">(</span>champion2_name<span class=\"token punctuation\">,</span> champion2_attack<span class=\"token punctuation\">)</span>\nbasic_attack<span class=\"token punctuation\">(</span>champion3_name<span class=\"token punctuation\">,</span> champion3_attack<span class=\"token punctuation\">)</span> <span class=\"token comment\">#### 추가 및 수정이 필요한 부분</span></code></pre></div>\n<br/>\n<ul>\n<li>챔피언을 하나 더 추가해야하는 경우: <strong>클래스 사용</strong></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"=============클래스를 사용한 경우=============\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Champion</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">님 소환사의 협곡에 오신것을 환영합니다.\"</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">basic_attack</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 기본공격 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\n\nezreal <span class=\"token operator\">=</span> Champion<span class=\"token punctuation\">(</span><span class=\"token string\">\"이즈리얼\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">700</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span>\nleesin <span class=\"token operator\">=</span> Champion<span class=\"token punctuation\">(</span><span class=\"token string\">\"리신\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">95</span><span class=\"token punctuation\">)</span>\nyasuo <span class=\"token operator\">=</span> Champion<span class=\"token punctuation\">(</span><span class=\"token string\">\"야스오\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">750</span><span class=\"token punctuation\">,</span> <span class=\"token number\">92</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 추가 및 수정이 필요한 부분</span>\n\nezreal<span class=\"token punctuation\">.</span>basic_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nleesin<span class=\"token punctuation\">.</span>basic_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nyasuo<span class=\"token punctuation\">.</span>basic_attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 추가 및 수정이 필요한 부분</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>클래스를 사용하면 단 두줄만 수정하면 된다 ⇒ 객체를 많이 생산해내야 할 수 록 클래스 사용이 효율적</p>\n</li>\n<li>\n<p>클래스 = 속성 + 메서드(method)</p>\n<p><img src=\"/assets/images/2022-05-08-Python-Photo/2022-05-08-Python-Photo3.png\" alt=\"2022-05-08-Python-Photo3\"></p>\n<ul>\n<li>속성: 특징들을 나타낸 것</li>\n<li>메서드: 동작들을 나타낸 것</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-클래스-만들기\" style=\"position:relative;\"><a href=\"#2-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"2 클래스 만들기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 클래스 만들기</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> 클래스이름\n    <span class=\"token keyword\">def</span> 메서드이름<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n       명령블록\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나는 몬스터다\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>만든 클래스를 호출하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 호출하기</span>\n인스턴스 <span class=\"token operator\">=</span> 클래스이름<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n인스턴스<span class=\"token punctuation\">.</span>메서드<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 예시</span>\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngoblin<span class=\"token punctuation\">.</span>say<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>인스턴스: 클래스와 연관지어 표현할 때 자주 사용하는 표현(객체와 유사)</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<ul>\n<li>파이썬에서는 자료형도 클래스다</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나는 몬스터다!\"</span><span class=\"token punctuation\">)</span>\n\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ngoblin<span class=\"token punctuation\">.</span>say<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 파이썬에서는 자료형도 클래스다</span>\na <span class=\"token operator\">=</span> <span class=\"token number\">10</span>\nb <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열객체\"</span>\nc <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>jinipark<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">02.</span>클래스만들기<span class=\"token punctuation\">.</span>py\n나는 몬스터다!\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'int'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'bool'</span><span class=\"token operator\">></span></code></pre></div>\n<br/>\n<ul>\n<li>각 자료형이 class로 출력되는 것을 알 수 있다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">.</span>__dir__<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>문자열 객체에 대해 생성할 수 있는 메서드 확인</li>\n</ul>\n<br/>\n<ul>\n<li>출력 확인</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\n<span class=\"token punctuation\">[</span><span class=\"token string\">'__new__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__repr__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__hash__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__str__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__getattribute__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__lt__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__le__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__eq__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__ne__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__gt__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__ge__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__iter__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__mod__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__rmod__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__len__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__getitem__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__add__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__mul__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__rmul__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__contains__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'encode'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'replace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'split'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rsplit'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'join'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'capitalize'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'casefold'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'title'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'center'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'count'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'expandtabs'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'find'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'partition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ljust'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lower'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lstrip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rfind'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rindex'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rjust'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rstrip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rpartition'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'splitlines'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'strip'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'swapcase'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'translate'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'upper'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'startswith'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'endswith'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'removeprefix'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'removesuffix'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isascii'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'islower'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isupper'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'istitle'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isspace'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isdecimal'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isdigit'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isnumeric'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isalpha'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isalnum'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isidentifier'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'isprintable'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'zfill'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'format'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'format_map'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__format__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'maketrans'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__sizeof__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__getnewargs__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__doc__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__setattr__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__delattr__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__init__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__reduce_ex__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__reduce__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__subclasshook__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__init_subclass__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__dir__'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'__class__'</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 클래스와 객체의 개념에 대해 알아보았다. 다음 포스팅에서는 생성자에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 7-2. 딕셔너리를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-05-08-Python-Photo1 2022-05-08-Python-Photo2  1. 클래스와 객체 1. 클래스와 객체의 개념 클래스: 객체를 만들기 위한 설계도 객체: 설계도로부터 만들어낸 제품 실습 출력 결과 위의 프로그램을 클래스로 만들어보자 챔피언을 하나 더 추가해야하는 경우: 클래스 미사용 챔피언을 하나 더 추가해야하는 경우: 클래스 사용 클래스를 사용하면 단 두줄만 수정하면 된다 ⇒ 객체를 많이 생산해내야 할 수 록 클래스 사용이 효율적 클래스 = 속성 + 메서드(method) 2022-05-08-Python-Photo3 속성: 특징들을 나타낸 것 메서드: 동작들을 나타낸 것  2. 클래스 만들기 만든 …","frontmatter":{"date":"May 08, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 21일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220508-python-day21/"}},"next":{"id":"2b7ef632-050a-5b11-be02-a777888749f1","html":"<p><strong>💡 파이썬에서 Syntax Error : stdin 에러가 났을 경우, exit() 혹은 Ctrl + Z을 입력하여 해결할 수 있다.</strong></p>\n<br/>\n<h1 id=\"1-에러-상황\" style=\"position:relative;\"><a href=\"#1-%EC%97%90%EB%9F%AC-%EC%83%81%ED%99%A9\" aria-label=\"1 에러 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 에러 상황</h1>\n<br/>\n<p>패스트캠퍼스 챌린지 강의 실습 중, 파이썬 코드를 실행하니 아래와 같은 Syntax 에러가 발생했다.</p>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">04.</span>상속<span class=\"token punctuation\">.</span>py\n    <span class=\"token operator\">^</span>\nSyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n<span class=\"token operator\">>></span><span class=\"token operator\">></span></code></pre></div>\n<p><br/><br/></p>\n<h1 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h1>\n<br/>\n<p>찾아보니 vscode를 껐다가 다시 켜면 해결된다는 얘기도 있는데, 구글링을 조금 더 해보니 해당 에러는 파이썬 코드를 파이썬 인터프리터 내에서 실행하고자 할 때 발생하는 에러였다.</p>\n<br/>\n<p>따라서 파이썬 인터프리터 밖에서 코드를 실행할 수 있도록 에러 마지막 부분의 <code class=\"language-text\">>>></code> 다음 부분에</p>\n<br/>\n<ul>\n<li><code class=\"language-text\">exit()</code> 를 입력하고 엔터</li>\n<li><code class=\"language-text\">ctrl + Z</code> 를 누른 뒤 엔터</li>\n</ul>\n<br/>\n<p>둘 중 하나를 해주면 파이썬 코드가 정상적으로 실행된다고 한다.</p>\n<br/>\n<p>이 안내를 따라서 exit()을 입력하고 엔터를 누른 뒤, 파이썬 코드를 다시 실행해주니 아래와 같이 파이썬 코드가 정상적으로 실행되었다.</p>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>python_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">04.</span>상속<span class=\"token punctuation\">.</span>py\n    <span class=\"token operator\">^</span>\nSyntaxError<span class=\"token punctuation\">:</span> invalid syntax\n<span class=\"token operator\">>></span><span class=\"token operator\">></span> exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">04.</span>상속<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span>울프<span class=\"token punctuation\">]</span> 지상에서 이동하기\n<span class=\"token punctuation\">[</span>샤크<span class=\"token punctuation\">]</span> 헤엄치기\n<span class=\"token punctuation\">[</span>드래곤<span class=\"token punctuation\">]</span> 날기</code></pre></div>\n<br/>","frontmatter":{"date":"May 07, 2022","title":"Python - Syntax Error stdin 에러 해결","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220507-python-syntax-error-stdin/"}},"prev":{"id":"c7b5eb80-98e4-5aed-80a7-7779c7f6fb3e","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 8-2. 생성자를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo1.jpg\" alt=\"2022-05-09-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo2.jpg\" alt=\"2022-05-09-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"1-생성자\" style=\"position:relative;\"><a href=\"#1-%EC%83%9D%EC%84%B1%EC%9E%90\" aria-label=\"1 생성자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 생성자</h1>\n<h2 id=\"1-클래스와-객체의-개념\" style=\"position:relative;\"><a href=\"#1-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EA%B0%9D%EC%B2%B4%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 클래스와 객체의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 클래스와 객체의 개념</h2>\n<ul>\n<li>\n<p>클래스 = 속성 + 메서드(method)</p>\n<p><img src=\"/assets/images/2022-05-09-Python-Photo/2022-05-09-Python-Photo3.png\" alt=\"2022-05-09-Python-Photo3\"></p>\n<ul>\n<li>속성: 특징들을 나타낸 것</li>\n<li>메서드: 동작들을 나타낸 것</li>\n</ul>\n  <br/>\n</li>\n</ul>\n<h2 id=\"2-속성-추가하기\" style=\"position:relative;\"><a href=\"#2-%EC%86%8D%EC%84%B1-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"2 속성 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 속성 추가하기</h2>\n<ul>\n<li>\n<p>Monster 클래스에 속성을 추가해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">say</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"나는 몬스터다\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 체력\n2. 공격력\n3. 이동속도</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        self<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed\n\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#인스턴스 생성 시점</span>\nwolf <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">__init__</code> : 인스턴스를 만들 때 반드시, 가장먼저 호출되는 메서드</li>\n<li>goblin 인스턴스를 생성할때, 800, 120, 300는 <code class=\"language-text\">__init__</code> 메서드의 인자(argument)로 들어가게 된다.</li>\n<li><code class=\"language-text\">self</code> : 인스턴스 자기자신을 뜻함. 매개변수 아님.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-메서드-추가하기\" style=\"position:relative;\"><a href=\"#3-%EB%A9%94%EC%84%9C%EB%93%9C-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"3 메서드 추가하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 메서드 추가하기</h2>\n<ul>\n<li>\n<p>Monster 클래스에 메서드를 추가해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        self<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed\n\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\nwolf <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol>\n<li>체력 감소하기</li>\n<li>체력 가져오기</li>\n</ol>\n</li>\n</ul>\n<br/>\n<ul>\n<li>\n<p>추가 메서드를 적용하면 아래와 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        self<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrease_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">-=</span> num\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>health\n\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\n\ngoblin<span class=\"token punctuation\">.</span>decrease_health<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>gobling<span class=\"token punctuation\">.</span>get_health<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<h2 id=\"4-실습\" style=\"position:relative;\"><a href=\"#4-%EC%8B%A4%EC%8A%B5\" aria-label=\"4 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 실습</h2>\n<ul>\n<li>\n<p>위에서 배운 내용을 실제 vscode에 입력해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 생성자</span>\n<span class=\"token comment\"># : 인스턴스를 만들 때 호출되는 메서드</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        self<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrease_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">-=</span> num\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>health\n\n<span class=\"token comment\"># 고블린 인스턴스 생성</span>\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\ngoblin<span class=\"token punctuation\">.</span>decrease_health<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>goblin<span class=\"token punctuation\">.</span>get_health<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">03.</span>생성자<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">700</span></code></pre></div>\n<br/>\n<ul>\n<li>늑대 인스턴스를 추가로 생성해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 생성자</span>\n<span class=\"token comment\"># : 인스턴스를 만들 때 호출되는 메서드</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Monster</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> health<span class=\"token punctuation\">,</span> attack<span class=\"token punctuation\">,</span> speed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">=</span> health\n        self<span class=\"token punctuation\">.</span>attack <span class=\"token operator\">=</span> attack\n        self<span class=\"token punctuation\">.</span>speed <span class=\"token operator\">=</span> speed\n    <span class=\"token keyword\">def</span> <span class=\"token function\">decrease_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>health <span class=\"token operator\">-=</span> num\n    <span class=\"token keyword\">def</span> <span class=\"token function\">get_health</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>health\n\n<span class=\"token comment\"># 고블린 인스턴스 생성</span>\ngoblin <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">800</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span>\ngoblin<span class=\"token punctuation\">.</span>decrease_health<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>goblin<span class=\"token punctuation\">.</span>get_health<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 늑대 인스턴스 생성</span>\nwolf <span class=\"token operator\">=</span> Monster<span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">350</span><span class=\"token punctuation\">)</span>\nwolf<span class=\"token punctuation\">.</span>decrease_health<span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>wolf<span class=\"token punctuation\">.</span>get_health<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter8<span class=\"token operator\">/</span><span class=\"token number\">03.</span>생성자<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">700</span>\n<span class=\"token number\">500</span></code></pre></div>\n<ul>\n<li>늑대 인스턴스에 health = 1500, attack = 200, speed = 350이 할당</li>\n<li>decrease_health 함수로 health가 1000이 감소</li>\n<li>get_health 함수로 현재 health값 저장 및 print로 출력</li>\n</ul>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 생성자의 개념에 대해 알아보았다. 다음 포스팅에서는 상속에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"May 09, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 22일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220509-python-day22/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220508-python-day21/","nextSlug":"/220507-python-syntax-error-stdin/","prevSlug":"/220509-python-day22/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}