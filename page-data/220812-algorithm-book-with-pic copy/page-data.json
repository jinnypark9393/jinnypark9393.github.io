{"componentChunkName":"component---src-templates-blog-template-js","path":"/220812-algorithm-book-with-pic copy/","result":{"data":{"cur":{"id":"6d64cedc-62c4-5d4e-8902-9696b220c178","html":"<h1 id=\"제-5장-정렬과-검색2\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-5%EC%9E%A5-%EC%A0%95%EB%A0%AC%EA%B3%BC-%EA%B2%80%EC%83%892\" aria-label=\"제 5장 정렬과 검색2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 5장: 정렬과 검색(2)</h1>\n<h2 id=\"50-다른-배열bucket에-데이터를-저장하고-정렬하는-버킷-정렬\" style=\"position:relative;\"><a href=\"#50-%EB%8B%A4%EB%A5%B8-%EB%B0%B0%EC%97%B4bucket%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A0%AC%ED%95%98%EB%8A%94-%EB%B2%84%ED%82%B7-%EC%A0%95%EB%A0%AC\" aria-label=\"50 다른 배열bucket에 데이터를 저장하고 정렬하는 버킷 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>50. 다른 배열(bucket)에 데이터를 저장하고 정렬하는 버킷 정렬</h2>\n<ul>\n<li>\n<p>버킷 정렬: 가장 간단한 정렬 알고리즘이나 장소적 자원(배열의 크기)를 많이 소모한다.</p>\n</li>\n<li>\n<p>정렬 순서</p>\n<ul>\n<li>정렬할 데이터 중 가져올 수 있는 값의 범위만큼 버킷을 준비</li>\n<li>정렬할 데이터를 버킷 번호에 맞춰 저장</li>\n<li>모든 데이터를 버킷에 넣은 후, 1번째 버킷부터 차례대로 버킷 데이터를 가져옴</li>\n</ul>\n</li>\n<li>\n<p>정렬 순서</p>\n<p><strong>1단계</strong>; 버킷 역햘을 할 배열 BUCKET을 준비하고 전체 내용을 Empty 값으로 초기화</p>\n<p><strong>2단계</strong>: 정렬할 배열(N개)의 첨자를 저장하는 저장하는 변수 I를 0으로 초기화</p>\n<p><strong>3단계</strong>: I가 N미만일 경우 아래의 4~6단계 반복</p>\n<p><strong>4단계</strong>: VALUE에 DATA[I]를 ㄷ입</p>\n<p><strong>5단계</strong>: BUCKET[VALUE]에 VALUE를 대입</p>\n<p><strong>6단계</strong> I의 값을 1 증가</p>\n<p><strong>7단계</strong>: BUCKET의 처음 요소부터 차례대로 값이 저장되어있을 경우 데이터를 꺼냄</p>\n</li>\n<li>\n<p>Empty 값 → 데이터가 비어 있음을 나타내는 값으로 취급하는 데이터 외의 값이라면 무엇이든 상관 없다. 0, -1을 자주 사용한다.</p>\n</li>\n</ul>\n<h2 id=\"51-아래-자릿수부터-윗-자릿수까지-버킷-정렬을-반복하는-기수-정렬\" style=\"position:relative;\"><a href=\"#51-%EC%95%84%EB%9E%98-%EC%9E%90%EB%A6%BF%EC%88%98%EB%B6%80%ED%84%B0-%EC%9C%97-%EC%9E%90%EB%A6%BF%EC%88%98%EA%B9%8C%EC%A7%80-%EB%B2%84%ED%82%B7-%EC%A0%95%EB%A0%AC%EC%9D%84-%EB%B0%98%EB%B3%B5%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%98-%EC%A0%95%EB%A0%AC\" aria-label=\"51 아래 자릿수부터 윗 자릿수까지 버킷 정렬을 반복하는 기수 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>51. 아래 자릿수부터 윗 자릿수까지 버킷 정렬을 반복하는 기수 정렬</h2>\n<ul>\n<li>\n<p>기수 정렬: 데이터가 여러 개 들어갈 수 있는 버킷을 이용해 정렬. 버킷 속 데이터 순서 관리가 가능</p>\n</li>\n<li>\n<p>정렬 데이터의 자릿수가 k일 경우 버킷 정렬을 k번 실시</p>\n</li>\n<li>\n<p>정렬 데이터 각 자릿수별 들어갈 수 있는 범위 만큼 버킷을 준비(예: 10진수 숫자 정렬 → 한 자리당 0~9를 사용하므로 버킷이 10개 필요)</p>\n</li>\n<li>\n<p>모든 숫자를 정렬한 뒤 0번째 버킷부터 마지막 버킷까지 차례로 저장된 값을 꺼내면 정렬된 데이터 열을 구할 수 있다.</p>\n</li>\n<li>\n<p>정렬할 데이터 열이 3자리(k=3) 10진수 일 경우의 정렬 단계</p>\n<p><strong>1단계</strong>: 정렬할 데이터들의 1의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나눠 저장</p>\n<p><strong>2단계</strong>: 0번 버킷 → 9번 버킷 순서대로, 그 안에 저장된 데이터들을 10의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나누어 저장</p>\n<p><strong>3단계</strong>: 0번 버킷 → 9번 버킷 순서대로, 그 안에 저장된 데이터를 100의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나눠 저장</p>\n</li>\n<li>\n<p>기수 정렬에서 중요한 사항</p>\n<ul>\n<li>정렬 자릿수의 선택 방향을 가장 낮은 자릿수에서 윗자릿수로 할 것</li>\n<li>아래 자리에서 이미 정렬된 데이터들의 순서를 그대로 유지할 것</li>\n</ul>\n</li>\n</ul>\n<br/>","excerpt":"제 5장: 정렬과 검색(2) 50. 다른 배열(bucket)에 데이터를 저장하고 정렬하는 버킷 정렬 버킷 정렬: 가장 간단한 정렬 알고리즘이나 장소적 자원(배열의 크기)를 많이 소모한다. 정렬 순서 정렬할 데이터 중 가져올 수 있는 값의 범위만큼 버킷을 준비 정렬할 데이터를 버킷 번호에 맞춰 저장 모든 데이터를 버킷에 넣은 후, 1번째 버킷부터 차례대로 버킷 데이터를 가져옴 정렬 순서 1단계; 버킷 역햘을 할 배열 BUCKET을 준비하고 전체 내용을 Empty 값으로 초기화 2단계: 정렬할 배열(N개)의 첨자를 저장하는 저장하는 변수 I를 0으로 초기화 3단계: I가 N미만일 경우 아래의 4~6단계 반복 4단계: VALUE에 DATA[I]를 ㄷ입 5단계: BUCKET[VALUE]에 VALUE를 대입 6단계 I의 값을 1 증가 7단계: BUCKET의 처음 요소부터 차례대로 값이 저장되어있을 경우 데이터를 꺼냄 Empty 값 → 데이터가 비어 있음을 나타내는 값으로 취급하는 데이터 외…","frontmatter":{"date":"August 12, 2022","title":"그림으로 배우는 알고리즘 제 5장 - 정렬과 검색 (2)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220812-algorithm-book-with-pic copy/"}},"next":{"id":"98d47a77-ef18-55df-95fd-6609a65df333","html":"<h1 id=\"제-5장-정렬과-검색1\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-5%EC%9E%A5-%EC%A0%95%EB%A0%AC%EA%B3%BC-%EA%B2%80%EC%83%891\" aria-label=\"제 5장 정렬과 검색1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 5장: 정렬과 검색(1)</h1>\n<h2 id=\"48-정렬sort이란-대상을-특정한-규칙에-따라-정렬하는-것\" style=\"position:relative;\"><a href=\"#48-%EC%A0%95%EB%A0%ACsort%EC%9D%B4%EB%9E%80-%EB%8C%80%EC%83%81%EC%9D%84-%ED%8A%B9%EC%A0%95%ED%95%9C-%EA%B7%9C%EC%B9%99%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EB%8A%94-%EA%B2%83\" aria-label=\"48 정렬sort이란 대상을 특정한 규칙에 따라 정렬하는 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>48. 정렬(sort)이란 대상을 특정한 규칙에 따라 정렬하는 것</h2>\n<ul>\n<li>데이터 → 사물(객체)에 부여한 <strong>특성</strong>\n<ul>\n<li>예: 학생 객체의 특성 → 이름, 키, 기말고사 성적 등</li>\n</ul>\n</li>\n<li><strong>정렬(sort)</strong>: 특정한 사물이 가진 특성을 데이터 삼아 여러 개의 사물을 정렬 시키는 처리</li>\n<li>정렬 순서의 종류\n<ul>\n<li>오름차순: 작은 순서대로 나열하기</li>\n<li>내림차순: 큰 순서대로 나열하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"49-정렬-알고리즘에는-다양한-종류가-있다\" style=\"position:relative;\"><a href=\"#49-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%97%90%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A2%85%EB%A5%98%EA%B0%80-%EC%9E%88%EB%8B%A4\" aria-label=\"49 정렬 알고리즘에는 다양한 종류가 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>49. 정렬 알고리즘에는 다양한 종류가 있다</h2>\n<h3 id=\"정렬-알고리즘의-종류\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"정렬 알고리즘의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[정렬 알고리즘의 종류]</h3>\n<ol>\n<li>버킷 정렬\n<ul>\n<li>최 대 값의 개수만큼 버킷을 준비한 다음, 그 곳에 데이터를 저장 및 정렬</li>\n</ul>\n</li>\n<li>기수 정렬\n<ul>\n<li>숫자의 각 자리를 기준으로 차례대로 데이터 정렬</li>\n</ul>\n</li>\n<li>단순 선택 정렬\n<ul>\n<li>데이터 중에서 최소 값(또는 최대 값)을 찾아 1번째 요소 (도는 마지막 요소)의 데이터와 교환</li>\n</ul>\n</li>\n<li>단순 교환 정렬(버블 정렬)\n<ul>\n<li>이웃한 데이터끼리 크고 작음을 비교해 올바른 위치로 데이터 이동</li>\n</ul>\n</li>\n<li>단순 삽입 정렬\n<ul>\n<li>정렬할 데이터를 이미 정렬된 데이터들 사이의 올바른 위치에 삽입한다.</li>\n</ul>\n</li>\n<li>셸 정렬\n<ul>\n<li>정렬할 데이터들을 일정한 개수의 그룹으로 묶어 정렬</li>\n</ul>\n</li>\n<li>병합 정렬\n<ul>\n<li>정렬할 데이터를 반으로 자르고, 자른 데이터를 다시 반으로 자르는 작업을 되풀이한다. 데이터를 더 이상 자를 수 없다면, 자른 데이터들을 정렬한 후 다른 부분들과 병합하고, 다시 정렬시키는 작업을 자른 순서의 역순으로 반복해 정렬</li>\n</ul>\n</li>\n<li>퀵 정렬\n<ul>\n<li>정렬할 데이터 안에서 임의의 숫자를 선택하고 그 값의 크고 작음을 기준으로 데이터들을 반으로 쪼갠다. 이 과정을 반복해 정렬한다.</li>\n</ul>\n</li>\n<li>힙 정렬\n<ul>\n<li>힙 구조를 이용해 정렬한다.</li>\n</ul>\n</li>\n</ol>\n<p><br/><br/></p>","frontmatter":{"date":"August 11, 2022","title":"그림으로 배우는 알고리즘 제 5장 - 정렬과 검색 (1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220811-algorithm-book-with-pic/"}},"prev":null,"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220812-algorithm-book-with-pic copy/","nextSlug":"/220811-algorithm-book-with-pic/","prevSlug":""}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}