{"componentChunkName":"component---src-templates-blog-template-js","path":"/220811-algorithm-book-with-pic/","result":{"data":{"cur":{"id":"98d47a77-ef18-55df-95fd-6609a65df333","html":"<h1 id=\"제-5장-정렬과-검색1\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-5%EC%9E%A5-%EC%A0%95%EB%A0%AC%EA%B3%BC-%EA%B2%80%EC%83%891\" aria-label=\"제 5장 정렬과 검색1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 5장: 정렬과 검색(1)</h1>\n<h2 id=\"48-정렬sort이란-대상을-특정한-규칙에-따라-정렬하는-것\" style=\"position:relative;\"><a href=\"#48-%EC%A0%95%EB%A0%ACsort%EC%9D%B4%EB%9E%80-%EB%8C%80%EC%83%81%EC%9D%84-%ED%8A%B9%EC%A0%95%ED%95%9C-%EA%B7%9C%EC%B9%99%EC%97%90-%EB%94%B0%EB%9D%BC-%EC%A0%95%EB%A0%AC%ED%95%98%EB%8A%94-%EA%B2%83\" aria-label=\"48 정렬sort이란 대상을 특정한 규칙에 따라 정렬하는 것 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>48. 정렬(sort)이란 대상을 특정한 규칙에 따라 정렬하는 것</h2>\n<ul>\n<li>데이터 → 사물(객체)에 부여한 <strong>특성</strong>\n<ul>\n<li>예: 학생 객체의 특성 → 이름, 키, 기말고사 성적 등</li>\n</ul>\n</li>\n<li><strong>정렬(sort)</strong>: 특정한 사물이 가진 특성을 데이터 삼아 여러 개의 사물을 정렬 시키는 처리</li>\n<li>정렬 순서의 종류\n<ul>\n<li>오름차순: 작은 순서대로 나열하기</li>\n<li>내림차순: 큰 순서대로 나열하기</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"49-정렬-알고리즘에는-다양한-종류가-있다\" style=\"position:relative;\"><a href=\"#49-%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%97%90%EB%8A%94-%EB%8B%A4%EC%96%91%ED%95%9C-%EC%A2%85%EB%A5%98%EA%B0%80-%EC%9E%88%EB%8B%A4\" aria-label=\"49 정렬 알고리즘에는 다양한 종류가 있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>49. 정렬 알고리즘에는 다양한 종류가 있다</h2>\n<h3 id=\"정렬-알고리즘의-종류\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A0%AC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"정렬 알고리즘의 종류 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[정렬 알고리즘의 종류]</h3>\n<ol>\n<li>버킷 정렬\n<ul>\n<li>최 대 값의 개수만큼 버킷을 준비한 다음, 그 곳에 데이터를 저장 및 정렬</li>\n</ul>\n</li>\n<li>기수 정렬\n<ul>\n<li>숫자의 각 자리를 기준으로 차례대로 데이터 정렬</li>\n</ul>\n</li>\n<li>단순 선택 정렬\n<ul>\n<li>데이터 중에서 최소 값(또는 최대 값)을 찾아 1번째 요소 (도는 마지막 요소)의 데이터와 교환</li>\n</ul>\n</li>\n<li>단순 교환 정렬(버블 정렬)\n<ul>\n<li>이웃한 데이터끼리 크고 작음을 비교해 올바른 위치로 데이터 이동</li>\n</ul>\n</li>\n<li>단순 삽입 정렬\n<ul>\n<li>정렬할 데이터를 이미 정렬된 데이터들 사이의 올바른 위치에 삽입한다.</li>\n</ul>\n</li>\n<li>셸 정렬\n<ul>\n<li>정렬할 데이터들을 일정한 개수의 그룹으로 묶어 정렬</li>\n</ul>\n</li>\n<li>병합 정렬\n<ul>\n<li>정렬할 데이터를 반으로 자르고, 자른 데이터를 다시 반으로 자르는 작업을 되풀이한다. 데이터를 더 이상 자를 수 없다면, 자른 데이터들을 정렬한 후 다른 부분들과 병합하고, 다시 정렬시키는 작업을 자른 순서의 역순으로 반복해 정렬</li>\n</ul>\n</li>\n<li>퀵 정렬\n<ul>\n<li>정렬할 데이터 안에서 임의의 숫자를 선택하고 그 값의 크고 작음을 기준으로 데이터들을 반으로 쪼갠다. 이 과정을 반복해 정렬한다.</li>\n</ul>\n</li>\n<li>힙 정렬\n<ul>\n<li>힙 구조를 이용해 정렬한다.</li>\n</ul>\n</li>\n</ol>\n<p><br/><br/></p>","excerpt":"제 5장: 정렬과 검색(1) 48. 정렬(sort)이란 대상을 특정한 규칙에 따라 정렬하는 것 데이터 → 사물(객체)에 부여한 특성 예: 학생 객체의 특성 → 이름, 키, 기말고사 성적 등 정렬(sort): 특정한 사물이 가진 특성을 데이터 삼아 여러 개의 사물을 정렬 시키는 처리 정렬 순서의 종류 오름차순: 작은 순서대로 나열하기 내림차순: 큰 순서대로 나열하기 49. 정렬 알고리즘에는 다양한 종류가 있다 [정렬 알고리즘의 종류] 버킷 정렬 최 대 값의 개수만큼 버킷을 준비한 다음, 그 곳에 데이터를 저장 및 정렬 기수 정렬 숫자의 각 자리를 기준으로 차례대로 데이터 정렬 단순 선택 정렬 데이터 중에서 최소 값(또는 최대 값)을 찾아 1번째 요소 (도는 마지막 요소)의 데이터와 교환 단순 교환 정렬(버블 정렬) 이웃한 데이터끼리 크고 작음을 비교해 올바른 위치로 데이터 이동 단순 삽입 정렬 정렬할 데이터를 이미 정렬된 데이터들 사이의 올바른 위치에 삽입한다. 셸 정렬 정렬할 데이…","frontmatter":{"date":"August 11, 2022","title":"그림으로 배우는 알고리즘 제 5장 - 정렬과 검색 (1)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220811-algorithm-book-with-pic/"}},"next":{"id":"e93fb860-d97c-5231-8f0e-f8710dd2d1a3","html":"<h1 id=\"제-4장-기본적인-알고리즘6\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-4%EC%9E%A5-%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%986\" aria-label=\"제 4장 기본적인 알고리즘6 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 4장: 기본적인 알고리즘(6)</h1>\n<h2 id=\"46-두-변수의-값을-교환할-때는-임시-변수를-사용한다\" style=\"position:relative;\"><a href=\"#46-%EB%91%90-%EB%B3%80%EC%88%98%EC%9D%98-%EA%B0%92%EC%9D%84-%EA%B5%90%ED%99%98%ED%95%A0-%EB%95%8C%EB%8A%94-%EC%9E%84%EC%8B%9C-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C%EB%8B%A4\" aria-label=\"46 두 변수의 값을 교환할 때는 임시 변수를 사용한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>46. 두 변수의 값을 교환할 때는 임시 변수를 사용한다.</h2>\n<ul>\n<li>변수 X와 Y의 값을 교환 하려면, 아래 순서대로 하면 교환할 수 없다.\n<ul>\n<li>변수 Y에 변수 X 값 대입</li>\n<li>변수 X에 변수 Y 값 대입(이미 변수 X의 값은 Y값으로 덮어씌워짐)</li>\n</ul>\n</li>\n<li><strong>임시변수</strong>를 이용해 값을 임시로 저장해야한다.\n<ul>\n<li>1단계: 변수 W에 변수 Y 값 대입</li>\n<li>2단계: 변수 Y에 변수 X 값 대입</li>\n<li>3단계: 변수 X에 변수 W 값 대입</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"47-두-수의-최대공약수는-유클리드-호제법으로-구한다\" style=\"position:relative;\"><a href=\"#47-%EB%91%90-%EC%88%98%EC%9D%98-%EC%B5%9C%EB%8C%80%EA%B3%B5%EC%95%BD%EC%88%98%EB%8A%94-%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C-%ED%98%B8%EC%A0%9C%EB%B2%95%EC%9C%BC%EB%A1%9C-%EA%B5%AC%ED%95%9C%EB%8B%A4\" aria-label=\"47 두 수의 최대공약수는 유클리드 호제법으로 구한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>47. 두 수의 최대공약수는 유클리드 호제법으로 구한다</h2>\n<ul>\n<li>\n<p>최대공약수: 0이 아닌 정수들의 공통된 약수 중 가장 큰 수</p>\n</li>\n<li>\n<p><strong>유클리드 호제법</strong>으로 구하면 된다.</p>\n<ul>\n<li>호제법: 2개의 수가 서로 나누는 것</li>\n<li>정수 X와 Y(X ≥ Y)가 주어졌을 때 X를 Y로 나눈 나머지를 R이라고 하면, X와 Y의 최대공양수는 Y와 R의 최대공약수와 같다. 그러나 X와 0이 남았을 경우 최대공약수는 X로 한다.</li>\n</ul>\n</li>\n<li>\n<p>정수 X와 Y(X ≥ Y)의 최대공약수를 변수 GCD에 구하는 알고리즘</p>\n<p>1단계: 변수 R에 X/Y의 나머지 값을 대입</p>\n<p>2단계: 변수 R이 0이 아니라면 다음 3~5단계를 반복</p>\n<p>3단계: 변수 X에 변수 Y의 값을 대입한다.</p>\n<p>4단계: 변수 Y에 변수 R의 값을 대입한다.</p>\n<p>5단계: 변수 R에 X/Y의 나머지 값을 대입한다.</p>\n<p>6단계: 변수 GCD에 변수 Y값을 대입한다.</p>\n</li>\n</ul>\n<h2 id=\"칼럼-코드와-데이터는-어디에-있을까\" style=\"position:relative;\"><a href=\"#%EC%B9%BC%EB%9F%BC-%EC%BD%94%EB%93%9C%EC%99%80-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%8A%94-%EC%96%B4%EB%94%94%EC%97%90-%EC%9E%88%EC%9D%84%EA%B9%8C\" aria-label=\"칼럼 코드와 데이터는 어디에 있을까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>칼럼: 코드와 데이터는 어디에 있을까?</h2>\n<ul>\n<li>알고리즘을 컴퓨터에서 실제로 작동시키는 것 ⇒ <strong>프로그램</strong></li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>프로그램</th>\n<th>알고리즘</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>코드</td>\n<td>처리</td>\n</tr>\n<tr>\n<td>데이터</td>\n<td>변수</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>이 코드와 데이터들은 모두 컴퓨터의 기억장치인 메모리 공간에 배치</li>\n<li>메모리는 셀이라는 단위로 관리</li>\n<li>각 셀에는 주소(어드레스)가 붙어있다.\n<ul>\n<li>주소를 요소번호라고 하면, 메모리 공간을 큰 배열이라 생각할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>","frontmatter":{"date":"August 10, 2022","title":"그림으로 배우는 알고리즘 제 4장 - 기본적인 알고리즘(6)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220810-algorithm-book-with-pic/"}},"prev":{"id":"6d64cedc-62c4-5d4e-8902-9696b220c178","html":"<h1 id=\"제-5장-정렬과-검색2\" style=\"position:relative;\"><a href=\"#%EC%A0%9C-5%EC%9E%A5-%EC%A0%95%EB%A0%AC%EA%B3%BC-%EA%B2%80%EC%83%892\" aria-label=\"제 5장 정렬과 검색2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제 5장: 정렬과 검색(2)</h1>\n<h2 id=\"50-다른-배열bucket에-데이터를-저장하고-정렬하는-버킷-정렬\" style=\"position:relative;\"><a href=\"#50-%EB%8B%A4%EB%A5%B8-%EB%B0%B0%EC%97%B4bucket%EC%97%90-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%A5%BC-%EC%A0%80%EC%9E%A5%ED%95%98%EA%B3%A0-%EC%A0%95%EB%A0%AC%ED%95%98%EB%8A%94-%EB%B2%84%ED%82%B7-%EC%A0%95%EB%A0%AC\" aria-label=\"50 다른 배열bucket에 데이터를 저장하고 정렬하는 버킷 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>50. 다른 배열(bucket)에 데이터를 저장하고 정렬하는 버킷 정렬</h2>\n<ul>\n<li>\n<p>버킷 정렬: 가장 간단한 정렬 알고리즘이나 장소적 자원(배열의 크기)를 많이 소모한다.</p>\n</li>\n<li>\n<p>정렬 순서</p>\n<ul>\n<li>정렬할 데이터 중 가져올 수 있는 값의 범위만큼 버킷을 준비</li>\n<li>정렬할 데이터를 버킷 번호에 맞춰 저장</li>\n<li>모든 데이터를 버킷에 넣은 후, 1번째 버킷부터 차례대로 버킷 데이터를 가져옴</li>\n</ul>\n</li>\n<li>\n<p>정렬 순서</p>\n<p><strong>1단계</strong>; 버킷 역햘을 할 배열 BUCKET을 준비하고 전체 내용을 Empty 값으로 초기화</p>\n<p><strong>2단계</strong>: 정렬할 배열(N개)의 첨자를 저장하는 저장하는 변수 I를 0으로 초기화</p>\n<p><strong>3단계</strong>: I가 N미만일 경우 아래의 4~6단계 반복</p>\n<p><strong>4단계</strong>: VALUE에 DATA[I]를 ㄷ입</p>\n<p><strong>5단계</strong>: BUCKET[VALUE]에 VALUE를 대입</p>\n<p><strong>6단계</strong> I의 값을 1 증가</p>\n<p><strong>7단계</strong>: BUCKET의 처음 요소부터 차례대로 값이 저장되어있을 경우 데이터를 꺼냄</p>\n</li>\n<li>\n<p>Empty 값 → 데이터가 비어 있음을 나타내는 값으로 취급하는 데이터 외의 값이라면 무엇이든 상관 없다. 0, -1을 자주 사용한다.</p>\n</li>\n</ul>\n<h2 id=\"51-아래-자릿수부터-윗-자릿수까지-버킷-정렬을-반복하는-기수-정렬\" style=\"position:relative;\"><a href=\"#51-%EC%95%84%EB%9E%98-%EC%9E%90%EB%A6%BF%EC%88%98%EB%B6%80%ED%84%B0-%EC%9C%97-%EC%9E%90%EB%A6%BF%EC%88%98%EA%B9%8C%EC%A7%80-%EB%B2%84%ED%82%B7-%EC%A0%95%EB%A0%AC%EC%9D%84-%EB%B0%98%EB%B3%B5%ED%95%98%EB%8A%94-%EA%B8%B0%EC%88%98-%EC%A0%95%EB%A0%AC\" aria-label=\"51 아래 자릿수부터 윗 자릿수까지 버킷 정렬을 반복하는 기수 정렬 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>51. 아래 자릿수부터 윗 자릿수까지 버킷 정렬을 반복하는 기수 정렬</h2>\n<ul>\n<li>\n<p>기수 정렬: 데이터가 여러 개 들어갈 수 있는 버킷을 이용해 정렬. 버킷 속 데이터 순서 관리가 가능</p>\n</li>\n<li>\n<p>정렬 데이터의 자릿수가 k일 경우 버킷 정렬을 k번 실시</p>\n</li>\n<li>\n<p>정렬 데이터 각 자릿수별 들어갈 수 있는 범위 만큼 버킷을 준비(예: 10진수 숫자 정렬 → 한 자리당 0~9를 사용하므로 버킷이 10개 필요)</p>\n</li>\n<li>\n<p>모든 숫자를 정렬한 뒤 0번째 버킷부터 마지막 버킷까지 차례로 저장된 값을 꺼내면 정렬된 데이터 열을 구할 수 있다.</p>\n</li>\n<li>\n<p>정렬할 데이터 열이 3자리(k=3) 10진수 일 경우의 정렬 단계</p>\n<p><strong>1단계</strong>: 정렬할 데이터들의 1의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나눠 저장</p>\n<p><strong>2단계</strong>: 0번 버킷 → 9번 버킷 순서대로, 그 안에 저장된 데이터들을 10의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나누어 저장</p>\n<p><strong>3단계</strong>: 0번 버킷 → 9번 버킷 순서대로, 그 안에 저장된 데이터를 100의 자리를 기준으로 0번 버킷 ~ 9번 버킷에 나눠 저장</p>\n</li>\n<li>\n<p>기수 정렬에서 중요한 사항</p>\n<ul>\n<li>정렬 자릿수의 선택 방향을 가장 낮은 자릿수에서 윗자릿수로 할 것</li>\n<li>아래 자리에서 이미 정렬된 데이터들의 순서를 그대로 유지할 것</li>\n</ul>\n</li>\n</ul>\n<br/>","frontmatter":{"date":"August 12, 2022","title":"그림으로 배우는 알고리즘 제 5장 - 정렬과 검색 (2)","categories":"알고리즘","author":"jinnypark9393","emoji":"🤖"},"fields":{"slug":"/220812-algorithm-book-with-pic copy/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220811-algorithm-book-with-pic/","nextSlug":"/220810-algorithm-book-with-pic/","prevSlug":"/220812-algorithm-book-with-pic copy/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}