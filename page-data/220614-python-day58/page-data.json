{"componentChunkName":"component---src-templates-blog-template-js","path":"/220614-python-day58/","result":{"data":{"cur":{"id":"df25cd41-a06a-5293-af38-a7acf3c0400b","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 클래스 실습문제를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-14-Python-Photo/2022-06-14-Python-Photo1.jpg\" alt=\"2022-06-14-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-14-Python-Photo/2022-06-14-Python-Photo2.jpg\" alt=\"2022-06-14-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"05-클래스-실습문제\" style=\"position:relative;\"><a href=\"#05-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C\" aria-label=\"05 클래스 실습문제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>05. 클래스 실습문제</h1>\n<h2 id=\"실습문제-451\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C-451\" aria-label=\"실습문제 451 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실습문제 4.5.1</h2>\n<ul>\n<li>Player 클래스를 구현해 보자.\n<ul>\n<li>\n<ol>\n<li>속성: 닉네임, 미네랄, 가스, 유닛리스트</li>\n</ol>\n</li>\n<li>\n<p>예시</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Player\n\n닉네임 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"Bisu\"</span>\n미네랄<span class=\"token punctuation\">:</span> <span class=\"token number\">500</span>\n가스<span class=\"token punctuation\">:</span> <span class=\"token number\">200</span>\n유닛 리스트<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>프로브<span class=\"token punctuation\">,</span> 프로브<span class=\"token punctuation\">,</span> 질럿<span class=\"token punctuation\">]</span></code></pre></div>\n<ul>\n<li>유닛 리스트의 프로브, 질럿은 Unit 클래스로 만든 객체.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Unit\n\n이름 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"프로브\"</span>\n체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n방어막 <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n공격력 <span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Unit\n\n이름 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"프로브\"</span>\n체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n방어막 <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n공격력 <span class=\"token punctuation\">:</span> <span class=\"token number\">5</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Unit\n\n이름 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"질럿\"</span>\n체력 <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span>\n방어막 <span class=\"token punctuation\">:</span> <span class=\"token number\">60</span>\n공격력 <span class=\"token punctuation\">:</span> <span class=\"token number\">16</span></code></pre></div>\n<ul>\n<li>위와 같은 클래스간의 관계를 has-a 라고 한다.\n<ul>\n<li><strong>has-a</strong>: Player has-a Unit (클래스가 다른 객체를 가지고 있는 형태)\n<ul>\n<li>Player가 여러 Unit을 갖고있음 ⇒ 1 : N 관계</li>\n</ul>\n</li>\n<li><strong>is-a</strong>: Weapon is-a Item (서로 상속 시 발생: Weapon &#x3C; Item)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>유닛 정보</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">unit_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"probe\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"zealot\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"질럿\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"dragoon\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"드라군\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p>메서드: 생산하기</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">produce<span class=\"token punctuation\">(</span>이름<span class=\"token punctuation\">,</span> 미네랄<span class=\"token punctuation\">,</span> 가스<span class=\"token punctuation\">,</span> 체력<span class=\"token punctuation\">,</span> 방어막<span class=\"token punctuation\">,</span> 공격력<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">-</span> Player의 미네랄과 가스가 충분한 경우\n <span class=\"token operator\">-</span><span class=\"token operator\">></span> 유닛 객체를 생성하고 유닛 리스트에 추가한다<span class=\"token punctuation\">.</span>\n<span class=\"token operator\">-</span> Player의 미네랄이 부족한 경우\n <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token string\">\"미네랄이 부족합니다\"</span>를 출력\n<span class=\"token operator\">-</span> Player의 가스가 부족한 경우\n <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token string\">\"가스가 부족합니다\"</span>를 출력</code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"강의-해설\" style=\"position:relative;\"><a href=\"#%EA%B0%95%EC%9D%98-%ED%95%B4%EC%84%A4\" aria-label=\"강의 해설 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>강의 해설</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">unit_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"probe\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"프로브\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">5</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"zealot\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"질럿\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"dragoon\"</span> <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"name\"</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">\"드라군\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"mineral\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"gas\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"hp\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"shield\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"demage\"</span> <span class=\"token punctuation\">:</span> <span class=\"token number\">20</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\"># 유닛 클래스</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Unit</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름, 체력, 방어막, 공격력\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name\n        self<span class=\"token punctuation\">.</span>hp <span class=\"token operator\">=</span> hp\n        self<span class=\"token punctuation\">.</span>shield <span class=\"token operator\">=</span> shield\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n\n<span class=\"token comment\"># 플레이어 클래스</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Player</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 닉네임, 미네랄, 가스, 유닛리스트\n    메서드 : 유닛 생산 하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nickname<span class=\"token punctuation\">,</span> mineral<span class=\"token punctuation\">,</span> gas<span class=\"token punctuation\">,</span> unit_list<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>nickname <span class=\"token operator\">=</span> nickname\n        self<span class=\"token punctuation\">.</span>mineral <span class=\"token operator\">=</span> mineral\n        self<span class=\"token punctuation\">.</span>gas <span class=\"token operator\">=</span> gas\n        self<span class=\"token punctuation\">.</span>unit_list <span class=\"token operator\">=</span> unit_list\n    <span class=\"token comment\"># 생산 하기</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">produce</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> mineral<span class=\"token punctuation\">,</span> gas<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> shield<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span> self<span class=\"token punctuation\">.</span>mineral <span class=\"token operator\">-</span> mineral <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"미네랄이 부족합니다.\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">elif</span> self<span class=\"token punctuation\">.</span>gas <span class=\"token operator\">-</span> gas <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"가스가 부족합니다.\"</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n            self<span class=\"token punctuation\">.</span>mineral <span class=\"token operator\">-=</span> mineral\n            self<span class=\"token punctuation\">.</span>gas <span class=\"token operator\">-=</span> gas\n            unit <span class=\"token operator\">=</span> Unit<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> hp<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span>\n            self<span class=\"token punctuation\">.</span>unit_list<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>unit<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 생산합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 플레이어 생성</span>\nplayer1 <span class=\"token operator\">=</span> Player<span class=\"token punctuation\">(</span><span class=\"token string\">\"Bisu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 유닛 생성</span>\nplayer1<span class=\"token punctuation\">.</span>produce<span class=\"token punctuation\">(</span>unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'mineral'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'gas'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'demage'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'hp'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> unit_info<span class=\"token punctuation\">[</span><span class=\"token string\">'probe'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token string\">'shield'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># 생성된 모든 유닛 확인</span>\n<span class=\"token keyword\">for</span> unit <span class=\"token keyword\">in</span> player1<span class=\"token punctuation\">.</span>unit_list<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>unit<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">] 체력 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>unit<span class=\"token punctuation\">.</span>hp<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 방어막 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>unit<span class=\"token punctuation\">.</span>shield<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 공격력 : </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>unit<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 클래스 실습문제를 알아보았다. 다음 포스팅에서는 데이터베이스에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘은 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 파트 2의 클래스 실습문제를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-06-14-Python-Photo1 2022-06-14-Python-Photo2  05. 클래스 실습문제 실습문제 4.5.1 Player 클래스를 구현해 보자. 속성: 닉네임, 미네랄, 가스, 유닛리스트 예시 유닛 리스트의 프로브, 질럿은 Unit 클래스로 만든 객체. 위와 같은 클래스간의 관계를 has-a 라고 한다. has-a: Player has-a Unit (클래스가 다른 객체를 가지고 있는 형태) Player가 여러 Unit을 갖고있음 ⇒ 1 : N 관계 is-a: Weapon is-a Item (서로 상속 시 발생: Weapon < Item) 유닛 정보 메서드: 생산하기 강의 해설  이번 포스팅에서는 강의의 파트 2…","frontmatter":{"date":"June 14, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 58일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220614-python-day58/"}},"next":{"id":"7610da08-caa5-5f19-8ca5-272132e5fae2","html":"<p>오늘은 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 파트 2의 상속을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo1.jpg\" alt=\"2022-06-13-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo2.jpg\" alt=\"2022-06-13-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"04-상속\" style=\"position:relative;\"><a href=\"#04-%EC%83%81%EC%86%8D\" aria-label=\"04 상속 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>04. 상속</h1>\n<h2 id=\"1-상속의-개념\" style=\"position:relative;\"><a href=\"#1-%EC%83%81%EC%86%8D%EC%9D%98-%EA%B0%9C%EB%85%90\" aria-label=\"1 상속의 개념 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 상속의 개념</h2>\n<ul>\n<li>\n<p>클래스들의 <strong>공통된 속성과 메서드</strong>를 뽑아내 부모 클래스를 만든다.</p>\n</li>\n<li>\n<p>이를 자식 클래스에서 상속받아 사용한다.</p>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo3.png\" alt=\"2022-06-13-Python-Photo3\"></p>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-상속의-장점\" style=\"position:relative;\"><a href=\"#2-%EC%83%81%EC%86%8D%EC%9D%98-%EC%9E%A5%EC%A0%90\" aria-label=\"2 상속의 장점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 상속의 장점</h2>\n<ul>\n<li>코드의 중복을 제거할 수 있다.</li>\n<li>유지보수가 편리해진다.\n<ul>\n<li>공통 구현 ⇒ 부모클래스만 수정하면 된다.</li>\n<li>상세 구현 ⇒ 자식클래스만 수정하면 된다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-상속-구현하기\" style=\"position:relative;\"><a href=\"#3-%EC%83%81%EC%86%8D-%EA%B5%AC%ED%98%84%ED%95%98%EA%B8%B0\" aria-label=\"3 상속 구현하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 상속 구현하기</h2>\n<ul>\n<li>\n<p>Weapon 클래스 구현</p>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo4.png\" alt=\"2022-06-13-Python-Photo4\"></p>\n<ul>\n<li>Item 클래스로부터 <code class=\"language-text\">이름</code> 속성, <code class=\"language-text\">줍기</code> , <code class=\"language-text\">버리기</code> 메서드를 상속받았다.</li>\n<li>Weapon 클래스에는 <code class=\"language-text\">데미지</code> 속성, <code class=\"language-text\">공격하기</code> 메서드가 추가되었다.</li>\n</ul>\n</li>\n<li>\n<p>HealingItem 클래스 구현</p>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo5.png\" alt=\"2022-06-13-Python-Photo5\"></p>\n</li>\n<li>\n<p>Item 클래스로부터 <code class=\"language-text\">이름</code> 속성, <code class=\"language-text\">줍기</code> , <code class=\"language-text\">버리기</code> 메서드를 상속받았다.</p>\n</li>\n<li>\n<p>HealingItem 클래스에는 <code class=\"language-text\">회복량</code> 속성, <code class=\"language-text\">사용하기</code> 메서드가 추가되었다.</p>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"4-추상-클래스\" style=\"position:relative;\"><a href=\"#4-%EC%B6%94%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"4 추상 클래스 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 추상 클래스</h2>\n<ul>\n<li>\n<p>추상 메서드를 가질 수 있다.</p>\n</li>\n<li>\n<p>해당 클래스를 상속 받는 자식 클래스에서 구현을 강제하도록 하는 클래스</p>\n<p><img src=\"/assets/images/2022-06-13-Python-Photo/2022-06-13-Python-Photo6.png\" alt=\"2022-06-13-Python-Photo6\"></p>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"5-실습\" style=\"position:relative;\"><a href=\"#5-%EC%8B%A4%EC%8A%B5\" aria-label=\"5 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름\n    메서드 : 줍기, 버리기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name \n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 주웠습니다.\"</span></span><span class=\"token punctuation\">)</span> \n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">discard</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 버렸습니다.\"</span></span><span class=\"token punctuation\">)</span> \n    \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Weapon</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 공격력\n    메서드 : 공격하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n    <span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 이용해 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">로 공격합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HealingItem</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 회복량\n    메서드 : 사용하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> recovery_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>recovery_amount <span class=\"token operator\">=</span> recovery_amount\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 사용합니다. </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>recovery_amount<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 회복\"</span></span><span class=\"token punctuation\">)</span>\n\nm16 <span class=\"token operator\">=</span> Weapon<span class=\"token punctuation\">(</span><span class=\"token string\">\"m16\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span>\nbungdae <span class=\"token operator\">=</span> HealingItem<span class=\"token punctuation\">(</span><span class=\"token string\">\"붕대\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\nm16<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nbungdae<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter04<span class=\"token operator\">/</span><span class=\"token number\">05.</span>상속<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span>m16<span class=\"token punctuation\">]</span>을<span class=\"token punctuation\">(</span>를<span class=\"token punctuation\">)</span> 이용해 <span class=\"token number\">110</span>로 공격합니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>붕대<span class=\"token punctuation\">]</span>을<span class=\"token punctuation\">(</span>를<span class=\"token punctuation\">)</span> 사용합니다<span class=\"token punctuation\">.</span> <span class=\"token number\">20</span> 회복</code></pre></div>\n<br/>\n<ul>\n<li>추상 클래스를 실습해보자\n<ul>\n<li>abc라는 모듈을 가져와야한다(from abc import *)</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>ABCMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름\n    메서드 : 줍기, 버리기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name \n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 주웠습니다.\"</span></span><span class=\"token punctuation\">)</span> \n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">discard</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 버렸습니다.\"</span></span><span class=\"token punctuation\">)</span> \n    \n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Weapon</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 공격력\n    메서드 : 공격하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n    <span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 이용해 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">로 공격합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HealingItem</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 회복량\n    메서드 : 사용하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> recovery_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>recovery_amount <span class=\"token operator\">=</span> recovery_amount\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 사용합니다. </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>recovery_amount<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 회복\"</span></span><span class=\"token punctuation\">)</span>\n\nm16 <span class=\"token operator\">=</span> Weapon<span class=\"token punctuation\">(</span><span class=\"token string\">\"m16\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span>\nbungdae <span class=\"token operator\">=</span> HealingItem<span class=\"token punctuation\">(</span><span class=\"token string\">\"붕대\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\nm16<span class=\"token punctuation\">.</span>attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nbungdae<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>Weapon클래스에서 use를 구현하지 않고 실행해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter04<span class=\"token operator\">/</span><span class=\"token number\">06.</span>추상클래스<span class=\"token punctuation\">.</span>py\nTraceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  File <span class=\"token string\">\"/Users/usr/Documents/python_advanced/myvenv/Chapter04/06.추상클래스.py\"</span><span class=\"token punctuation\">,</span> line <span class=\"token number\">44</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span>\n    m16 <span class=\"token operator\">=</span> Weapon<span class=\"token punctuation\">(</span><span class=\"token string\">\"m16\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span>\nTypeError<span class=\"token punctuation\">:</span> Can't instantiate abstract <span class=\"token keyword\">class</span> <span class=\"token class-name\">Weapon</span> <span class=\"token keyword\">with</span> abstract method use</code></pre></div>\n<ul>\n<li>abstract 메서드를 구현하지 않아 사용할 수 없다는 메시지 발생</li>\n</ul>\n<br/>\n<ul>\n<li>Weapon클래스에서 attack을 use로 수정해주자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> abc <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Item</span><span class=\"token punctuation\">(</span>metaclass<span class=\"token operator\">=</span>ABCMeta<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 이름\n    메서드 : 줍기, 버리기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        self<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name \n    \n    <span class=\"token keyword\">def</span> <span class=\"token function\">pick</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 주웠습니다.\"</span></span><span class=\"token punctuation\">)</span> \n\n    <span class=\"token keyword\">def</span> <span class=\"token function\">discard</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 버렸습니다.\"</span></span><span class=\"token punctuation\">)</span> \n    \n    <span class=\"token decorator annotation punctuation\">@abstractmethod</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">pass</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Weapon</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 공격력\n    메서드 : 공격하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> demage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>demage <span class=\"token operator\">=</span> demage\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 이용해 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>demage<span class=\"token punctuation\">}</span></span><span class=\"token string\">로 공격합니다.\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">HealingItem</span><span class=\"token punctuation\">(</span>Item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token triple-quoted-string string\">\"\"\"\n    속성 : 회복량\n    메서드 : 사용하기\n    \"\"\"</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> recovery_amount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token builtin\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>__init__<span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n        self<span class=\"token punctuation\">.</span>recovery_amount <span class=\"token operator\">=</span> recovery_amount\n    <span class=\"token keyword\">def</span> <span class=\"token function\">use</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"[</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span></span><span class=\"token string\">]을(를) 사용합니다. </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>self<span class=\"token punctuation\">.</span>recovery_amount<span class=\"token punctuation\">}</span></span><span class=\"token string\"> 회복\"</span></span><span class=\"token punctuation\">)</span>\n\nm16 <span class=\"token operator\">=</span> Weapon<span class=\"token punctuation\">(</span><span class=\"token string\">\"m16\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">110</span><span class=\"token punctuation\">)</span>\nbungdae <span class=\"token operator\">=</span> HealingItem<span class=\"token punctuation\">(</span><span class=\"token string\">\"붕대\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span>\n\nm16<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nbungdae<span class=\"token punctuation\">.</span>use<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>실행 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_advanced git<span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>master<span class=\"token punctuation\">)</span> ✗ <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documen\nts<span class=\"token operator\">/</span>python_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_advanced<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter04<span class=\"token operator\">/</span><span class=\"token number\">06.</span>추상클래스<span class=\"token punctuation\">.</span>py\n<span class=\"token punctuation\">[</span>m16<span class=\"token punctuation\">]</span>을<span class=\"token punctuation\">(</span>를<span class=\"token punctuation\">)</span> 이용해 <span class=\"token number\">110</span>로 공격합니다<span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">[</span>붕대<span class=\"token punctuation\">]</span>을<span class=\"token punctuation\">(</span>를<span class=\"token punctuation\">)</span> 사용합니다<span class=\"token punctuation\">.</span> <span class=\"token number\">20</span> 회복</code></pre></div>\n<p><br/><br/></p>\n<p>이번 포스팅에서는 강의의 파트 2의 상속을 알아보았다. 다음 포스팅에서는 클래스 실습문제를 풀어보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"June 13, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 57일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220613-python-day57/"}},"prev":{"id":"c7e0ce65-91c2-5ada-9ad9-65767ec8cd01","html":"<ul>\n<li>참고: 쿠버네티스 한글화에 참여하려고 번역했던 문서이나 중복으로 업로드 하지 않음.</li>\n</ul>\n<h1 id=\"kubernetes번역---파드-디버그\" style=\"position:relative;\"><a href=\"#kubernetes%EB%B2%88%EC%97%AD---%ED%8C%8C%EB%93%9C-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"kubernetes번역   파드 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[Kubernetes]번역 - 파드 디버그</h1>\n<ul>\n<li>원문: <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/\">https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/</a></li>\n</ul>\n<p>이 가이드는 쿠버네티스에 배포되었으나 제대로 동작하지 않는 애플리케이션을 디버깅하는 유저들을 돕기 위한 것이다. 이 문서는 클러스터를 디버깅하고 싶어하는 사람들을 위한 가이드가 아니다. 클러스터 디버깅을 위해서는 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-cluster/\">이 가이드</a>를 확인하자.</p>\n<h1 id=\"문제를-진단\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%A0%9C%EB%A5%BC-%EC%A7%84%EB%8B%A8\" aria-label=\"문제를 진단 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문제를 진단</h1>\n<p>트러블슈팅의 첫 단계는 분류이다. 무엇이 문제일까? 파드일까? 레플리케이션 컨트롤러일까? 아니면 서비스일까?</p>\n<ul>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-pods\">파드 디버그</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-replication-controllers\">레플리케이션 컨트롤러 디버그</a></li>\n<li><a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-services\">서비스 디버그</a></li>\n</ul>\n<h2 id=\"파드-디버그\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"파드 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드 디버그</h2>\n<p>파드를 디버깅할 떄의 첫 단계는 파드를 살펴보는 것이다. 파드의 현재 상태와 최근 이벤트들을 다음 명령어로 확인하자.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl describe pods <span class=\"token variable\">${POD_NAME}</span></code></pre></div>\n<p>파드 내 컨테이너들의 상태를 확인한다. 모두 <code class=\"language-text\">Running</code>인가? 최근에 재시작이 있었는가?</p>\n<p>파드의 상태에 따라 계속 디버깅하라.</p>\n<h2 id=\"파드가-여전히-pending-상태\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%97%AC%EC%A0%84%ED%9E%88-pending-%EC%83%81%ED%83%9C\" aria-label=\"파드가 여전히 pending 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 여전히 pending 상태</h2>\n<p>만약 파드가 <code class=\"language-text\">Pending</code> 상태에 빠져 있다면, 이것은 노드에 스케줄링 될 수 없다는 뜻이다. 일반적으로 이것은 어떠한 형태로든 스케줄링을 막는 충분치 않은 리소스가 있기 때문이다. 위의 <code class=\"language-text\">kubectl describe …</code> 명령어의 결과를 살펴본다. 스케줄러로부터 왜 파드가 스케줄 되지 못했는지 메시지가 있을 것이다. 이유들은 다음을 포함한다.</p>\n<ul>\n<li><strong>충분한 리소스를 갖고있지 않다</strong>: 클러스터의 CPU 혹은 메모리 공급을 소진했을 수 있다. 이 경우 파드를 삭제하거나, 리소스 요청을 조정하거나, 클러스터에 신규 노드를 추가해야한다. 더 많은 정보를 위해 <a href=\"https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\">컴퓨팅 리소스 문서</a>를 확인하자.</li>\n<li><strong><code class=\"language-text\">hostPort</code> 를 사용중이다</strong>: 파드를 <code class=\"language-text\">hostPort</code> 에 바인딩한 경우 파드가 스케줄 될 수 있는 개수가 한정된다. 대부분의 경우, <code class=\"language-text\">hostPort</code> 는 불필요하므로, 파드를 노출하기 위해 서비스 오브젝트를 사용해보자. 만약 <code class=\"language-text\">hostPort</code>가 정말 필요할 경우 쿠버네티스 클러스터의 노드 수만큼만 파드를 스케줄링할 수 있다.</li>\n</ul>\n<h2 id=\"파드가-여전히-waiting-상태\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%97%AC%EC%A0%84%ED%9E%88-waiting-%EC%83%81%ED%83%9C\" aria-label=\"파드가 여전히 waiting 상태 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 여전히 waiting 상태</h2>\n<p>파드가 <code class=\"language-text\">Waiting</code> 상태에 빠져있다면, 파드는 워커노드에 스케줄되었으나 해당 머신에서 동작하지 못하는 것이다. 다시 말하지만, <code class=\"language-text\">kubectl describe …</code> 가 도움이 될 것이다. <code class=\"language-text\">Waiting</code> 파드의 가장 일반적인 원인은 파드가 이미지를 당겨오는 데에 실패한 것이다. 세 가지 확인 사항이 있다.</p>\n<ul>\n<li>이미지 이름이 올바른지 확인한다.</li>\n<li>이미지를 레지스트리로 푸쉬했는가?</li>\n<li>이미지를 당겨올 수 있는지 여부를 보기 위해 매뉴얼로 이미지를 당겨오자. 만약 PC의 도커를 사용할 경우, <code class=\"language-text\">docker pull &lt;image></code> 를 실행하자.</li>\n</ul>\n<h2 id=\"파드가-충돌했거나-unhealthy\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-%EC%B6%A9%EB%8F%8C%ED%96%88%EA%B1%B0%EB%82%98-unhealthy\" aria-label=\"파드가 충돌했거나 unhealthy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 충돌했거나 unhealthy</h2>\n<p>파드가 스케줄링 된 후에는 디버그를 위해 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-running-pod/\">동작중인 파드 디버그</a>를 이용할 수 있다.</p>\n<h2 id=\"파드가-running-상태이나-명령한대로-실행되지-않음\" style=\"position:relative;\"><a href=\"#%ED%8C%8C%EB%93%9C%EA%B0%80-running-%EC%83%81%ED%83%9C%EC%9D%B4%EB%82%98-%EB%AA%85%EB%A0%B9%ED%95%9C%EB%8C%80%EB%A1%9C-%EC%8B%A4%ED%96%89%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%8C\" aria-label=\"파드가 running 상태이나 명령한대로 실행되지 않음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>파드가 running 상태이나 명령한대로 실행되지 않음</h2>\n<p>만약 파드가 예상한대로 동작하지 않는다면, 파드 설명 상 에러가 있었으나(예: 로컬머신의 <code class=\"language-text\">mypod.yaml</code> 파일), 해당 에러가 파드를 생성할 때 조용히 무시 당했을 수 있다. 종종 파드 설명 섹션이 잘못되거나, 네 이름이 잘못 타이핑 되는 등의 이유로 키가 무시된다. 예를 들면, 만약 <code class=\"language-text\">command</code> 를 <code class=\"language-text\">commnd</code> 로 스펠링을 잘못 입력하면 파드가 생성되나 사용하려고 의도했던 명령줄이 사용되지 않을 것이다.</p>\n<p>첫번째로 해야할 것은 파드를 삭제하고 <code class=\"language-text\">—validate</code> 옵션과 함께 재생성해보는 것이다. 예를 들어, <code class=\"language-text\">kubectl apply —validate -f mypod.yaml</code> 을 실행한다. 만약 <code class=\"language-text\">command</code>를 <code class=\"language-text\">commnd</code>로 스펠링을 잘못 입력했다면 아래와 같은 에러가 발생할 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">I0805 <span class=\"token number\">10</span>:43:25.129850   <span class=\"token number\">46757</span> schema.go:126<span class=\"token punctuation\">]</span> unknown field: commnd\nI0805 <span class=\"token number\">10</span>:43:25.129973   <span class=\"token number\">46757</span> schema.go:129<span class=\"token punctuation\">]</span> this may be a <span class=\"token boolean\">false</span> alarm, see https://github.com/kubernetes/kubernetes/issues/6842\npods/mypod</code></pre></div>\n<p>다음으로 확인할 사항은 apiserver에 있는 파드가 원래 만드려고 했던 파드와의 일치여부이다(예: 로컬머신의 YAML파일). 예를 들어, <code class=\"language-text\">kubectl get pods/mypod -o yaml > mypod-on-apiserver.yaml</code> 을 실행하고 수동으로 오리지널 파드인 <code class=\"language-text\">mypod.yaml</code> 의 설명과 apiserver로부터 받은 <code class=\"language-text\">mypod-on-apiserver.yaml</code> 를 비교한다. “apiserver”버전에는 일반적으로 오리지널 버전에 없는 몇 줄이 존재한다. 이는 예상된 것이다. 하지만 apiserver버전에 없는 내용이 오리지널에 있다면, 이것이 파드 스펙에서 문제가 있는 부분을 나타내는 것일 수 있다.</p>\n<h2 id=\"레플리케이션-컨트롤러-디버그\" style=\"position:relative;\"><a href=\"#%EB%A0%88%ED%94%8C%EB%A6%AC%EC%BC%80%EC%9D%B4%EC%85%98-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"레플리케이션 컨트롤러 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>레플리케이션 컨트롤러 디버그</h2>\n<p>레플리케이션 컨트롤러는 꽤 직관적이다. 파드를 생성할 수도, 생성하지 못할수도 있다. 만약 레플리케이션 컨트롤러가 파드를 생성하지 못한다면, <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-pods/#debugging-pods\">위의 지시</a>를 따라 파드를 디버그하자.</p>\n<p>또한 <code class=\"language-text\">kubectl describe rc ${CONTROLLER_NAME}</code> 을 사용해 레플리케이션 컨트롤러에 내재된 이벤트를 확인할 수 있다.</p>\n<h2 id=\"서비스-디버그\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%94%94%EB%B2%84%EA%B7%B8\" aria-label=\"서비스 디버그 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스 디버그</h2>\n<p>서비스는 파드 셋에 걸쳐 로드밸런싱을 제공한다. 서비스가 적절하게 동작하지 못하게 하는 몇 개의 일반적인 문제들이 있다. 다음 지시는 서비스의 문제들의 디버깅에 도움이 될 수 있다.</p>\n<p>먼저, 서비스의 엔드포인트가 있는지 검증한다. 모든 서비스 오브젝트에는 apiserver가 <code class=\"language-text\">endpoints</code> 리소스를 사용가능하게 만든다.</p>\n<p>이 리소스는 아래와 같이 확인할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get endpoints <span class=\"token variable\">${SERVICE_NAME}</span></code></pre></div>\n<p>엔드포인트의 파드의 개수가 서비스의 멤버로 예상한 것과 맞는지 확인한다. 예를 들면, 만약 서비스가 레플리카 3개의 nginx 컨테이너를 위한 것이라면, 서비스의 엔드포인트로 3개의 다른 IP주소를 예상할 것이다.</p>\n<h2 id=\"서비스에-엔드포인트가-빠져있다\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90-%EC%97%94%EB%93%9C%ED%8F%AC%EC%9D%B8%ED%8A%B8%EA%B0%80-%EB%B9%A0%EC%A0%B8%EC%9E%88%EB%8B%A4\" aria-label=\"서비스에 엔드포인트가 빠져있다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서비스에 엔드포인트가 빠져있다</h2>\n<p>만약 엔드포인트가 빠져있다면, 서비스가 사용하는 레이블을 이용해 파드의 목록을 불러오는 것을 시도한다. 레이블이 아래와 같은 서비스를 갖고있다고 가정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">...</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n     <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx\n     <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> frontend</code></pre></div>\n<p>셀렉터와 일치하는 파드 목록을 나열하기 위해 아래를 사용할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl get pods --selector<span class=\"token operator\">=</span>name<span class=\"token operator\">=</span>nginx,type<span class=\"token operator\">=</span>frontend</code></pre></div>\n<p>서비스에서 제공하기를 기대하는 파드와 목록이 일치하는지 검증한다. 파드의 <code class=\"language-text\">containerPort</code> 가 서비스의 <code class=\"language-text\">targetPort</code> 와 일치하는지 검증한다.</p>\n<h2 id=\"네트워크-트래픽이-포워딩-되지-않음\" style=\"position:relative;\"><a href=\"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC-%ED%8A%B8%EB%9E%98%ED%94%BD%EC%9D%B4-%ED%8F%AC%EC%9B%8C%EB%94%A9-%EB%90%98%EC%A7%80-%EC%95%8A%EC%9D%8C\" aria-label=\"네트워크 트래픽이 포워딩 되지 않음 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>네트워크 트래픽이 포워딩 되지 않음</h2>\n<p>더 많은 정보를 위해 <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/\">서비스 디버그</a>를 확인하자.</p>\n<h1 id=\"다음-내용\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EC%9D%8C-%EB%82%B4%EC%9A%A9\" aria-label=\"다음 내용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다음 내용</h1>\n<p>만약 위의 것 중 어느 것도 문제를 해결하지 못한다면, <a href=\"https://kubernetes.io/docs/tasks/debug/debug-application/debug-service/\">서비스 디버그 문서</a>의 지시를 따라 서비스가 동작하고, <code class=\"language-text\">Endpoints</code>를 가지고 있으며, <code class=\"language-text\">Pods</code>가 실제로 서비스 되고있는지 확인하라. DNS가 동작하고, iptables 규칙이 설치되고, kube-proxy가 잘못 동작하지 않아야 한다.</p>\n<p>또한 <a href=\"https://kubernetes.io/docs/tasks/debug/\">트러블슈팅 문서</a>를 방문해 더 많은 정보를 확인할 수 있다.</p>\n<h1 id=\"피드백\" style=\"position:relative;\"><a href=\"#%ED%94%BC%EB%93%9C%EB%B0%B1\" aria-label=\"피드백 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>피드백</h1>\n<p>이 페이지가 도움이 되었나요?</p>\n<p>네 아니요</p>","frontmatter":{"date":"June 15, 2022","title":"쿠버네티스 공식문서 번역 - 파드 디버그(Debug Pods)","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220615-kubernetes-debug-pods/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220614-python-day58/","nextSlug":"/220613-python-day57/","prevSlug":"/220615-kubernetes-debug-pods/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}