{"componentChunkName":"component---src-templates-blog-template-js","path":"/221215-etc-what-is-openai-chatgpt/","result":{"data":{"cur":{"id":"f22c8479-a928-5071-b842-9d3cd8d185fc","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>아는 분이 한 번 써보라며 링크를 공유해주셔서 써보게 된 플랫폼인 OpenAI. 써보니 생각보다 괜찮아서 기록용으로 블로그에 업데이트 해둔다. 찾아보니 얼마 전 <a href=\"https://news.hada.io/topic?id=7937\">긱뉴스에서도 관련 내용</a>을 업데이트 했었고, 댓글을 보니 다들 성능에 놀라신 눈치.</p>\n<br/>\n<h1 id=\"2-openai-chatgpt란\" style=\"position:relative;\"><a href=\"#2-openai-chatgpt%EB%9E%80\" aria-label=\"2 openai chatgpt란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. OpenAI, ChatGPT란?</h1>\n<p>OpenAI는 Samuel H. Altman과 Elon Musk(몸이 몇개인걸까 이분은)가 공동 창업한 동명의 회사에서 만든 인공지능 플랫폼으로 딥러닝 시스템을 통해 자기 자신과의 셀프 트레이닝 방식을 채택해 학습되었다.</p>\n<br/>\n<p>이 중 내가 사용해본 것은 ChatGPT라는 대화형으로 질의 응답을 할 수 있는 자연스러운 대화를 주고받을 수 있는 언어 모델. 연구 미리보기 기간에는 무료로 제공된다고 해서 바로 사용해 봄.</p>\n<br/>\n<p>사용법은 아주 간단하다. <a href=\"https://chat.openai.com/chat\">https://chat.openai.com/chat</a> 웹사이트에 접속해 로그인 후(Gmail 로그인 가능), 필용을 문장으로 질문을 남기면 된다. 개발 관련된 부분 뿐만 아니라 다양한 분야의 질의 응답에 대응이 가능하고, 한국어 대응도 가능하다고.</p>\n<br/>\n<p>아래는 내가 테스트해보았던 영문 질의와 그 답변.</p>\n<p><strong>Q. How Can I connect express.js project with MySQL database?</strong></p>\n<p>To connect an Express.js project with a MySQL database, you will need to install the MySQL npm package. To do this, you can use the following command:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install mysql</code></pre></div>\n<br/>\n<p>Once the MySQL package is installed, you can use the following code to create a connection to a MySQL database:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'your_username',\n  password: 'your_password',\n  database: 'your_database_name'\n});\n\nconnection.connect();\n</code></pre></div>\n<p>Replace <strong><code class=\"language-text\">host</code></strong>, <strong><code class=\"language-text\">user</code></strong>, <strong><code class=\"language-text\">password</code></strong>, and <strong><code class=\"language-text\">database</code></strong> with the appropriate values for your MySQL server. You can then use the <strong><code class=\"language-text\">connection</code></strong> object to query the database using the methods provided by the MySQL package.</p>\n<br/>\n<p>Here is an example of how to use the <strong><code class=\"language-text\">connection</code></strong> object to insert a new record into a table:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const post = {title: 'Hello, world!', body: 'This is a test post.'};\nconst query = connection.query('INSERT INTO posts SET ?', post, function (error, results, fields) {\n  if (error) throw error;\n});</code></pre></div>\n<p>This code inserts a new record into the <strong><code class=\"language-text\">posts</code></strong> table with the <strong><code class=\"language-text\">title</code></strong> and <strong><code class=\"language-text\">body</code></strong> values specified in the <strong><code class=\"language-text\">post</code></strong> object.</p>\n<br/>\n<p>For more information on how to use the MySQL package with Express.js, you can refer to the <strong><a href=\"https://www.npmjs.com/package/mysql\">MySQL documentation</a></strong> and the <strong><a href=\"https://expressjs.com/\">Express.js documentation</a></strong>.</p>\n<br/>\n<p><strong>Q2. How can I change application code when I migrate database from MongoDB to MySQL?</strong></p>\n<p>If you are migrating a database from MongoDB to MySQL, you will need to update your application code to use the MySQL database instead of the MongoDB database. This will typically involve updating your database connection information and any database queries used in your application.</p>\n<br/>\n<p>Here are some general steps that you can follow to update your application code when migrating from MongoDB to MySQL:</p>\n<br/>\n<ol>\n<li>Install the MySQL npm package by running the following command:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install mysql</code></pre></div>\n<br/>\n<ol>\n<li>Update your database connection information to use the MySQL database instead of the MongoDB database. This will typically involve replacing the <strong><code class=\"language-text\">mongodb</code></strong> package with the <strong><code class=\"language-text\">mysql</code></strong> package and updating the connection details, such as the hostname, username, password, and database name.</li>\n</ol>\n<br/>\n<p>Here is an example of how to create a connection to a MySQL database:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: 'your_username',\n  password: 'your_password',\n  database: 'your_database_name'\n});\n\nconnection.connect();</code></pre></div>\n<br/>\n<ol>\n<li>Update any database queries in your application to use the appropriate MySQL query syntax. This will typically involve replacing any MongoDB query operators, such as <strong><code class=\"language-text\">$set</code></strong> and <strong><code class=\"language-text\">$push</code></strong>, with the equivalent MySQL query syntax.</li>\n</ol>\n<br/>\n<p>Here is an example of how to update a MongoDB query to use MySQL query syntax:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// MongoDB query\ndb.users.updateOne({name: 'john'}, {$set: {email: 'john@example.com'}});\n\n// MySQL query\nconst query = connection.query('UPDATE users SET email = ? WHERE name = ?', ['john@example.com', 'john'], function (error, results, fields) {\n  if (error) throw error;\n});</code></pre></div>\n<p>These are just some general steps that you can follow to update your application code when migrating from MongoDB to MySQL. You will need to adjust the specific details of your implementation based on the structure and requirements of your application.</p>\n<br/>\n<p>For more information on how to connect to and query a MySQL database using Node.js, you can refer to the <strong><a href=\"https://www.npmjs.com/package/mysql\">MySQL documentation</a></strong> and the <strong><a href=\"https://nodejs.org/en/docs/\">Node.js documentation</a></strong>.</p>\n<br/>\n<p>곧잘 대답하는데다 설명도 자연스럽게 되어서 감탄하고 있었는데, 한국어로 질문 테스트를 해보니</p>\n<br/>\n<p>Q. AWS에서 종단간 암호화를 어떻게 설정하나요?</p>\n<br/>\n<p>AWS에서 종단간 암호화를 설정하려면 데이터 전송과 데이터 저장 시 암호화를 사용해야 합니다. 이를 사용하면 응용 프로그램과 사용자 사이의 데이터와 AWS 서비스에 저장된 데이터를 보호할 수 있습니다.</p>\n<br/>\n<p>종단간 암호화를 AWS에서 설정하는 방법은 다음과 같습니다.</p>\n<br/>\n<p>HTTPS를 사용하여 응용 프로그램과 사용자 사이의 데이터를 암호화합니다. 웹 서버를</p>\n<br/>\n<p>하고 내용이 끊겨버린다. 같은 내용의 질문을 영어로 하면(How can I configure end-to-end encryption on AWS? 이런식으로 질문했었던 걸로 기억) 잘 대답하는 걸로 보아서 영어 이외의 언어의 경우에는 아직 성능이 그리 좋지는 않은 듯 하다. 그리고 다른 팀원분이 NAT Gateway관련 질문 후 답변에 나온 예시 코드를 그대로 넣어봤는데 동작을 하지 않아서 찾아보니 아예 없는 옵션을 추천했다고도. 대답 내용이 너무 자연스러워서 나도 깜빡 속아넘어갈 뻔(?) 했다.</p>\n<br/>\n<p>아직 상용판이 아니라 그런지 개선점이 있어보이긴 해서 다른 유투브 채널에서 나오는 것처럼 마법 지팡이(?) 같은 느낌까지는 아니었지만 구글 검색과 병행해서 사용하면 꽤나 쓸 만 할 듯 하다.</p>\n<br/>","excerpt":"1. 배경 상황 아는 분이 한 번 써보라며 링크를 공유해주셔서 써보게 된 플랫폼인 OpenAI. 써보니 생각보다 괜찮아서 기록용으로 블로그에 업데이트 해둔다. 찾아보니 얼마 전 긱뉴스에서도 관련 내용을 업데이트 했었고, 댓글을 보니 다들 성능에 놀라신 눈치. 2. OpenAI, ChatGPT란? OpenAI는 Samuel H. Altman과 Elon Musk(몸이 몇개인걸까 이분은)가 공동 창업한 동명의 회사에서 만든 인공지능 플랫폼으로 딥러닝 시스템을 통해 자기 자신과의 셀프 트레이닝 방식을 채택해 학습되었다. 이 중 내가 사용해본 것은 ChatGPT라는 대화형으로 질의 응답을 할 수 있는 자연스러운 대화를 주고받을 수 있는 언어 모델. 연구 미리보기 기간에는 무료로 제공된다고 해서 바로 사용해 봄. 사용법은 아주 간단하다. https://chat.openai.com/chat 웹사이트에 접속해 로그인 후(Gmail 로그인 가능), 필용을 문장으로 질문을 남기면 된다. 개발 관련된…","frontmatter":{"date":"December 15, 2022","title":"OpenAI, ChatGPT란? 간단한 사용후기","categories":"etc","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221215-etc-what-is-openai-chatgpt/"}},"next":{"id":"d4dede07-a475-50c0-bf8f-c4899a733c19","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>node.js(Express.js)프로젝트의 EKS 배포를 위한 CodePipeline CI/CD 구성 중 노드 프로젝트를 불러와서 npm install로 패키지를 설치하는 도중 다음과 같은 경고 메시지가 발생했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> WARN read-shrinkwrap This version of <span class=\"token function\">npm</span> is compatible with lockfileVersion@1, but package-lock.json was generated <span class=\"token keyword\">for</span> lockfileVersion@2. I'll try to <span class=\"token keyword\">do</span> my best with it<span class=\"token operator\">!</span>\nEEXIST: <span class=\"token function\">file</span> already exists</code></pre></div>\n<br/>\n<h1 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h1>\n<p>여기서 중요한 메시지는 <code class=\"language-text\">EEXIST: file already exists</code> 라는 메시지. package-lock.json 파일 및 node_modules가 기존에 이미 존재하고 있기 때문에 npm install로 새로운 모듈을 받지 못한다는 메시지였는데, 로컬이었다면 수작업으로 <code class=\"language-text\">package-lock.json</code>파일과 <code class=\"language-text\">node_modules</code> 라는 디렉터리를 삭제해줄 수도 있었겠지만, CodeBuild상에서 삭제하는 과정이 필요했기 때문에 아래와 같이 package.json 파일에서 해당 파일들을 삭제해주는 <code class=\"language-text\">\"clean\"</code>  scripts를 추가해주고,</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token string\">\"scripts\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"clean\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"rm package-lock.json; rm -rf node_modules\"</span>,\n    <span class=\"token string\">\"init\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"rm ./bin/*\"</span>,\n    <span class=\"token string\">\"start\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"nodemon ./server.js\"</span>,\n    <span class=\"token string\">\"test\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"echo <span class=\"token entity\" title=\"\\&quot;\">\\\"</span>Error: no test specified<span class=\"token entity\" title=\"\\&quot;\">\\\"</span> &amp;&amp; exit 1\"</span>,\n    <span class=\"token string\">\"build\"</span><span class=\"token builtin class-name\">:</span> <span class=\"token string\">\"npm run init; pkg . --out-path bin\"</span>\n  <span class=\"token punctuation\">}</span>,</code></pre></div>\n<p>CodeBuild위에서 실행할 명령어들을 정의하는 buildspec.yaml 파일에 <code class=\"language-text\">npm run clean</code> 커맨드를 추가했더니 위와 같은 에러가 해결되었다.</p>\n<br/>","frontmatter":{"date":"December 14, 2022","title":"AWS CodeBuild “EEXIST: file already exists” 에러 해결","categories":"클라우드","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221214-aws-codebuild-file-already-exist/"}},"prev":{"id":"55e61e48-7a0d-54f5-866a-c776e0d8677c","html":"<h1 id=\"1-배경-상황\" style=\"position:relative;\"><a href=\"#1-%EB%B0%B0%EA%B2%BD-%EC%83%81%ED%99%A9\" aria-label=\"1 배경 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 배경 상황</h1>\n<p>최근 데모 실습을 위해 Codepipeline + CodeCommit + Codebuild로 CI/CD 파이프라인 구축을 하고있는데, Codebuild에서 에러가 어마무시하게 나서 하나씩 정리해두려 한다. <code class=\"language-text\">‘Error: Cannot find module '/usr/src/app/nodemon'</code> 에러는 pkg 모듈로 Node.js(Express 프레임워크) 프로젝트를 빌드하고 도커 이미지로 만드는 과정에서 발생했던 에러였다.</p>\n<br/>\n<p>정확한 에러 메시지는 아래와 같았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">node:internal/modules/cjs/loader:988\n  throw err<span class=\"token punctuation\">;</span>\n  ^\n\nError: Cannot <span class=\"token function\">find</span> module <span class=\"token string\">'/usr/src/app/nodemon'</span>\n    at Function.Module._resolveFilename <span class=\"token punctuation\">(</span>node:internal/modules/cjs/loader:985:15<span class=\"token punctuation\">)</span>\n    at Function.Module._load <span class=\"token punctuation\">(</span>node:internal/modules/cjs/loader:833:27<span class=\"token punctuation\">)</span>\n    at Function.executeUserEntryPoint <span class=\"token punctuation\">[</span>as runMain<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">(</span>node:internal/modules/run_main:81:12<span class=\"token punctuation\">)</span>\n    at node:internal/main/run_main_module:22:47 <span class=\"token punctuation\">{</span>\n  code: <span class=\"token string\">'MODULE_NOT_FOUND'</span>,\n  requireStack: <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<h1 id=\"2-에러-해결\" style=\"position:relative;\"><a href=\"#2-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0\" aria-label=\"2 에러 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 에러 해결</h1>\n<p>기존 Dockerfile을 다시 살펴보니 서버를 가동시키는 명령어를 nodemon으로 해두었었다. 로컬로 접속 테스트를 했었을 당시에 서버 재부팅이 귀찮아서 <code class=\"language-text\">-g</code> 모드로 nodemon을 설치해서 사용 중이었는데, 도커파일을 작성할 때에도 습관적으로 nodemon을 사용했었던 것.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">FROM node:16\n\n<span class=\"token comment\"># 앱 디렉터리 생성</span>\nWORKDIR /usr/src/app\n\n<span class=\"token comment\"># 앱 의존성 설치</span>\nCOPY package*.json ./\nRUN <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 앱 소스 파일 추가</span>\nCOPY <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>\nRUN <span class=\"token function\">ls</span> -al\n\nEXPOSE <span class=\"token number\">8090</span>\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"nodemon\"</span>, <span class=\"token string\">\"./server.js\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<br/>\n<p>해결 방법은 package.json에 nodemon을 포함해주거나, 서버 기동을 위한 명령어를 기본 명령어인 node로 바꿔주는 방법이 있는데, 나는 이미지를 최대한 가볍게 만들고 싶어서 명령어를 기본 명령어로 바꿔주었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">FROM node:16\n\n<span class=\"token comment\"># 앱 디렉터리 생성</span>\nWORKDIR /usr/src/app\n\n<span class=\"token comment\"># 앱 의존성 설치</span>\nCOPY package*.json ./\nRUN <span class=\"token function\">npm</span> <span class=\"token function\">install</span>\n\n<span class=\"token comment\"># 앱 소스 파일 추가</span>\nCOPY <span class=\"token builtin class-name\">.</span> <span class=\"token builtin class-name\">.</span>\nRUN <span class=\"token function\">ls</span> -al\n\nEXPOSE <span class=\"token number\">8090</span>\nCMD <span class=\"token punctuation\">[</span><span class=\"token string\">\"node\"</span>, <span class=\"token string\">\"./server.js\"</span><span class=\"token punctuation\">]</span></code></pre></div>\n<p>이렇게 도커파일을 변경하고 다시 재빌드 하니 문제없이 도커빌드가 진행되었다.</p>\n<br/>","frontmatter":{"date":"December 16, 2022","title":"Node.js Error: Cannot find module /usr/src/app/nodemon 에러 해결","categories":"devops","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/221216-devops-node-filenotexist-error/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/221215-etc-what-is-openai-chatgpt/","nextSlug":"/221214-aws-codebuild-file-already-exist/","prevSlug":"/221216-devops-node-filenotexist-error/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}