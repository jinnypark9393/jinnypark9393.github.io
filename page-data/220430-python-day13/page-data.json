{"componentChunkName":"component---src-templates-blog-template-js","path":"/220430-python-day13/","result":{"data":{"cur":{"id":"a85b8150-6647-585d-8c9e-907b2aa5d060","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 5-6. 반복문 개념(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-30-Python-Photo/2022-04-30-Python-Photo1.jpg\" alt=\"2022-04-30-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-30-Python-Photo/2022-04-30-Python-Photo2.jpg\" alt=\"2022-04-30-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"7-반복문-개념2\" style=\"position:relative;\"><a href=\"#7-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EA%B0%9C%EB%85%902\" aria-label=\"7 반복문 개념2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 반복문 개념(2)</h1>\n<h2 id=\"1-while-사용법\" style=\"position:relative;\"><a href=\"#1-while-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"1 while 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. while 사용법</h2>\n<ul>\n<li>for와의 차이점은?\n<ul>\n<li>for문 : 반복할 횟수가 정해져 있을 때</li>\n<li>while문: 반복할 횟수가 정해져있지 않을 때</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>while 사용법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 초기식</span>\n<span class=\"token comment\"># while 조건식:</span>\n<span class=\"token comment\">#     반복할 명령</span>\n<span class=\"token comment\">#     증감식</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 복합할당연산자 i + 1 = i</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">i = 0</code> : 반복문에 사용되는 변수의 값을 지정</li>\n<li><code class=\"language-text\">while i &lt; 10:</code> : 반복에 대한 조건 체크. 이 식이 false가 될 때까지 반복.</li>\n<li><code class=\"language-text\">증감식</code> : 반복하는 작업을 위해 변수값 증가.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-무한루프와-break\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B4%ED%95%9C%EB%A3%A8%ED%94%84%EC%99%80-break\" aria-label=\"2 무한루프와 break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 무한루프와 break</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while True:</span>\n<span class=\"token comment\">#    반복할 명령</span>\n<span class=\"token comment\">#    if 조건식:</span>\n<span class=\"token comment\">#        break</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"종료하려면 exit을 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n</code></pre></div>\n<ul>\n<li>조건식 대신 불리언(Boolean) 값을 불러온다.</li>\n<li>참일 경우 break를 만나기 전까지 명령을 계속 반복한다. (가장 가까운 반복문만 빠져나오게 됨)</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while</span>\n<span class=\"token comment\"># : 보통 반복횟수가 정해지지 않았을 때 사용한다.</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token comment\"># 초기식</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 조건식</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 증감식</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">5</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">6</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">7</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">8</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while</span>\n<span class=\"token comment\"># : 보통 반복횟수가 정해지지 않았을 때 사용한다.</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 초기식</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 조건식</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 증감식</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">0</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">2</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">4</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">6</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">8</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 무한루프</span>\n<span class=\"token comment\"># : 조건식에 True를 넣어서 항상 반복되게 만든 것.</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"종료하려면 exit을 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>exid\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>c\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>d\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>e\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>f\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>exit</code></pre></div>\n<br/>\n<p>이번 포스팅에서는 반복문 개념에 대해서 알아보았다. 다음 포스팅에서는 반복문 실습문제를 풀어보도록 하자.</p>\n<p><br/><br/></p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 5-6. 반복문 개념(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-04-30-Python-Photo1 2022-04-30-Python-Photo2  7. 반복문 개념(2) 1. while 사용법 for와의 차이점은? for문 : 반복할 횟수가 정해져 있을 때 while문: 반복할 횟수가 정해져있지 않을 때 while 사용법  : 반복문에 사용되는 변수의 값을 지정  : 반복에 대한 조건 체크. 이 식이 false가 될 때까지 반복.  : 반복하는 작업을 위해 변수값 증가.  2. 무한루프와 break 조건식 대신 불리언(Boolean) 값을 불러온다. 참일 경우 break를 만나기 전까지 명령을 계속 반복한다. (가장 가까운 반복문만 빠져나오게 됨)  3. 실습 출력 결과…","frontmatter":{"date":"April 30, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 13일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220430-python-day13/"}},"next":{"id":"6d273053-3bc0-5e2d-8985-0070f970159e","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 5-6. 반복문 개념(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-29-Python-Photo/2022-04-29-Python-Photo1.jpg\" alt=\"2022-04-29-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-29-Python-Photo/2022-04-29-Python-Photo2.jpg\" alt=\"2022-04-29-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"6-반복문-개념1\" style=\"position:relative;\"><a href=\"#6-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EA%B0%9C%EB%85%901\" aria-label=\"6 반복문 개념1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 반복문 개념(1)</h1>\n<h2 id=\"1-반복문을-사용하는-이유\" style=\"position:relative;\"><a href=\"#1-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 반복문을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 반복문을 사용하는 이유</h2>\n<ul>\n<li>반복적인 작업을 코드로 작성하기 위해 사용.</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 빈 리스트 생성</span>\n\n<span class=\"token comment\"># 1 ~ 7일차까지 반복 작업</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"6일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"7일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\ntotal <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\navg <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>위의 코드를 반복문으로 축약해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"2-시퀀스-자료형sequence-data-type\" style=\"position:relative;\"><a href=\"#2-%EC%8B%9C%ED%80%80%EC%8A%A4-%EC%9E%90%EB%A3%8C%ED%98%95sequence-data-type\" aria-label=\"2 시퀀스 자료형sequence data type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 시퀀스 자료형(Sequence Data Type)</h2>\n<ul>\n<li>순서가 있는 자료형\n<ul>\n<li>리스트</li>\n<li>문자열</li>\n<li>range 객체</li>\n<li>튜플, 딕셔너리</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-for-사용법\" style=\"position:relative;\"><a href=\"#3-for-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"3 for 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. for 사용법</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> 변수 <span class=\"token keyword\">in</span> 시퀀스 자료:\n    명령문\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">a</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span>, <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>:\n    print<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>동작 방식\n<ul>\n<li>리스트 자료 안에 있는 첫번째 값인 1이 a에 저장</li>\n<li>명령문을 실행: print(a) ⇒ print(1) ⇒ 1 이 출력</li>\n<li>두번째 값인 2를 a에 저장</li>\n<li>명령문을 실행: print(a) ⇒ print(2) ⇒ 2 가 출력</li>\n<li>리스트에 더 이상 데이터가 없을 때까지 반복</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"4-range-명령어\" style=\"position:relative;\"><a href=\"#4-range-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"4 range 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. range 명령어</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 0~9까지 숫자를 포함하는 range 객체를 만들어준다.</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"5-실습\" style=\"position:relative;\"><a href=\"#5-%EC%8B%A4%EC%8A%B5\" aria-label=\"5 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 반복문</span>\n<span class=\"token comment\"># : 반복해서 명령을 사용하고 싶을 때</span>\n\n<span class=\"token comment\"># 시퀀스 자료형</span>\n<span class=\"token comment\"># : 순서가 있는 자료형</span>\n<span class=\"token comment\"># 1. 리스트</span>\n<span class=\"token comment\"># 2. 문자열</span>\n<span class=\"token comment\"># 3. range 객체</span>\n<span class=\"token comment\"># 4. 튜플</span>\n<span class=\"token comment\"># 5. 딕셔너리</span>\n\n<span class=\"token comment\"># for 문</span>\n<span class=\"token comment\"># - 리스트 사용</span>\nchampions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"티모\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"이즈리얼\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"리신\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> champion <span class=\"token keyword\">in</span> champions<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"선택한 챔피언은\"</span><span class=\"token punctuation\">,</span> champion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>리스트는 복수형태로 작성하고 변수는 단수형태로 많이 사용</p>\n</li>\n<li>\n<p>출력 결과물</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n선택한 챔피언은 티모 입니다<span class=\"token punctuation\">.</span>\n선택한 챔피언은 이즈리얼 입니다<span class=\"token punctuation\">.</span>\n선택한 챔피언은 리신 입니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>문자열 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - 문자열 사용</span>\nfighting_message <span class=\"token operator\">=</span> <span class=\"token string\">\"자신감을 가지자! 나에게 한계란 없다!\"</span>\n\n<span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> fighting_message<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n자\n신\n감\n을\n \n가\n지\n자\n!\n \n나\n에\n게\n \n한\n계\n란\n \n없\n다\n!</code></pre></div>\n<br/>\n<ul>\n<li>range 객체를 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - range 객체 사용</span>\n<span class=\"token comment\"># range(10) -> 0~9까지 숫자를 포함하는 Range 객체가 나온다. 0,1,2,3,4,5,6,7,8,9</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># (myvenv) ➜  python_basic /Users/usr/Documents/pyt</span>\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">6</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">9</span></code></pre></div>\n<br/>\n<ul>\n<li>range 응용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - range 객체 사용</span>\n<span class=\"token comment\"># range(10) -> 0~9까지 숫자를 포함하는 Range 객체가 나온다. 0,1,2,3,4,5,6,7,8,9</span>\n<span class=\"token comment\"># range(시작, 끝+1, 단계)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># (myvenv) ➜  python_basic /Users/usr/Documents/pyt</span>\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">1</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">9</span></code></pre></div>\n<br/>\n<p>이번 포스팅에서는 반복문 기초 개념에 대해서 알아보았다. 다음 포스팅에서도 이어서 반복문 개념에 대해 알아보자.</p>\n<p><br/><br/></p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"April 29, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 12일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220429-python-day12/"}},"prev":{"id":"9fd1f54e-e093-5212-8fef-76dcdc3ddf48","html":"<h1 id=\"1github-pagesblog포스팅-게시-안됨-이슈-해결\" style=\"position:relative;\"><a href=\"#1github-pagesblog%ED%8F%AC%EC%8A%A4%ED%8C%85-%EA%B2%8C%EC%8B%9C-%EC%95%88%EB%90%A8-%EC%9D%B4%EC%8A%88-%ED%95%B4%EA%B2%B0\" aria-label=\"1github pagesblog포스팅 게시 안됨 이슈 해결 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1.[Github Pages/Blog]포스팅 게시 안됨 이슈 해결</h1>\n<br/>\n<p><em>💡  Github Pages에 포스팅이 게시가 안될 경우, 올바른 포스팅 파일 이름규칙, future=true, published=true 옵션을 적용해보자.</em></p>\n<p><br/><br/></p>\n<h2 id=\"1-에러-상황\" style=\"position:relative;\"><a href=\"#1-%EC%97%90%EB%9F%AC-%EC%83%81%ED%99%A9\" aria-label=\"1 에러 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 에러 상황</h2>\n<p>패스트캠퍼스 챌린지 Day3 포스팅을 작성한 뒤, 깃헙 블로그 레파지토리에 push 를 했음에도 불구하고 github 블로그에 해당 페이지가 올라오지 않는 이슈가 있었다.</p>\n<br/>\n<p>원래 Github에 코드를 push한 뒤, 실제 페이지에 반영되기까지 빠르면 1~2분, 길게는 30분까지도 걸린다고는 하지만 내 포스팅은 1시간이 넘도록 올라오지 않았다.</p>\n<br/>\n<p>참고로 내 환경은 다음과 같다.</p>\n<ul>\n<li>MacOS Monterey 12.3.1</li>\n<li>VMware Fusion 12.1.2</li>\n<li>Ubuntu 20.04</li>\n<li>Git 2.25.1</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h2>\n<p>‘깃허브 블로그 포스팅 안됨 에러’ 키워드로 구글링 하다가 세 가지 방법을 시도해봤는데, 나에게는 그 중 마지막 방법인 <code class=\"language-text\">published: true</code> 설정이 유효했다.</p>\n<br/>\n<h3 id=\"1-포스팅의-naming-convention-지키기\" style=\"position:relative;\"><a href=\"#1-%ED%8F%AC%EC%8A%A4%ED%8C%85%EC%9D%98-naming-convention-%EC%A7%80%ED%82%A4%EA%B8%B0\" aria-label=\"1 포스팅의 naming convention 지키기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 포스팅의 Naming Convention 지키기</h3>\n<p>Github Pages의 경우, 포스트의 네이밍 컨벤션이 <code class=\"language-text\">YYYY-MM-DD-포스팅-제목.md</code> 로 정해져있고, 이를 어길 시에는 포스팅이 제대로 올라가지 않는다.</p>\n<br/>\n<p>참고로 이 파일명을 가지고 Jekyll에서 페이지를 생성하게 되면, <code class=\"language-text\">http://username.github.io/YYYY/MM/DD/category/포스팅-제목</code> 형태로 url이 생성된다.</p>\n<br/>\n<p>따라서 아래 두 가지를 반드시 유의해야한다.</p>\n<ul>\n<li>포스팅 제목 맨 앞에 YYYY-MM-DD 형태로 날짜를 입력했는가</li>\n<li>포스팅 파일명은 해당 깃허브 저장소의 <code class=\"language-text\">_posts</code> 디렉토리 내에서 반드시 유일해야한다.</li>\n</ul>\n<br/>\n<p>나는 이 내용을 몰랐지만 post 폴더 내의 파일을 관리할 때 우연히 YYYY-MM-DD 형태로 파일 이름을 설정했던 터라 다행히도(?) 이 부분은 수정할 필요가 없었다.</p>\n<p><br/><br/></p>\n<h3 id=\"2-code-classlanguage-text_configyamlcode-파일에-code-classlanguage-textfuture-truecode-추가\" style=\"position:relative;\"><a href=\"#2-code-classlanguage-text_configyamlcode-%ED%8C%8C%EC%9D%BC%EC%97%90-code-classlanguage-textfuture-truecode-%EC%B6%94%EA%B0%80\" aria-label=\"2 code classlanguage text_configyamlcode 파일에 code classlanguage textfuture truecode 추가 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. <code class=\"language-text\">_config.yaml</code> 파일에 <code class=\"language-text\">future: true</code> 추가</h3>\n<p>구글링을 해보니 <code class=\"language-text\">config.yaml</code> 파일에 <code class=\"language-text\">future: true</code> 를 추가해보라는 글이 있어서 추가해보았으나 나에게는 효과가 없었다.</p>\n<br/>\n<p><code class=\"language-text\">future: true</code> 옵션은 현재 시스템 시간보다 더 뒤의 일자로 포스팅 발행일을 선택했을 때 (예를 들어 시스템 시간은 2022년 4월 28일이나 포스팅 발행일을 2022년 4월 29일로 입력) 포스팅이 올라가도록 허용해주는 옵션이다.</p>\n<br/>\n<p>예상컨대 나와 같이 가상머신 환경에서 가상머신의 Timezone이 한국보다 늦은 경우, 시차때문에 일자에 오류가 생길 경우에는 유효할 듯 하지만, 나는 이미 가상머신과 실제 Timezone을 맞춰놨기 때문에 그러한 오류는 발생하지 않았다.</p>\n<p><br/><br/></p>\n<h3 id=\"3-포스팅-내에-code-classlanguage-textpublished-truecode-옵션-추가-유효\" style=\"position:relative;\"><a href=\"#3-%ED%8F%AC%EC%8A%A4%ED%8C%85-%EB%82%B4%EC%97%90-code-classlanguage-textpublished-truecode-%EC%98%B5%EC%85%98-%EC%B6%94%EA%B0%80-%EC%9C%A0%ED%9A%A8\" aria-label=\"3 포스팅 내에 code classlanguage textpublished truecode 옵션 추가 유효 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 포스팅 내에 <code class=\"language-text\">published: true</code> 옵션 추가 (유효)</h3>\n<p>마지막으로 내가 작성한 포스팅의 정보란에 <code class=\"language-text\">published: true</code> 로 설정해 발행 여부를 명시할 수 있는데, 나의 경우에는 이 옵션이 유효했다.</p>\n<br/>\n<p>아래는 내가 <a href=\"https://github.com/jinnypark9393/jinnypark9393.github.io/blob/main/_posts/2022-04-20-Python-%ED%8C%A8%EC%8A%A4%ED%8A%B8%EC%BA%A0%ED%8D%BC%EC%8A%A4-%EC%BA%90%EC%8B%9C%EB%B0%B1-%EC%B1%8C%EB%A6%B0%EC%A7%80-3%EC%9D%BC%EC%B0%A8.md\">수정했던 마크다운 파일</a> 일부를 발췌한 것이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span>\n<span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">published</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">title</span><span class=\"token punctuation\">:</span>  <span class=\"token string\">\"[Python]패스트캠퍼스 캐시백 챌린지 3일차\"</span>\n<span class=\"token key atrule\">excerpt</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"패스트캠퍼스 캐시백 챌린지 3일차: 한 번에 끝내는 파이썬 웹개발 초격차 패키지 Online\"</span>\n\n<span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> Programming\n<span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token punctuation\">[</span>패스트캠퍼스<span class=\"token punctuation\">,</span> 패캠챌린지<span class=\"token punctuation\">,</span> 직장인인강<span class=\"token punctuation\">,</span> 직장인자기계발<span class=\"token punctuation\">,</span> 패스트캠퍼스후기<span class=\"token punctuation\">,</span> 캐시백챌린지<span class=\"token punctuation\">,</span> 캐시백<span class=\"token punctuation\">,</span> 환급챌린지<span class=\"token punctuation\">,</span> 한번에끝내는파이썬웹개발초격차패키지Online<span class=\"token punctuation\">]</span>\n\n<span class=\"token key atrule\">toc</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n<span class=\"token key atrule\">toc_sticky</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n \n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2022-04-20</span>\n<span class=\"token key atrule\">last_modified_at</span><span class=\"token punctuation\">:</span> <span class=\"token datetime number\">2022-04-20</span></span>\n<span class=\"token punctuation\">---</span></span>\n\n(이하 포스팅 내용)</code></pre></div>\n<br/>\n<p>이후에는 같은 문제가 발생할까 걱정되어 미리 <code class=\"language-text\">published: true</code> 옵션을 기본으로 넣은 채로 포스팅 문서를 작성하고 있는데, 이 이후에는 같은 문제가 발생하지 않았다.</p>\n<br/>","frontmatter":{"date":"May 01, 2022","title":"Github Pages/Blog - 포스팅 게시 안됨 이슈 해결","categories":"BLOG","author":"jinnypark9393","emoji":"🍒"},"fields":{"slug":"/220501-github-blog-cannot-upload-posts/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220430-python-day13/","nextSlug":"/220429-python-day12/","prevSlug":"/220501-github-blog-cannot-upload-posts/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}