{"componentChunkName":"component---src-templates-blog-template-js","path":"/220423-kubernetes-nginx-sticky-session/","result":{"data":{"cur":{"id":"f1832b08-3150-564e-a100-319e05d0453d","html":"<p><strong>💡 NGINX Ingress Controller 사용 시 nginx.ingress.kubernetes.io 어노테이션을 사용해야 Sticky session 등의 설정값이 적용된다(일반 ingress.kubernetes.io 설정 적용시 설정 적용 안됨)</strong></p>\n<br/>\n<h1 id=\"1-에러-상황\" style=\"position:relative;\"><a href=\"#1-%EC%97%90%EB%9F%AC-%EC%83%81%ED%99%A9\" aria-label=\"1 에러 상황 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 에러 상황</h1>\n<p>컨테이너 전환 프로젝트 진행 도중 Ingress Controller를 Contour에서 NGINX-Ingress Controller로 변경 후, 시스템에 간헐적으로 접속이 되지 않는 현상이 발생했다(구체적으로는 브라우저에서 관리자에게 문의하라는 페이지가 뜨며 접속이 되지 않다가 새로고침 시 접속이 되는 현상).</p>\n<br/>\n<p>해당 시스템은 Multi Pod로 구성되어있었는데(replicas = 2), 각 Pod로그를 보니 아래와 같은 SQL 에러가 발생하고 있었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">Error querying database. Cause: com.edb.util.SQLException: FATAL: terminating connection due to administrator <span class=\"token builtin class-name\">command</span></code></pre></div>\n<p><br/><br/></p>\n<p>로그를 추가적으로 살펴보니 user 정보를 SELECT하는 데에서 오류가 나고 있었고, 각 파드에서 로그인 아이디 정보를 찍어주는 로그에 아래와 같은 로그가 발생하고 있었다.</p>\n<br/>\n<ul>\n<li>Pod A 로그</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">2022</span>-MM-DD_hh:mm:ss.000:loginId<span class=\"token operator\">=</span>null, /파일경로,\n<span class=\"token assign-left variable\">clientTimezone</span><span class=\"token operator\">=</span>Asia/Seoul</code></pre></div>\n<br/>\n<ul>\n<li>Pod B 로그</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token number\">2022</span>-MM-DD_hh:mm:ss.000:loginid<span class=\"token operator\">=</span>canary,/파일경로,\n<span class=\"token assign-left variable\">userId</span><span class=\"token operator\">=</span>canary</code></pre></div>\n<br/>\n<p>로그인 아이디를 한쪽에서만 받아주고 있었는데, 브라우저에서 관리자도구(F12키로 관리자 도구 기동 ⇒ Network에서 JSESSIONID 확인) 로 확인해보니 새로고침마다 다른 Pod에서 세션을 받아오는 <code class=\"language-text\">round robin</code> 방식으로 세션 설정이 되어있어 로그인 정보가 저장되지 않은 Pod에 접근할 때 에러가 나고있었다.</p>\n<br/>\n<p>쿠버네티스 대시보드의 Ingress 설정을 확인해보니, annotation 값들이 <code class=\"language-text\">nginx.ingress.kubernetes</code> (NGINX ingress controller를 적용했을 때의 설정)가 아닌 <code class=\"language-text\">ingress.kubernetes</code> , 즉 <strong>일반 쿠버네티스 ingress 객체 설정으로 되어있어 annotation 설정이 적용이 되지 않고 있었다.</strong></p>\n<br/>\n<h1 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h1>\n<p>따라서 해당 설정을 아래와 같이 nginx.ingress로 변경해 <code class=\"language-text\">round robin</code> 대신  <code class=\"language-text\">sticky session</code>을 적용했다. <code class=\"language-text\">sticky sesison</code> 적용 후 사용자 로그인 정보가 저장된 Pod로만 요청이 라우팅되어 에러가 해결되었다.</p>\n<br/>\n<ul>\n<li>nginx-ingress.yaml 설정</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> netwroking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> nginx<span class=\"token punctuation\">-</span>ingress\n <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> web<span class=\"token punctuation\">-</span>app\n <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">kubernetes.io/ingress.class</span><span class=\"token punctuation\">:</span> nginx\n  <span class=\"token key atrule\">nginx.ingress.kuberentes.io/affinity</span><span class=\"token punctuation\">:</span> cookie\n  <span class=\"token key atrule\">nginx.ingress.kuberentes.io/affinity-mode</span><span class=\"token punctuation\">:</span> persistent\n  <span class=\"token key atrule\">nginx.ingress.kuberentes.io/session-cookie-expires</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'172800'</span>\n  <span class=\"token key atrule\">nginx.ingress.kuberentes.io/session--cookie-max-age</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'172800'</span>\n\n(이하 생략)\n</code></pre></div>\n<ul>\n<li><code class=\"language-text\">kubernetes.io/ingress.class: nginx</code> : 어떤 인그레스를 쓸 것인지 설정</li>\n<li><code class=\"language-text\">nginx.ingress.kuberentes.io/affinity-mode: cookie</code> : 세션 어피니티(session affinity = sticky session) 설정 활성화. 현재 NGINX에서 사용 가능한 어피니티 타입은 <code class=\"language-text\">cookie</code> 하나 뿐이다.</li>\n<li><code class=\"language-text\">nginx.ingress.kuberentes.io/affinity-mode: persistent</code> : 얼마나 sticky 하게 설정할 것인지 설정. <code class=\"language-text\">balanced</code> (기본값) 과 <code class=\"language-text\">persistent</code> 두 가지가 있다. Persistent로 설정할 경우 Pod가 확장되어도 서버간 부하를 분산하지 않는다.</li>\n<li><code class=\"language-text\">nginx.ingress.kuberentes.io/session-cookie-expires: '172800'</code> : 쿠키 만료시까지의 시간(초 단위)</li>\n<li><code class=\"language-text\">nginx.ingress.kuberentes.io/session--cookie-max-age: '172800'</code> : 오래된 브라우저와 호환되는 이전 버전의 Annotation 값. <code class=\"language-text\">Expires</code> 쿠키를 생성함.</li>\n</ul>\n<br/>\n<ul>\n<li>참고\n<ul>\n<li>NGINX Configuration (<a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/\">https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/</a>)</li>\n<li>NGINX Examples Sticky Sessions (<a href=\"https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/\">https://kubernetes.github.io/ingress-nginx/examples/affinity/cookie/</a>)</li>\n</ul>\n</li>\n</ul>\n<br/>","excerpt":"💡 NGINX Ingress Controller 사용 시 nginx.ingress.kubernetes.io 어노테이션을 사용해야 Sticky session 등의 설정값이 적용된다(일반 ingress.kubernetes.io 설정 적용시 설정 적용 안됨) 1. 에러 상황 컨테이너 전환 프로젝트 진행 도중 Ingress Controller를 Contour에서 NGINX-Ingress Controller로 변경 후, 시스템에 간헐적으로 접속이 되지 않는 현상이 발생했다(구체적으로는 브라우저에서 관리자에게 문의하라는 페이지가 뜨며 접속이 되지 않다가 새로고침 시 접속이 되는 현상). 해당 시스템은 Multi Pod로 구성되어있었는데(replicas = 2), 각 Pod로그를 보니 아래와 같은 SQL 에러가 발생하고 있었다.  로그를 추가적으로 살펴보니 user 정보를 SELECT하는 데에서 오류가 나고 있었고, 각 파드에서 로그인 아이디 정보를 찍어주는 로그에 아래와 같은 로그가 발생하고…","frontmatter":{"date":"April 23, 2022","title":"Kubernetes NGINX Ingress의 Sticky Session 설정이 되지 않는 이슈 해결","categories":"데브옵스","author":"jinnypark9393","emoji":"🔧"},"fields":{"slug":"/220423-kubernetes-nginx-sticky-session/"}},"next":{"id":"47e38225-ddcb-524e-ac73-d58e2a7ee0b9","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 4-2. 연산자 강의를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-22-Python-Photo/220422-Python-Photo(01).jpg\" alt=\"2022-04-22-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-22-Python-Photo/220422-Python-Photo(02).jpg\" alt=\"2022-04-22-Python-Photo2\"></p>\n<br/>\n<h1 id=\"2-연산2\" style=\"position:relative;\"><a href=\"#2-%EC%97%B0%EC%82%B02\" aria-label=\"2 연산2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 연산(2)</h1>\n<h2 id=\"1-비교연산\" style=\"position:relative;\"><a href=\"#1-%EB%B9%84%EA%B5%90%EC%97%B0%EC%82%B0\" aria-label=\"1 비교연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 비교연산</h2>\n<table>\n<thead>\n<tr>\n<th>연산자(연산기호)</th>\n<th>설명(왼쪽이 오른쪽보다)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>></td>\n<td>크다</td>\n</tr>\n<tr>\n<td>&#x3C;</td>\n<td>작다</td>\n</tr>\n<tr>\n<td>>=</td>\n<td>크거나 같다</td>\n</tr>\n<tr>\n<td>&#x3C;=</td>\n<td>작거나 같다</td>\n</tr>\n<tr>\n<td>==</td>\n<td>같다</td>\n</tr>\n<tr>\n<td>!=</td>\n<td>다르다</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>조건문을 이해하기 위해 꼭 필요한 내용</li>\n<li>예: 1 > 2 ⇒ False(거짓),  1 &#x3C; 2 ⇒ True(참)</li>\n</ul>\n<br/>\n<ul>\n<li>VScode로 비교연산자를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 1. 비교연산</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span> <span class=\"token operator\">></span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># False </span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">30</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"팛팛팛\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"팛팛팗\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># False</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1111111111111111\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"1111111111111111\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True</span></code></pre></div>\n<br/>\n<h2 id=\"2-논리연산\" style=\"position:relative;\"><a href=\"#2-%EB%85%BC%EB%A6%AC%EC%97%B0%EC%82%B0\" aria-label=\"2 논리연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 논리연산</h2>\n<table>\n<thead>\n<tr>\n<th>연산자</th>\n<th>설명</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>A and B</td>\n<td>A,B 모두 참이라면 True</td>\n</tr>\n<tr>\n<td>A or B</td>\n<td>A,B 중 하나라도 참이라면 True</td>\n</tr>\n<tr>\n<td>not A</td>\n<td>A가 참이라면 False</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>논리 연산은 두 개의 비교연산을 합칠 때 자주 사용</li>\n<li>예: 1 &#x3C; 2 and 1 == 1 ⇒ <code class=\"language-text\">1 &lt; 2</code> , <code class=\"language-text\">1 == 1</code> 모두 참일 경우에만 True</li>\n</ul>\n<p><br/><br/></p>\n<ul>\n<li>VScode로 비교연산자를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 2. 논리연산</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">6</span> <span class=\"token keyword\">and</span> <span class=\"token number\">10</span> <span class=\"token operator\">>=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># True and True -> True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"포기하지말아요\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"포기하지말아요\"</span> <span class=\"token keyword\">or</span> <span class=\"token string\">\"나는 할 수 있다\"</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"나는 할 수 있다\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># False or True => True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> <span class=\"token number\">5</span><span class=\"token operator\">==</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># not True -> False</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"3-멤버십-연산\" style=\"position:relative;\"><a href=\"#3-%EB%A9%A4%EB%B2%84%EC%8B%AD-%EC%97%B0%EC%82%B0\" aria-label=\"3 멤버십 연산 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 멤버십 연산</h2>\n<table>\n<thead>\n<tr>\n<th>연산자(연산기호)</th>\n<th>설명(왼쪽이 오른쪽에)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>in</td>\n<td>포함되어 있다</td>\n</tr>\n<tr>\n<td>not in</td>\n<td>포함되어 있지 않다</td>\n</tr>\n</tbody>\n</table>\n<br/>\n<ul>\n<li>리스트 자료형을 알아야 더 잘 활용 할 수 있다.</li>\n<li>예: “a” in “abc” ⇒ True</li>\n</ul>\n<br/>\n<ul>\n<li>VScode로 비교연산자를 활용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 3. 멤버십 연산</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"- 멤버십 문제\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\"</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 포함되어 있다면 True</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"d\"</span> <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 포함되어 있지 않다면 True</span></code></pre></div>\n<br/>\n<p>연산 자체는 어렵지 않은 내용이나, 다다음 시간에 배울 조건문과 같이 활용하게 됨. 다음은 입력과 자료형 변환에 대해 알아보도록 하자.</p>\n<br/>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<p><a href=\"https://bit.ly/3L3avNW\">패스트캠퍼스 [직장인 실무교육]</a></p>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"April 22, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 5일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220422-python-day05/"}},"prev":{"id":"33bd63f4-212a-5161-9bdd-1260568affd4","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 4-3. 입력과 자료형 변환 강의를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-23-Python-Photo/2022-04-23-Python-Photo1.jpg\" alt=\"2022-04-23-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-23-Python-Photo/2022-04-23-Python-Photo2.jpg\" alt=\"2022-04-23-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"3-입력과-자료형-변환\" style=\"position:relative;\"><a href=\"#3-%EC%9E%85%EB%A0%A5%EA%B3%BC-%EC%9E%90%EB%A3%8C%ED%98%95-%EB%B3%80%ED%99%98\" aria-label=\"3 입력과 자료형 변환 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 입력과 자료형 변환</h1>\n<h2 id=\"1-데이터-입력-받기\" style=\"position:relative;\"><a href=\"#1-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%9E%85%EB%A0%A5-%EB%B0%9B%EA%B8%B0\" aria-label=\"1 데이터 입력 받기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 데이터 입력 받기</h2>\n<ul>\n<li>\n<p>입력 함수: <code class=\"language-text\">input()</code></p>\n</li>\n<li>\n<p>사용자로부터 데이터를 입력 받는 함수</p>\n</li>\n<li>\n<p>예시 1</p>\n<ul>\n<li>아래 코드를 파이썬 인터프리터가 어떻게 해석하고 실행할까?</li>\n<li>파이썬 인터프리터: 파이썬 소스코드를 해석 &#x26; 실행</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p><strong>[파이썬 코드 실행 순서]</strong></p>\n<ul>\n<li>할당연산자 (=) <strong>오른쪽</strong>부터 실행</li>\n<li>input 함수 실행 시, <strong>입력</strong>을 기다린다</li>\n<li>사용자가 데이터를 입력하고 <strong>엔터</strong>를 치면</li>\n<li><strong>input 함수</strong> 자리에 데이터가 들어간다.</li>\n<li>x에 <strong>데이터가 할당</strong>된다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<ul>\n<li>\n<p>예시 2</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"입력하세요 >>> \"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">입력하세요 >>></code> : 입력을 유도하게끔 하는 안내문</li>\n</ul>\n<p><br/><br/></p>\n<p><strong>[파이썬 코드 실행 순서]</strong></p>\n<ol>\n<li>할당연산자 (=) 오른쪽부터 실행</li>\n<li>input 함수 실행 시, <strong>메시지를 출력</strong>하고 입력을 기다린다.</li>\n<li>사용자가 데이터를 입력하고 엔터를 치면</li>\n<li>input 함수 자리에 데이터가 들어간다.</li>\n<li>x에 데이터가 할당된다.</li>\n</ol>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"실습문제-431\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C-431\" aria-label=\"실습문제 431 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[실습문제 4.3.1]</h2>\n<ul>\n<li>\n<p>사용자로부터 2개의 숫자(20, 40)를 입력 받고, 더한 결과를 출력하기</p>\n</li>\n<li>\n<p>먼저 푼 뒤 강의 이어 들을 것</p>\n</li>\n<li>\n<p>내가 푼 결과</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">NumOne <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"첫번째 숫자를 입력하세요 >>> \"</span><span class=\"token punctuation\">)</span>\nNumTwo <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"두번째 숫자를 입력하세요 >>> \"</span><span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>NumOne<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>NumTwo<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n</li>\n</ul>\n<p><br/><br/></p>\n<ul>\n<li>\n<p>강의 해설</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 실습문제 4.3.1</span>\n<span class=\"token comment\"># 사용자로부터 두 개의 숫자를 입력 받고,</span>\n<span class=\"token comment\"># 더한 결과를 출력하기</span>\n\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"첫번째 숫자를 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\ny <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"두번째 숫자를 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> y\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<p>⇒ 코드를 실행한 뒤 차례로 20, 40의 입력값을 넣고 엔터를 치면 “2040”라는 결과값이 출력된다.</p>\n</li>\n</ul>\n<p><br/><br/></p>\n<ul>\n<li>\n<p>자료형을 확인해본다</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 자료형 확인하기 : type(x)</span>\n<span class=\"token comment\"># str = string = 문자열</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>&#x3C;class ‘str’>라는 결과값이 출력된다. 즉, x의 자료형은 문자열이다.</li>\n</ul>\n<p><br/><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 숫자형으로 변환</span>\n<span class=\"token comment\"># int 함수를 사용 : int(데이터)</span>\nresult <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>x, y 값을 정수로 변환해주면 정상적으로 작동한다.</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"실습문제-432\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%8A%B5%EB%AC%B8%EC%A0%9C-432\" aria-label=\"실습문제 432 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[실습문제 4.3.2]</h2>\n<p>사용자로부터 태어난 연도를 입력 받으면, 현재 나이를 출력하기</p>\n<ul>\n<li>표준 입력: 태어난 연도를 입력하세요 >>> 1994</li>\n<li>표준 출력: 현재 나이는 29세입니다.</li>\n<li>내가 푼 방법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">birth_year <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"태어난 연도를 입력하세요 >>> \"</span><span class=\"token punctuation\">)</span>\ncurrent_year <span class=\"token operator\">=</span> <span class=\"token number\">2022</span>\ncurrent_age <span class=\"token operator\">=</span> current_year <span class=\"token operator\">-</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>birth_year<span class=\"token punctuation\">)</span>\n\nresult <span class=\"token operator\">=</span> <span class=\"token string\">\"현재 나이는\"</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>current_age<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"세 입니다.\"</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>수정이 필요한 부분: 현재 나이를 계산할 때에는 현재연도 - 출생연도에 1을 더해주어야한다.</li>\n</ul>\n<p><br/><br/></p>\n<ul>\n<li>\n<p>강의 해설</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">year <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"태어난 연도를 입력하세요 >>> \"</span><span class=\"token punctuation\">)</span>\nage <span class=\"token operator\">=</span> <span class=\"token number\">2022</span> <span class=\"token operator\">-</span> year <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재나이는\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">\"세 입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>\n<p>해당 함수 실행 시 <code class=\"language-text\">TypeError: unsupported operator type(s) for : 'int' and 'str'</code> 에러 발생</p>\n</li>\n<li>\n<p>input으로 받은 값이 str이기 때문에 age에서 숫자 연산이 불가능</p>\n</li>\n<li>\n<p>year를 정수형으로 변환한다.</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token operator\">//</span> 바로 <span class=\"token builtin\">int</span>로 감싸도 됨\nyear <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"태어난 연도를 입력하세요 >>> \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nage <span class=\"token operator\">=</span> <span class=\"token number\">2022</span> <span class=\"token operator\">-</span> year <span class=\"token operator\">+</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"현재나이는\"</span><span class=\"token punctuation\">,</span> age<span class=\"token punctuation\">,</span> <span class=\"token string\">\"세 입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ul>\n<li>해당 함수 실행 및 태어난 연도를 입력하면 “현재나이는 <code class=\"language-text\">현재나이</code> 세 입니다”라는 결과가 나온다.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-정리\" style=\"position:relative;\"><a href=\"#2-%EC%A0%95%EB%A6%AC\" aria-label=\"2 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 정리</h2>\n<ol>\n<li>사용자로부터 입력받기: `input(“입력할 시 출력할 메시지”))</li>\n<li>자료형변환: 숫자형으로 변환(int(데이터))</li>\n</ol>\n</li>\n</ul>\n<p><br/><br/></p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<p><br/><br/></p>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<p><br/><br/></p>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"April 23, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 6일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220423-python-day06/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220423-kubernetes-nginx-sticky-session/","nextSlug":"/220422-python-day05/","prevSlug":"/220423-python-day06/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}