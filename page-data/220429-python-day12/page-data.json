{"componentChunkName":"component---src-templates-blog-template-js","path":"/220429-python-day12/","result":{"data":{"cur":{"id":"6d273053-3bc0-5e2d-8985-0070f970159e","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 5-6. 반복문 개념(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-29-Python-Photo/2022-04-29-Python-Photo1.jpg\" alt=\"2022-04-29-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-29-Python-Photo/2022-04-29-Python-Photo2.jpg\" alt=\"2022-04-29-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"6-반복문-개념1\" style=\"position:relative;\"><a href=\"#6-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EA%B0%9C%EB%85%901\" aria-label=\"6 반복문 개념1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 반복문 개념(1)</h1>\n<h2 id=\"1-반복문을-사용하는-이유\" style=\"position:relative;\"><a href=\"#1-%EB%B0%98%EB%B3%B5%EB%AC%B8%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"1 반복문을 사용하는 이유 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 반복문을 사용하는 이유</h2>\n<ul>\n<li>반복적인 작업을 코드로 작성하기 위해 사용.</li>\n</ul>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 빈 리스트 생성</span>\n\n<span class=\"token comment\"># 1 ~ 7일차까지 반복 작업</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"3일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"4일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"5일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"6일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\nx <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"7일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\ndata<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span>\n\ntotal <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\navg <span class=\"token operator\">=</span> total <span class=\"token operator\">/</span> <span class=\"token number\">7</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>avg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>위의 코드를 반복문으로 축약해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">101</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"일차 턱걸이 횟수 >>>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    data<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"2-시퀀스-자료형sequence-data-type\" style=\"position:relative;\"><a href=\"#2-%EC%8B%9C%ED%80%80%EC%8A%A4-%EC%9E%90%EB%A3%8C%ED%98%95sequence-data-type\" aria-label=\"2 시퀀스 자료형sequence data type permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 시퀀스 자료형(Sequence Data Type)</h2>\n<ul>\n<li>순서가 있는 자료형\n<ul>\n<li>리스트</li>\n<li>문자열</li>\n<li>range 객체</li>\n<li>튜플, 딕셔너리</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-for-사용법\" style=\"position:relative;\"><a href=\"#3-for-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"3 for 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. for 사용법</h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">for</span> 변수 <span class=\"token keyword\">in</span> 시퀀스 자료:\n    명령문\n\n<span class=\"token comment\"># 예시</span>\n<span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">a</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span>, <span class=\"token number\">2</span>, <span class=\"token number\">3</span>, <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>:\n    print<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>동작 방식\n<ul>\n<li>리스트 자료 안에 있는 첫번째 값인 1이 a에 저장</li>\n<li>명령문을 실행: print(a) ⇒ print(1) ⇒ 1 이 출력</li>\n<li>두번째 값인 2를 a에 저장</li>\n<li>명령문을 실행: print(a) ⇒ print(2) ⇒ 2 가 출력</li>\n<li>리스트에 더 이상 데이터가 없을 때까지 반복</li>\n</ul>\n</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"4-range-명령어\" style=\"position:relative;\"><a href=\"#4-range-%EB%AA%85%EB%A0%B9%EC%96%B4\" aria-label=\"4 range 명령어 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. range 명령어</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 0~9까지 숫자를 포함하는 range 객체를 만들어준다.</span></code></pre></div>\n<p><br/><br/></p>\n<h2 id=\"5-실습\" style=\"position:relative;\"><a href=\"#5-%EC%8B%A4%EC%8A%B5\" aria-label=\"5 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 반복문</span>\n<span class=\"token comment\"># : 반복해서 명령을 사용하고 싶을 때</span>\n\n<span class=\"token comment\"># 시퀀스 자료형</span>\n<span class=\"token comment\"># : 순서가 있는 자료형</span>\n<span class=\"token comment\"># 1. 리스트</span>\n<span class=\"token comment\"># 2. 문자열</span>\n<span class=\"token comment\"># 3. range 객체</span>\n<span class=\"token comment\"># 4. 튜플</span>\n<span class=\"token comment\"># 5. 딕셔너리</span>\n\n<span class=\"token comment\"># for 문</span>\n<span class=\"token comment\"># - 리스트 사용</span>\nchampions <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"티모\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"이즈리얼\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"리신\"</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">for</span> champion <span class=\"token keyword\">in</span> champions<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"선택한 챔피언은\"</span><span class=\"token punctuation\">,</span> champion<span class=\"token punctuation\">,</span> <span class=\"token string\">\"입니다.\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>\n<p>리스트는 복수형태로 작성하고 변수는 단수형태로 많이 사용</p>\n</li>\n<li>\n<p>출력 결과물</p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n선택한 챔피언은 티모 입니다<span class=\"token punctuation\">.</span>\n선택한 챔피언은 이즈리얼 입니다<span class=\"token punctuation\">.</span>\n선택한 챔피언은 리신 입니다<span class=\"token punctuation\">.</span></code></pre></div>\n<br/>\n<ul>\n<li>문자열 사용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - 문자열 사용</span>\nfighting_message <span class=\"token operator\">=</span> <span class=\"token string\">\"자신감을 가지자! 나에게 한계란 없다!\"</span>\n\n<span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> fighting_message<span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n자\n신\n감\n을\n \n가\n지\n자\n!\n \n나\n에\n게\n \n한\n계\n란\n \n없\n다\n!</code></pre></div>\n<br/>\n<ul>\n<li>range 객체를 사용해보자.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - range 객체 사용</span>\n<span class=\"token comment\"># range(10) -> 0~9까지 숫자를 포함하는 Range 객체가 나온다. 0,1,2,3,4,5,6,7,8,9</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># (myvenv) ➜  python_basic /Users/usr/Documents/pyt</span>\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">0</span>\n<span class=\"token number\">1</span>\n<span class=\"token number\">2</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">4</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">6</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">8</span>\n<span class=\"token number\">9</span></code></pre></div>\n<br/>\n<ul>\n<li>range 응용</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># - range 객체 사용</span>\n<span class=\"token comment\"># range(10) -> 0~9까지 숫자를 포함하는 Range 객체가 나온다. 0,1,2,3,4,5,6,7,8,9</span>\n<span class=\"token comment\"># range(시작, 끝+1, 단계)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># (myvenv) ➜  python_basic /Users/usr/Documents/pyt</span>\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">09.</span>반복문개념_for<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">1</span>\n<span class=\"token number\">3</span>\n<span class=\"token number\">5</span>\n<span class=\"token number\">7</span>\n<span class=\"token number\">9</span></code></pre></div>\n<br/>\n<p>이번 포스팅에서는 반복문 기초 개념에 대해서 알아보았다. 다음 포스팅에서도 이어서 반복문 개념에 대해 알아보자.</p>\n<p><br/><br/></p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","excerpt":"오늘도 어제에 이어서 “한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online” 의 챕터 5-6. 반복문 개념(1)을 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.  아래는 공부 인증 사진. 2022-04-29-Python-Photo1 2022-04-29-Python-Photo2  6. 반복문 개념(1) 1. 반복문을 사용하는 이유 반복적인 작업을 코드로 작성하기 위해 사용. 위의 코드를 반복문으로 축약해보자.  2. 시퀀스 자료형(Sequence Data Type) 순서가 있는 자료형 리스트 문자열 range 객체 튜플, 딕셔너리  3. for 사용법 동작 방식 리스트 자료 안에 있는 첫번째 값인 1이 a에 저장 명령문을 실행: print(a) ⇒ print(1) ⇒ 1 이 출력 두번째 값인 2를 a에 저장 명령문을 실행: print(a) ⇒ print(2) ⇒ 2 가 출력 리스트에 더 이상 데이터가 …","frontmatter":{"date":"April 29, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 12일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220429-python-day12/"}},"next":{"id":"7c8cd88d-969b-5f80-b082-f2f25a31ce09","html":"<h1 id=\"awsawspractitioner자격증합격후기비전공자독학\" style=\"position:relative;\"><a href=\"#awsawspractitioner%EC%9E%90%EA%B2%A9%EC%A6%9D%ED%95%A9%EA%B2%A9%ED%9B%84%EA%B8%B0%EB%B9%84%EC%A0%84%EA%B3%B5%EC%9E%90%EB%8F%85%ED%95%99\" aria-label=\"awsawspractitioner자격증합격후기비전공자독학 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>[AWS]AWS Practitioner 자격증 합격 후기 (비전공자, 독학)</h1>\n<p>22년 1월 15일 CSP<code class=\"language-text\">Cloud Service Provider: 클라우드 사업자</code> 중 가장 규모가 큰 AWS의 첫 단계 자격증인 <code class=\"language-text\">Cloud Practitioner</code> 자격증을 취득했다. 787점으로 높은 점수로 통과한 건 아니라 약간 머쓱하지만(ㅎㅎ) 공부방법과 시험 팁들을 공유해보려 한다.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-28-AWS-Cloud-Practitioner-Photo/2022-04-28-AWS-Cloud-Practitioner-Photo1.png\" alt=\"2022-04-28-AWS-Cloud-Practitioner-Photo1.png\"></p>\n<br/>\n<h2 id=\"1-aws-시험-개요\" style=\"position:relative;\"><a href=\"#1-aws-%EC%8B%9C%ED%97%98-%EA%B0%9C%EC%9A%94\" aria-label=\"1 aws 시험 개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. AWS 시험 개요</h2>\n<p>AWS 자격증 시험 단계는 총 세가지로 크게 세 단계로 분류할 수 있다.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-28-AWS-Cloud-Practitioner-Photo/2022-04-28-AWS-Cloud-Practitioner-Photo2.png\" alt=\"Untitled\"></p>\n<br/>\n<p>공식 사이트의 그림을 살펴보면 <code class=\"language-text\">기초 > 어소시에이트 > 프로페셔널</code> 세 단계로 분류되어있다. 이 세 단계의 자격증 외에도 각 전문 분야에 해당하는 자격증도 별도로 존재하는데, 내가 이번에 취득하게 된 건 가장 기초가 되는 Cloud Practitioner 자격증.</p>\n<br/>\n<p>기본 개념을 망라하는 시험이고 시험 난이도가 크게 높지 않아 클라우드 엔지니어를 희망하는 사람 뿐만 아니라, 클라우드 관련 업계 종사자들도 충분히 볼만한 시험이라고 생각된다.</p>\n<br/>\n<h2 id=\"2-aws-cloud-practitioner-시험-기본-정보\" style=\"position:relative;\"><a href=\"#2-aws-cloud-practitioner-%EC%8B%9C%ED%97%98-%EA%B8%B0%EB%B3%B8-%EC%A0%95%EB%B3%B4\" aria-label=\"2 aws cloud practitioner 시험 기본 정보 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. AWS Cloud Practitioner 시험 기본 정보</h2>\n<ul>\n<li>\n<p><strong>시험 비용:</strong> 100 USD</p>\n</li>\n<li>\n<p><strong>시험 응시 언어:</strong> 영어, 프랑스어, 독일어, 인도네시아어, 이탈리아어, 일본어, 한국어, 포르투갈어, 중국어, 스페인어</p>\n<ul>\n<li>우리같은 비영어권 수험자들은 시험 응시언어를 선택하면 시험시간을 30분 추가로 받을 수 있다.</li>\n<li>시험 응시언어를 한국어로 선택할 경우에는 30분 추가 시간을 할당받을 수 없다. 다만, 시험을 보는 도중에도 한국어 &#x26; 영어 옵션 선택으로 문제를 두 개 언어로 볼 수 있다(하지만 나는 덤프를 영어로만 봤기 때문에 딱히 도움은 되지 않았다 ㅎㅎ).</li>\n</ul>\n</li>\n<li>\n<p><strong>Testing options:</strong> 테스팅 센터 혹은 온라인; Pearson VUE or PSI</p>\n</li>\n<li>\n<p><strong>문항 수:</strong> 65문제</p>\n</li>\n<li>\n<p><strong>시험 커트라인:</strong> 700점/1,000점</p>\n</li>\n</ul>\n<br/>\n<h2 id=\"3-시험-요구-수준\" style=\"position:relative;\"><a href=\"#3-%EC%8B%9C%ED%97%98-%EC%9A%94%EA%B5%AC-%EC%88%98%EC%A4%80\" aria-label=\"3 시험 요구 수준 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 시험 요구 수준</h2>\n<ul>\n<li>AWS 웹사이트에서는 AWS Cloud Pracitioner의 선수 지식으로 <code class=\"language-text\">6개월간의 실무경험</code> 을 들고 있는데, 이는 필요한 지식 수준을 얘기한 것이고, 증빙 제출 등이 필요한 필수 요건은 아니니 비경험자도 편하게 응시하시면 된다.</li>\n</ul>\n<br/>\n<ul>\n<li>AWS Practitioner 시험은 클라우드의 기본 서비스 종류와 개념들을 이해하고 있는지 확인하는 시험으로, 시험 범위 및 출제 비중은 아래와 같다.\n<ul>\n<li>AWS 클라우드의 가치 설명</li>\n<li>AWS 공동책임 모델 이해 및 설명</li>\n<li>보안 모범사례 이해</li>\n<li>AWS 클라우드 비용, 경제성 및 결제 관행 이해</li>\n<li>컴퓨팅, 네트워크, 데이터베이스, 스토리지를 포함한 핵심 AWS 서비스 설명 및 포지셔닝</li>\n<li>일반 사용 사례에 맞는 AWS서비스 식별</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>시험 문제는 모두 <code class=\"language-text\">객관식</code> 으로, 4시선다형과 복수응답형이 혼합되어 출제된다.</li>\n</ul>\n<br/>\n<h2 id=\"4-공부기간\" style=\"position:relative;\"><a href=\"#4-%EA%B3%B5%EB%B6%80%EA%B8%B0%EA%B0%84\" aria-label=\"4 공부기간 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 공부기간</h2>\n<p>나는 퇴근 후에 하루 1<del>2시간 내외로 공부해서 그런지 2주 가량 공부하고 시험을 쳤는데, 클라우드 서비스(특히 IaaS쪽)에 대한 기본 개념이 있는 사람이라면 덤프 위주로 빡세게 준비하면 3</del>4일이면 볼 듯 하다.</p>\n<br/>\n<h2 id=\"5-공부-방법\" style=\"position:relative;\"><a href=\"#5-%EA%B3%B5%EB%B6%80-%EB%B0%A9%EB%B2%95\" aria-label=\"5 공부 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 공부 방법</h2>\n<ul>\n<li><strong>Examtopics</strong> (<a href=\"https://www.examtopics.com/exams/amazon/aws-certified-solutions-architect-professional/\">https://www.examtopics.com</a>)\n<ul>\n<li>웬만한 IT 시험이 으레 그렇듯 AWS 시험들도 모두 덤프(Dump: 기출문제라고 생각하면 편하다)가 존재한다. AWS 시험에서 가장 자주 쓰이는 덤프사이트는 <code class=\"language-text\">Examtopics</code>라는 웹사이트로 나는 이번 시험에서 거의 이걸로 공부했었다.</li>\n<li>덤프사이트로 공부할 때 주의점은 <strong>사이트에 나와있는 답은 오답이 많으니 반드시 Discussion을 확인해야한다</strong> 라는 점.</li>\n<li>참고로 해당 사이트는 페이지를 넘길때마다 캡차를 풀어줘야하는데, 일정 페이지 수가 넘어가면 <code class=\"language-text\">로그인을 하라</code> 거나 <code class=\"language-text\">컨트리뷰션 권한으로 접속해야한다(유료)</code> 라는 메시지가 뜨면서 페이지가 넘어가지 않게 된다. 이럴 때에는 구글 시크릿 모드로 접속하게 되면 페이지를 볼 수 있는데, 페이지 넘어갈 때마다 새 창을 띄우지 않으면 똑같은 메시지가 뜨니 문제를 여러 번 볼 사람은 문제를 카피해놓고 로컬에 저장해서 보는 걸 추천(나는 파일로 만들어서 저장해두고 풀었었다).</li>\n<li>나는 덤프를 550번정도까지만 떠놓고 2~3번 정도 풀어보고 갔는데 처음 보는 문제가 25문제 이상 나왔었다(;;). 덤프로만 볼 사람들은 꼭 문제를 끝까지 보고 각 시험 메인 페이지에 떠있는 댓글들도 확인하고 갈 것. 최근 시험 본 사람들이 댓글로 후기를 남겨놓는데, 덤프 적중율은 물론이고 업데이트 된 새로운 문제들도 댓글에 남겨놓는 경우가 있어 도움이 된다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><strong>Youtube</strong> (<a href=\"https://youtu.be/3hLmDS179YE\">https://youtu.be/3hLmDS179YE</a>)\n<ul>\n<li>내가 공부했던 방법 두번째. 유데미나 다른 긴 강의는 듣고싶지 않아 대충 덤프만 보고 가려다 유투브 알고리즘에 걸려 보게 된 영상. 3시간 짜리 영상인데 간단한 실습과 함께 개념들이 정리되어있다.</li>\n<li>물론 이 영상만으로는 시험통과하기는 어려우나 개념 잡기로는 꽤 괜찮았던 영상이라 추천. 실제로 처음 보는 문제들이 나왔을 때 이 강의에서 듣고 이해했던 개념 베이스로 많이 풀었었다(안들었으면 어쩔뻔).</li>\n<li>영문 자막이 달려있고 발음이 꽤 깔끔해 영어에 큰 거부감이 없다면 문제가 없을 듯 하지만 영문이 너무 싫으신 분들은 아래 Udemy 강의를 보시는 게 나을 것.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><strong>Udemy</strong> (<a href=\"https://www.udemy.com/ko/topic/aws-certified-cloud-practitioner/\">https://www.udemy.com/ko/topic/aws-certified-cloud-practitioner/</a>)\n<ul>\n<li>해외 벤더사에서 주관하는 IT 관련 자격증을 준비해본 분이라면 모를 수 없는 사이트인 <code class=\"language-text\">유데미(Udemy)</code>. 이번에 웅진씽크빅과 전략적 파트너십을 맺게되어 한글 번역본이 꽤나 많이 나오고 있다.</li>\n<li>Cloud Practitioner도 한국어 자막 버전이 출시되어 있으니 영어 자료를 보기 부담스러워 하시는 분들이시면 추천. 나는 Practitioner 시험인데 굳이 돈들이고 공부해야하나 라는 거만한 마음(반성합니다)으로 듣지 않았지만 들으신 분들은 도움 많이 받으신 듯 하다.</li>\n<li>정가는 생각보다 가격대가 있는데 할인 받으면 커피 일주일 참는 정도로 너끈히 낼 수 있는 가격이다. (유데미 수강하시는 할인은 창을 켤 때마다 랜덤하게 갱신 되니 시크릿 창으로 띄워보다 할인이 적용될 때 사면 된다는 팁을 들었었던 기억이 있는데 확실하진 않음.)</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><strong>AWS 공인 교육</strong> (<a href=\"https://aws.amazon.com/ko/training/digital/aws-cloud-practitioner-essentials/?cp=sec&#x26;sec=prep\">https://aws.amazon.com/ko/training/digital/aws-cloud-practitioner-essentials/?cp=sec&#x26;sec=prep</a>)\n<ul>\n<li>AWS에서도 공인 교육 코스를 준비해놓고 있었는데 시험 후기에서 이 강의를 듣고 준비했다는 분들은 많이 않은 듯 해 나는 패스했었다.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<h2 id=\"6-수험료-할인-방법\" style=\"position:relative;\"><a href=\"#6-%EC%88%98%ED%97%98%EB%A3%8C-%ED%95%A0%EC%9D%B8-%EB%B0%A9%EB%B2%95\" aria-label=\"6 수험료 할인 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. 수험료 할인 방법</h2>\n<p>AWS는 제일 잘 팔리는 솔루션이라 그런지 GCP(Google Cloud Platform) 이나 Microsoft Azure 처럼 시험 할인 바우처를 호락호락하게(?) 주지는 않는 편. AWS 자격증 시험에 합격하게 되면 50% 할인 바우처가 나오게 되는데, Cloud Practitioner는 가장 초급 단계의 시험이기 때문에 이런 바우처를 거의 쓸 수 없다.</p>\n<br/>\n<p>다만, 가끔 열리는 세미나에서 50% 할인 바우처를 나눠주기도 하니 잘 살펴보도록 하자. 나는 <code class=\"language-text\">IT 자격증 AWS GCP Azure NCP 아무말</code> 이라는 오픈카톡에서 <code class=\"language-text\">AWS 클라우드 로드쇼</code> <code class=\"language-text\">AWS 자격증 챌린지</code> 두 개 이벤트를 알게 되어 이벤트 참여 시 나눠주는 Practitioner &#x26; SAA 50% 바우처(시험 공부를 미루고 미루다 SAA 바우처는 결국 날렸다 ㅎ)를 활용해 이번 시험을 신청했었다.</p>\n<br/>\n<h2 id=\"7-시험-신청과-결과-확인\" style=\"position:relative;\"><a href=\"#7-%EC%8B%9C%ED%97%98-%EC%8B%A0%EC%B2%AD%EA%B3%BC-%EA%B2%B0%EA%B3%BC-%ED%99%95%EC%9D%B8\" aria-label=\"7 시험 신청과 결과 확인 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 시험 신청과 결과 확인</h2>\n<ul>\n<li><strong>시험 신청</strong>\n<ul>\n<li>AWS Training 웹사이트에서 (<a href=\"http://aws.training/Certification\">aws.training/Certification</a>) 가능하다. 회원가입 필수.</li>\n<li>시험 취소 &#x26; 시험 일정변경은 시험 시간 24시간 전까지 가능. 기간 제한이 있는 바우처의 경우 바우처 유효기간 내에만 변경이 가능하니 참고하시길.</li>\n<li>Pearson VUE / PSI 두 개 옵션이 있는데 나는 PSI로 봤었다. 별 이유는 없고 스케쥴이 나한테 맞는 걸로 열려있어서 선택했었음.</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><strong>시험 장소</strong>\n<ul>\n<li>시험은 테스팅 센터 혹은 온라인시험으로 볼 수 있는데, 내가 신청했을 때에는 테스팅 센터가 타임슬롯이 없어 온라인 시험으로 신청했었다.</li>\n<li>온라인으로 봤을 때의 시험 준비물은 여권, 그리고 모니터가 없고 다른 사람이 들어오지 않는 조용한 방이 필요하다.\n<ul>\n<li>수험 전 시험용 설치프로그램 및 시스템 호환성 체크를 진행해야하는데, 시험 당일 하려고 하면 갑작스럽게 문제가 생길 때 엄청 당황되니 시험 전날 쯤 미리 설치 및 체크를 완료해 두는 것이 좋다.</li>\n<li>이어폰은 착용할 수 없으니 노트북 스피커를 이용해야한다.</li>\n<li>시험 보기 전 감독관이 방 내부 및 책상 위를 체크하는데, 나는 미리 다 치워놔서 그런지 딴지를 걸거나 하지는 않고 바로 끝났다.</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li><strong>시험 결과</strong>\n<ul>\n<li>시험을 끝낸 뒤 설문조사를 마치면 바로 합격 여부를 확인할 수 있다.</li>\n<li>합격 통지 메일은 당일 및 2~3일내 발송되며, 득점 내역(Score report) 및 자격증 PDF는 자격증 사이트에서 확인 및 다운로드 할 수 있다.</li>\n</ul>\n</li>\n</ul>\n<br/>","frontmatter":{"date":"April 28, 2022","title":"AWS Cloud Practitioner 자격증 합격 후기 (비전공자, 독학)","categories":"클라우드","author":"jinnypark9393","emoji":"💫"},"fields":{"slug":"/220428-cloud-aws-cloud-practitioner/"}},"prev":{"id":"a85b8150-6647-585d-8c9e-907b2aa5d060","html":"<p>오늘도 어제에 이어서 “<a href=\"https://fastcampus.co.kr/dev_online_pyweb\">한 번에 끝내는 파이썬 웹 개발 초격차 패키지 Online</a>” 의 챕터 5-6. 반복문 개념(2)를 듣고 정리해보았다. 참고로 이 포스팅은 공부용으로 강의 내용을 요약한 것으로 자세한 강의 내용은 위 링크를 참조 할 것.</p>\n<p><br/><br/></p>\n<p>아래는 공부 인증 사진.</p>\n<br/>\n<p><img src=\"/assets/images/2022-04-30-Python-Photo/2022-04-30-Python-Photo1.jpg\" alt=\"2022-04-30-Python-Photo1\"></p>\n<p><img src=\"/assets/images/2022-04-30-Python-Photo/2022-04-30-Python-Photo2.jpg\" alt=\"2022-04-30-Python-Photo2\"></p>\n<p><br/><br/></p>\n<h1 id=\"7-반복문-개념2\" style=\"position:relative;\"><a href=\"#7-%EB%B0%98%EB%B3%B5%EB%AC%B8-%EA%B0%9C%EB%85%902\" aria-label=\"7 반복문 개념2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7. 반복문 개념(2)</h1>\n<h2 id=\"1-while-사용법\" style=\"position:relative;\"><a href=\"#1-while-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"1 while 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. while 사용법</h2>\n<ul>\n<li>for와의 차이점은?\n<ul>\n<li>for문 : 반복할 횟수가 정해져 있을 때</li>\n<li>while문: 반복할 횟수가 정해져있지 않을 때</li>\n</ul>\n</li>\n</ul>\n<br/>\n<ul>\n<li>while 사용법</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 초기식</span>\n<span class=\"token comment\"># while 조건식:</span>\n<span class=\"token comment\">#     반복할 명령</span>\n<span class=\"token comment\">#     증감식</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span><span class=\"token number\">10</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 복합할당연산자 i + 1 = i</span></code></pre></div>\n<ul>\n<li><code class=\"language-text\">i = 0</code> : 반복문에 사용되는 변수의 값을 지정</li>\n<li><code class=\"language-text\">while i &lt; 10:</code> : 반복에 대한 조건 체크. 이 식이 false가 될 때까지 반복.</li>\n<li><code class=\"language-text\">증감식</code> : 반복하는 작업을 위해 변수값 증가.</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"2-무한루프와-break\" style=\"position:relative;\"><a href=\"#2-%EB%AC%B4%ED%95%9C%EB%A3%A8%ED%94%84%EC%99%80-break\" aria-label=\"2 무한루프와 break permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 무한루프와 break</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while True:</span>\n<span class=\"token comment\">#    반복할 명령</span>\n<span class=\"token comment\">#    if 조건식:</span>\n<span class=\"token comment\">#        break</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"종료하려면 exit을 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span>\n</code></pre></div>\n<ul>\n<li>조건식 대신 불리언(Boolean) 값을 불러온다.</li>\n<li>참일 경우 break를 만나기 전까지 명령을 계속 반복한다. (가장 가까운 반복문만 빠져나오게 됨)</li>\n</ul>\n<p><br/><br/></p>\n<h2 id=\"3-실습\" style=\"position:relative;\"><a href=\"#3-%EC%8B%A4%EC%8A%B5\" aria-label=\"3 실습 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 실습</h2>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while</span>\n<span class=\"token comment\"># : 보통 반복횟수가 정해지지 않았을 때 사용한다.</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">5</span> <span class=\"token comment\"># 초기식</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">9</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 조건식</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">1</span> <span class=\"token comment\"># 증감식</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">5</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">6</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">7</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">8</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># while</span>\n<span class=\"token comment\"># : 보통 반복횟수가 정해지지 않았을 때 사용한다.</span>\n\ni <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token comment\"># 초기식</span>\n<span class=\"token keyword\">while</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 조건식</span>\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">\"번째 다짐, 나는 할 수 있다!\"</span><span class=\"token punctuation\">)</span>\n    i <span class=\"token operator\">+=</span> <span class=\"token number\">2</span> <span class=\"token comment\"># 증감식</span></code></pre></div>\n<br/>\n<ul>\n<li>결과 출력</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n<span class=\"token number\">0</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">2</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">4</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">6</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!\n<span class=\"token number\">8</span> 번째 다짐<span class=\"token punctuation\">,</span> 나는 할 수 있다!</code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># 무한루프</span>\n<span class=\"token comment\"># : 조건식에 True를 넣어서 항상 반복되게 만든 것.</span>\n\n<span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span>\n    x <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"종료하려면 exit을 입력하세요 >>>\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> x <span class=\"token operator\">==</span> <span class=\"token string\">\"exit\"</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">break</span></code></pre></div>\n<br/>\n<ul>\n<li>출력 결과</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token punctuation\">(</span>myvenv<span class=\"token punctuation\">)</span> ➜  python_basic <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>pyt\nhon_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span><span class=\"token builtin\">bin</span><span class=\"token operator\">/</span>python <span class=\"token operator\">/</span>Users<span class=\"token operator\">/</span>usr<span class=\"token operator\">/</span>Documents<span class=\"token operator\">/</span>\npython_basic<span class=\"token operator\">/</span>myvenv<span class=\"token operator\">/</span>Chapter5<span class=\"token operator\">/</span><span class=\"token number\">10.</span>반복문개념_while<span class=\"token punctuation\">.</span>py\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>exid\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>a\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>b\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>c\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>d\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>e\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>f\n종료하려면 exit을 입력하세요 <span class=\"token operator\">>></span><span class=\"token operator\">></span>exit</code></pre></div>\n<br/>\n<p>이번 포스팅에서는 반복문 개념에 대해서 알아보았다. 다음 포스팅에서는 반복문 실습문제를 풀어보도록 하자.</p>\n<p><br/><br/></p>\n<p><strong>본 포스팅은 패스트캠퍼스 환급 챌린지 참여를 위해 작성되었습니다.</strong></p>\n<br/>\n<ul>\n<li>패스트캠퍼스 강의 등록하기: <a href=\"https://bit.ly/3L3avNW\">https://bit.ly/3L3avNW</a></li>\n</ul>\n<br/>\n<p><strong>#패스트캠퍼스 #패캠챌린지 #직장인인강 #직장인자기계발 #패스트캠퍼스후기 #캐시백챌린지 #캐시백 #환급챌린지 #한번에끝내는파이썬웹개발초격차패키지Online</strong></p>","frontmatter":{"date":"April 30, 2022","title":"Python - 패스트캠퍼스 캐시백 챌린지 13일차","categories":"프로그래밍","author":"jinnypark9393","emoji":"🐍"},"fields":{"slug":"/220430-python-day13/"}},"site":{"siteMetadata":{"siteUrl":"https://jinnypark9393.github.io","comments":{"utterances":{"repo":"jinnypark9393/jinnypark9393.github.io"}}}}},"pageContext":{"slug":"/220429-python-day12/","nextSlug":"/220428-cloud-aws-cloud-practitioner/","prevSlug":"/220430-python-day13/"}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}