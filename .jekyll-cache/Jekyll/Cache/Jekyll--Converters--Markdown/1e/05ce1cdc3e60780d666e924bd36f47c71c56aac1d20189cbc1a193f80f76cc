I"3<p><br /><br /></p>

<h1 id="6-etcd-백업파일-생성하기">6. ETCD 백업파일 생성하기</h1>

<h2 id="문제-요건">[문제 요건]</h2>

<ul>
  <li>ETCD 백업을 <code class="language-plaintext highlighter-rouge">controlplane</code> 의 <code class="language-plaintext highlighter-rouge">/opt/etcd-backup.db</code>에 생성한다.</li>
  <li>채점기준: 트러블 슈팅으로 이슈 해결</li>
</ul>

<p><br /><br /></p>

<h2 id="내-풀이">[내 풀이]</h2>

<ul>
  <li><code class="language-plaintext highlighter-rouge">kubectl describe pod etcd -n kube-system</code> 명령어를 사용해 etcd 파드 정보를 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane:/opt# k describe pod etcd <span class="nt">-n</span> kube-system 
Name:                 etcd-controlplane
Namespace:            kube-system
Priority:             2000001000
Priority Class Name:  system-node-critical
Node:                 controlplane/10.4.57.3
Start Time:           Sun, 15 May 2022 04:14:46 +0000
Labels:               <span class="nv">component</span><span class="o">=</span>etcd
                      <span class="nv">tier</span><span class="o">=</span>control-plane
Annotations:          kubeadm.kubernetes.io/etcd.advertise-client-urls: https://10.4.57.3:2379
                      kubernetes.io/config.hash: 722e84fe51d881b86833db89a526d572
                      kubernetes.io/config.mirror: 722e84fe51d881b86833db89a526d572
                      kubernetes.io/config.seen: 2022-05-15T04:14:44.965341411Z
                      kubernetes.io/config.source: file
Status:               Running
IP:                   10.4.57.3
IPs:
  IP:           10.4.57.3
Controlled By:  Node/controlplane
Containers:
  etcd:
    Container ID:  docker://08595528da5102b7b25f6498f97630b6b0bcef22c4f5e2ad93156112cffa63dd
    Image:         k8s.gcr.io/etcd:3.4.9-1
    Image ID:      docker-pullable://k8s.gcr.io/etcd@sha256:735f090b15d5efc576da1602d8c678bf39a7605c0718ed915daec8f2297db2ff
    Port:          &lt;none&gt;
    Host Port:     &lt;none&gt;
    Command:
      etcd
      <span class="nt">--advertise-client-urls</span><span class="o">=</span>https://10.4.57.3:2379
      <span class="nt">--cert-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/server.crt
      <span class="nt">--client-cert-auth</span><span class="o">=</span><span class="nb">true</span>
      <span class="nt">--data-dir</span><span class="o">=</span>/var/lib/etcd
      <span class="nt">--initial-advertise-peer-urls</span><span class="o">=</span>https://10.4.57.3:2380
      <span class="nt">--initial-cluster</span><span class="o">=</span><span class="nv">controlplane</span><span class="o">=</span>https://10.4.57.3:2380
      <span class="nt">--key-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/server.key
      <span class="nt">--listen-client-urls</span><span class="o">=</span>https://127.0.0.1:2379,https://10.4.57.3:2379
      <span class="nt">--listen-metrics-urls</span><span class="o">=</span>http://127.0.0.1:2381
      <span class="nt">--listen-peer-urls</span><span class="o">=</span>https://10.4.57.3:2380
      <span class="nt">--name</span><span class="o">=</span>controlplane
      <span class="nt">--peer-cert-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/peer.crt
      <span class="nt">--peer-client-cert-auth</span><span class="o">=</span><span class="nb">true</span>
      <span class="nt">--peer-key-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/peer.key
      <span class="nt">--peer-trusted-ca-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/ca.crt
      <span class="nt">--snapshot-count</span><span class="o">=</span>10000
      <span class="nt">--trusted-ca-file</span><span class="o">=</span>/etc/kubernetes/pki/etcd/ca.crt
    State:          Running
      Started:      Sun, 15 May 2022 04:14:31 +0000
    Ready:          True
    Restart Count:  0
    Liveness:       http-get http://127.0.0.1:2381/health <span class="nv">delay</span><span class="o">=</span>10s <span class="nb">timeout</span><span class="o">=</span>15s <span class="nv">period</span><span class="o">=</span>10s <span class="c">#success=1 #failure=8</span>
    Startup:        http-get http://127.0.0.1:2381/health <span class="nv">delay</span><span class="o">=</span>10s <span class="nb">timeout</span><span class="o">=</span>15s <span class="nv">period</span><span class="o">=</span>10s <span class="c">#success=1 #failure=24</span>
    Environment:    &lt;none&gt;
    Mounts:
      /etc/kubernetes/pki/etcd from etcd-certs <span class="o">(</span>rw<span class="o">)</span>
      /var/lib/etcd from etcd-data <span class="o">(</span>rw<span class="o">)</span>
Conditions:
  Type              Status
  Initialized       True 
  Ready             True 
  ContainersReady   True 
  PodScheduled      True 
Volumes:
  etcd-certs:
    Type:          HostPath <span class="o">(</span>bare host directory volume<span class="o">)</span>
    Path:          /etc/kubernetes/pki/etcd
    HostPathType:  DirectoryOrCreate
  etcd-data:
    Type:          HostPath <span class="o">(</span>bare host directory volume<span class="o">)</span>
    Path:          /var/lib/etcd
    HostPathType:  DirectoryOrCreate
QoS Class:         BestEffort
Node-Selectors:    &lt;none&gt;
Tolerations:       :NoExecuteop<span class="o">=</span>Exists
Events:            &lt;none&gt;
</code></pre></div></div>

<ul>
  <li>위의 etcd 파드(POD)의 정보를 참조하여 백업 명령어를 작성한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane:/opt# <span class="nv">ETCDCTL_API</span><span class="o">=</span>3 etcdctl <span class="nt">--endpoints</span><span class="o">=</span>https://127.0.0.1:2379 <span class="se">\</span>
<span class="o">&gt;</span>   <span class="nt">--cacert</span><span class="o">=</span>/etc/kubernetes/pki/etcd/ca.crt <span class="nt">--cert</span><span class="o">=</span>/etc/kubernetes/pki/etcd/server.crt <span class="nt">--key</span><span class="o">=</span>/etc/kubernetes/pki/etcd/server.key <span class="se">\</span>
<span class="o">&gt;</span>   snapshot save /opt/etcd-backup.db
Snapshot saved at /opt/etcd-backup.db
</code></pre></div></div>

<ul>
  <li><code class="language-plaintext highlighter-rouge">--endpoints</code> : listen-client-urls 참조</li>
  <li><code class="language-plaintext highlighter-rouge">--cacert</code> : trusted-ca-file 참조</li>
  <li><code class="language-plaintext highlighter-rouge">--cert</code> : cert-file 참조</li>
  <li><code class="language-plaintext highlighter-rouge">--key</code> : key-file 참조</li>
</ul>

<p><br /></p>

<ul>
  <li>백업파일이 잘 생성되었는지 확인한다.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>root@controlplane:/opt# <span class="nv">ETCDCTL_API</span><span class="o">=</span>3 etcdctl <span class="nt">--write-out</span><span class="o">=</span>table snapshot status /opt/etcd-backup.db
+----------+----------+------------+------------+
|   HASH   | REVISION | TOTAL KEYS | TOTAL SIZE |
+----------+----------+------------+------------+
| aca19208 |    10592 |       1317 |     2.8 MB |
+----------+----------+------------+------------+
</code></pre></div></div>

<h2 id="참고-url">[참고 URL]</h2>

<ul>
  <li>etcd backup: <a href="https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster">https://kubernetes.io/docs/tasks/administer-cluster/configure-upgrade-etcd/#backing-up-an-etcd-cluster</a></li>
</ul>
:ET